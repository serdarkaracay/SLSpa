//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AtoZCapriceModel", "FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_Therapy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OSYS.Web.SPA_Therapy), "SPA_PersonelDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OSYS.Web.SPA_PersonelDetail), true)]
[assembly: EdmRelationshipAttribute("AtoZCapriceModel", "FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OSYS.Web.SPA_PersonelJob), "SPA_PersonelJobDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OSYS.Web.SPA_PersonelJobDetail), true)]
[assembly: EdmRelationshipAttribute("AtoZCapriceModel", "FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_Therapy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OSYS.Web.SPA_Therapy), "SPA_PersonelTherapyDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OSYS.Web.SPA_PersonelTherapyDetail), true)]
[assembly: EdmRelationshipAttribute("AtoZCapriceModel", "FK_SPA_RezervationSchedule_SPA_Status", "SPA_Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OSYS.Web.SPA_Status), "SPA_RezervationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OSYS.Web.SPA_RezervationSchedule), true)]
[assembly: EdmRelationshipAttribute("AtoZCapriceModel", "FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_Therapy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OSYS.Web.SPA_Therapy), "SPA_RezervationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OSYS.Web.SPA_RezervationSchedule), true)]

#endregion

namespace OSYS.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AtoZCapriceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AtoZCapriceEntities object using the connection string found in the 'AtoZCapriceEntities' section of the application configuration file.
        /// </summary>
        public AtoZCapriceEntities() : base("name=AtoZCapriceEntities", "AtoZCapriceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AtoZCapriceEntities object.
        /// </summary>
        public AtoZCapriceEntities(string connectionString) : base(connectionString, "AtoZCapriceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AtoZCapriceEntities object.
        /// </summary>
        public AtoZCapriceEntities(EntityConnection connection) : base(connection, "AtoZCapriceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_Diagnosis> SPA_Diagnosis
        {
            get
            {
                if ((_SPA_Diagnosis == null))
                {
                    _SPA_Diagnosis = base.CreateObjectSet<SPA_Diagnosis>("SPA_Diagnosis");
                }
                return _SPA_Diagnosis;
            }
        }
        private ObjectSet<SPA_Diagnosis> _SPA_Diagnosis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_GuestDiagnosisDetail> SPA_GuestDiagnosisDetail
        {
            get
            {
                if ((_SPA_GuestDiagnosisDetail == null))
                {
                    _SPA_GuestDiagnosisDetail = base.CreateObjectSet<SPA_GuestDiagnosisDetail>("SPA_GuestDiagnosisDetail");
                }
                return _SPA_GuestDiagnosisDetail;
            }
        }
        private ObjectSet<SPA_GuestDiagnosisDetail> _SPA_GuestDiagnosisDetail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_PersonelDetail> SPA_PersonelDetail
        {
            get
            {
                if ((_SPA_PersonelDetail == null))
                {
                    _SPA_PersonelDetail = base.CreateObjectSet<SPA_PersonelDetail>("SPA_PersonelDetail");
                }
                return _SPA_PersonelDetail;
            }
        }
        private ObjectSet<SPA_PersonelDetail> _SPA_PersonelDetail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_PersonelJob> SPA_PersonelJob
        {
            get
            {
                if ((_SPA_PersonelJob == null))
                {
                    _SPA_PersonelJob = base.CreateObjectSet<SPA_PersonelJob>("SPA_PersonelJob");
                }
                return _SPA_PersonelJob;
            }
        }
        private ObjectSet<SPA_PersonelJob> _SPA_PersonelJob;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_PersonelJobDetail> SPA_PersonelJobDetail
        {
            get
            {
                if ((_SPA_PersonelJobDetail == null))
                {
                    _SPA_PersonelJobDetail = base.CreateObjectSet<SPA_PersonelJobDetail>("SPA_PersonelJobDetail");
                }
                return _SPA_PersonelJobDetail;
            }
        }
        private ObjectSet<SPA_PersonelJobDetail> _SPA_PersonelJobDetail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_PersonelTherapyDetail> SPA_PersonelTherapyDetail
        {
            get
            {
                if ((_SPA_PersonelTherapyDetail == null))
                {
                    _SPA_PersonelTherapyDetail = base.CreateObjectSet<SPA_PersonelTherapyDetail>("SPA_PersonelTherapyDetail");
                }
                return _SPA_PersonelTherapyDetail;
            }
        }
        private ObjectSet<SPA_PersonelTherapyDetail> _SPA_PersonelTherapyDetail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_RezervationSchedule> SPA_RezervationSchedule
        {
            get
            {
                if ((_SPA_RezervationSchedule == null))
                {
                    _SPA_RezervationSchedule = base.CreateObjectSet<SPA_RezervationSchedule>("SPA_RezervationSchedule");
                }
                return _SPA_RezervationSchedule;
            }
        }
        private ObjectSet<SPA_RezervationSchedule> _SPA_RezervationSchedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_Status> SPA_Status
        {
            get
            {
                if ((_SPA_Status == null))
                {
                    _SPA_Status = base.CreateObjectSet<SPA_Status>("SPA_Status");
                }
                return _SPA_Status;
            }
        }
        private ObjectSet<SPA_Status> _SPA_Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SPA_Therapy> SPA_Therapy
        {
            get
            {
                if ((_SPA_Therapy == null))
                {
                    _SPA_Therapy = base.CreateObjectSet<SPA_Therapy>("SPA_Therapy");
                }
                return _SPA_Therapy;
            }
        }
        private ObjectSet<SPA_Therapy> _SPA_Therapy;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_Diagnosis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_Diagnosis(SPA_Diagnosis sPA_Diagnosis)
        {
            base.AddObject("SPA_Diagnosis", sPA_Diagnosis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_GuestDiagnosisDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_GuestDiagnosisDetail(SPA_GuestDiagnosisDetail sPA_GuestDiagnosisDetail)
        {
            base.AddObject("SPA_GuestDiagnosisDetail", sPA_GuestDiagnosisDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_PersonelDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_PersonelDetail(SPA_PersonelDetail sPA_PersonelDetail)
        {
            base.AddObject("SPA_PersonelDetail", sPA_PersonelDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_PersonelJob EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_PersonelJob(SPA_PersonelJob sPA_PersonelJob)
        {
            base.AddObject("SPA_PersonelJob", sPA_PersonelJob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_PersonelJobDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_PersonelJobDetail(SPA_PersonelJobDetail sPA_PersonelJobDetail)
        {
            base.AddObject("SPA_PersonelJobDetail", sPA_PersonelJobDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_PersonelTherapyDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_PersonelTherapyDetail(SPA_PersonelTherapyDetail sPA_PersonelTherapyDetail)
        {
            base.AddObject("SPA_PersonelTherapyDetail", sPA_PersonelTherapyDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_RezervationSchedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_RezervationSchedule(SPA_RezervationSchedule sPA_RezervationSchedule)
        {
            base.AddObject("SPA_RezervationSchedule", sPA_RezervationSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_Status(SPA_Status sPA_Status)
        {
            base.AddObject("SPA_Status", sPA_Status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SPA_Therapy EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSPA_Therapy(SPA_Therapy sPA_Therapy)
        {
            base.AddObject("SPA_Therapy", sPA_Therapy);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_Diagnosis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_Diagnosis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_Diagnosis object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="diagnosisName">Initial value of the DiagnosisName property.</param>
        public static SPA_Diagnosis CreateSPA_Diagnosis(global::System.Int32 id, global::System.String diagnosisName)
        {
            SPA_Diagnosis sPA_Diagnosis = new SPA_Diagnosis();
            sPA_Diagnosis.ID = id;
            sPA_Diagnosis.DiagnosisName = diagnosisName;
            return sPA_Diagnosis;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiagnosisName
        {
            get
            {
                return _DiagnosisName;
            }
            set
            {
                OnDiagnosisNameChanging(value);
                ReportPropertyChanging("DiagnosisName");
                _DiagnosisName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiagnosisName");
                OnDiagnosisNameChanged();
            }
        }
        private global::System.String _DiagnosisName;
        partial void OnDiagnosisNameChanging(global::System.String value);
        partial void OnDiagnosisNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_GuestDiagnosisDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_GuestDiagnosisDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_GuestDiagnosisDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="personelID">Initial value of the PersonelID property.</param>
        /// <param name="guestID">Initial value of the GuestID property.</param>
        /// <param name="diagnosisID">Initial value of the DiagnosisID property.</param>
        /// <param name="descDiagnosis">Initial value of the DescDiagnosis property.</param>
        /// <param name="completed">Initial value of the Completed property.</param>
        /// <param name="completedDateTime">Initial value of the CompletedDateTime property.</param>
        public static SPA_GuestDiagnosisDetail CreateSPA_GuestDiagnosisDetail(global::System.Int64 id, global::System.Guid personelID, global::System.Guid guestID, global::System.Int32 diagnosisID, global::System.String descDiagnosis, global::System.Boolean completed, global::System.DateTime completedDateTime)
        {
            SPA_GuestDiagnosisDetail sPA_GuestDiagnosisDetail = new SPA_GuestDiagnosisDetail();
            sPA_GuestDiagnosisDetail.ID = id;
            sPA_GuestDiagnosisDetail.PersonelID = personelID;
            sPA_GuestDiagnosisDetail.GuestID = guestID;
            sPA_GuestDiagnosisDetail.DiagnosisID = diagnosisID;
            sPA_GuestDiagnosisDetail.DescDiagnosis = descDiagnosis;
            sPA_GuestDiagnosisDetail.Completed = completed;
            sPA_GuestDiagnosisDetail.CompletedDateTime = completedDateTime;
            return sPA_GuestDiagnosisDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonelID
        {
            get
            {
                return _PersonelID;
            }
            set
            {
                OnPersonelIDChanging(value);
                ReportPropertyChanging("PersonelID");
                _PersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonelID");
                OnPersonelIDChanged();
            }
        }
        private global::System.Guid _PersonelID;
        partial void OnPersonelIDChanging(global::System.Guid value);
        partial void OnPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GuestID
        {
            get
            {
                return _GuestID;
            }
            set
            {
                OnGuestIDChanging(value);
                ReportPropertyChanging("GuestID");
                _GuestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GuestID");
                OnGuestIDChanged();
            }
        }
        private global::System.Guid _GuestID;
        partial void OnGuestIDChanging(global::System.Guid value);
        partial void OnGuestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiagnosisID
        {
            get
            {
                return _DiagnosisID;
            }
            set
            {
                OnDiagnosisIDChanging(value);
                ReportPropertyChanging("DiagnosisID");
                _DiagnosisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiagnosisID");
                OnDiagnosisIDChanged();
            }
        }
        private global::System.Int32 _DiagnosisID;
        partial void OnDiagnosisIDChanging(global::System.Int32 value);
        partial void OnDiagnosisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TherparyID
        {
            get
            {
                return _TherparyID;
            }
            set
            {
                OnTherparyIDChanging(value);
                ReportPropertyChanging("TherparyID");
                _TherparyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TherparyID");
                OnTherparyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TherparyID;
        partial void OnTherparyIDChanging(Nullable<global::System.Int32> value);
        partial void OnTherparyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescDiagnosis
        {
            get
            {
                return _DescDiagnosis;
            }
            set
            {
                OnDescDiagnosisChanging(value);
                ReportPropertyChanging("DescDiagnosis");
                _DescDiagnosis = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescDiagnosis");
                OnDescDiagnosisChanged();
            }
        }
        private global::System.String _DescDiagnosis;
        partial void OnDescDiagnosisChanging(global::System.String value);
        partial void OnDescDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private global::System.Boolean _Completed;
        partial void OnCompletedChanging(global::System.Boolean value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CompletedDateTime
        {
            get
            {
                return _CompletedDateTime;
            }
            set
            {
                OnCompletedDateTimeChanging(value);
                ReportPropertyChanging("CompletedDateTime");
                _CompletedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedDateTime");
                OnCompletedDateTimeChanged();
            }
        }
        private global::System.DateTime _CompletedDateTime;
        partial void OnCompletedDateTimeChanging(global::System.DateTime value);
        partial void OnCompletedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedPersonelID
        {
            get
            {
                return _CreatedPersonelID;
            }
            set
            {
                OnCreatedPersonelIDChanging(value);
                ReportPropertyChanging("CreatedPersonelID");
                _CreatedPersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedPersonelID");
                OnCreatedPersonelIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedPersonelID;
        partial void OnCreatedPersonelIDChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDatetime
        {
            get
            {
                return _CreatedDatetime;
            }
            set
            {
                OnCreatedDatetimeChanging(value);
                ReportPropertyChanging("CreatedDatetime");
                _CreatedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDatetime");
                OnCreatedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDatetime;
        partial void OnCreatedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedPersonelID
        {
            get
            {
                return _ModifiedPersonelID;
            }
            set
            {
                OnModifiedPersonelIDChanging(value);
                ReportPropertyChanging("ModifiedPersonelID");
                _ModifiedPersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedPersonelID");
                OnModifiedPersonelIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedPersonelID;
        partial void OnModifiedPersonelIDChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDatetime
        {
            get
            {
                return _ModifiedDatetime;
            }
            set
            {
                OnModifiedDatetimeChanging(value);
                ReportPropertyChanging("ModifiedDatetime");
                _ModifiedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDatetime");
                OnModifiedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDatetime;
        partial void OnModifiedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDatetimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_PersonelDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_PersonelDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_PersonelDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="personelID">Initial value of the PersonelID property.</param>
        /// <param name="therapyID">Initial value of the TherapyID property.</param>
        public static SPA_PersonelDetail CreateSPA_PersonelDetail(global::System.Guid id, global::System.Guid personelID, global::System.Int32 therapyID)
        {
            SPA_PersonelDetail sPA_PersonelDetail = new SPA_PersonelDetail();
            sPA_PersonelDetail.ID = id;
            sPA_PersonelDetail.PersonelID = personelID;
            sPA_PersonelDetail.TherapyID = therapyID;
            return sPA_PersonelDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonelID
        {
            get
            {
                return _PersonelID;
            }
            set
            {
                if (_PersonelID != value)
                {
                    OnPersonelIDChanging(value);
                    ReportPropertyChanging("PersonelID");
                    _PersonelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonelID");
                    OnPersonelIDChanged();
                }
            }
        }
        private global::System.Guid _PersonelID;
        partial void OnPersonelIDChanging(global::System.Guid value);
        partial void OnPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TherapyID
        {
            get
            {
                return _TherapyID;
            }
            set
            {
                OnTherapyIDChanging(value);
                ReportPropertyChanging("TherapyID");
                _TherapyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TherapyID");
                OnTherapyIDChanged();
            }
        }
        private global::System.Int32 _TherapyID;
        partial void OnTherapyIDChanging(global::System.Int32 value);
        partial void OnTherapyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_Therapy")]
        public SPA_Therapy SPA_Therapy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_Therapy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_Therapy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SPA_Therapy> SPA_TherapyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_Therapy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_Therapy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_PersonelJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_PersonelJob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_PersonelJob object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="jobName">Initial value of the JobName property.</param>
        public static SPA_PersonelJob CreateSPA_PersonelJob(global::System.Guid id, global::System.String jobName)
        {
            SPA_PersonelJob sPA_PersonelJob = new SPA_PersonelJob();
            sPA_PersonelJob.ID = id;
            sPA_PersonelJob.JobName = jobName;
            return sPA_PersonelJob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private global::System.String _JobName;
        partial void OnJobNameChanging(global::System.String value);
        partial void OnJobNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJobDetail")]
        public EntityCollection<SPA_PersonelJobDetail> SPA_PersonelJobDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPA_PersonelJobDetail>("AtoZCapriceModel.FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJobDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPA_PersonelJobDetail>("AtoZCapriceModel.FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJobDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_PersonelJobDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_PersonelJobDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_PersonelJobDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="personelID">Initial value of the PersonelID property.</param>
        /// <param name="personelJobID">Initial value of the PersonelJobID property.</param>
        public static SPA_PersonelJobDetail CreateSPA_PersonelJobDetail(global::System.Guid id, global::System.Guid personelID, global::System.Guid personelJobID)
        {
            SPA_PersonelJobDetail sPA_PersonelJobDetail = new SPA_PersonelJobDetail();
            sPA_PersonelJobDetail.ID = id;
            sPA_PersonelJobDetail.PersonelID = personelID;
            sPA_PersonelJobDetail.PersonelJobID = personelJobID;
            return sPA_PersonelJobDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonelID
        {
            get
            {
                return _PersonelID;
            }
            set
            {
                OnPersonelIDChanging(value);
                ReportPropertyChanging("PersonelID");
                _PersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonelID");
                OnPersonelIDChanged();
            }
        }
        private global::System.Guid _PersonelID;
        partial void OnPersonelIDChanging(global::System.Guid value);
        partial void OnPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonelJobID
        {
            get
            {
                return _PersonelJobID;
            }
            set
            {
                OnPersonelJobIDChanging(value);
                ReportPropertyChanging("PersonelJobID");
                _PersonelJobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonelJobID");
                OnPersonelJobIDChanged();
            }
        }
        private global::System.Guid _PersonelJobID;
        partial void OnPersonelJobIDChanging(global::System.Guid value);
        partial void OnPersonelJobIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJob")]
        public SPA_PersonelJob SPA_PersonelJob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_PersonelJob>("AtoZCapriceModel.FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_PersonelJob>("AtoZCapriceModel.FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SPA_PersonelJob> SPA_PersonelJobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_PersonelJob>("AtoZCapriceModel.FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SPA_PersonelJob>("AtoZCapriceModel.FK_Spa_PersonelJobDetail_SPA_PersonelJob", "SPA_PersonelJob", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_PersonelTherapyDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_PersonelTherapyDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_PersonelTherapyDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="therapyID">Initial value of the TherapyID property.</param>
        /// <param name="personelID">Initial value of the PersonelID property.</param>
        public static SPA_PersonelTherapyDetail CreateSPA_PersonelTherapyDetail(global::System.Int64 id, global::System.Int32 therapyID, global::System.Guid personelID)
        {
            SPA_PersonelTherapyDetail sPA_PersonelTherapyDetail = new SPA_PersonelTherapyDetail();
            sPA_PersonelTherapyDetail.ID = id;
            sPA_PersonelTherapyDetail.TherapyID = therapyID;
            sPA_PersonelTherapyDetail.PersonelID = personelID;
            return sPA_PersonelTherapyDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TherapyID
        {
            get
            {
                return _TherapyID;
            }
            set
            {
                if (_TherapyID != value)
                {
                    OnTherapyIDChanging(value);
                    ReportPropertyChanging("TherapyID");
                    _TherapyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TherapyID");
                    OnTherapyIDChanged();
                }
            }
        }
        private global::System.Int32 _TherapyID;
        partial void OnTherapyIDChanging(global::System.Int32 value);
        partial void OnTherapyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonelID
        {
            get
            {
                return _PersonelID;
            }
            set
            {
                OnPersonelIDChanging(value);
                ReportPropertyChanging("PersonelID");
                _PersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonelID");
                OnPersonelIDChanged();
            }
        }
        private global::System.Guid _PersonelID;
        partial void OnPersonelIDChanging(global::System.Guid value);
        partial void OnPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReplecment
        {
            get
            {
                return _IsReplecment;
            }
            set
            {
                OnIsReplecmentChanging(value);
                ReportPropertyChanging("IsReplecment");
                _IsReplecment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReplecment");
                OnIsReplecmentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReplecment;
        partial void OnIsReplecmentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReplecmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedPersonelID
        {
            get
            {
                return _CreatedPersonelID;
            }
            set
            {
                OnCreatedPersonelIDChanging(value);
                ReportPropertyChanging("CreatedPersonelID");
                _CreatedPersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedPersonelID");
                OnCreatedPersonelIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedPersonelID;
        partial void OnCreatedPersonelIDChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDatetime
        {
            get
            {
                return _CreatedDatetime;
            }
            set
            {
                OnCreatedDatetimeChanging(value);
                ReportPropertyChanging("CreatedDatetime");
                _CreatedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDatetime");
                OnCreatedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDatetime;
        partial void OnCreatedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ModifiedPersonelID
        {
            get
            {
                return _ModifiedPersonelID;
            }
            set
            {
                OnModifiedPersonelIDChanging(value);
                ReportPropertyChanging("ModifiedPersonelID");
                _ModifiedPersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedPersonelID");
                OnModifiedPersonelIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ModifiedPersonelID;
        partial void OnModifiedPersonelIDChanging(Nullable<global::System.Guid> value);
        partial void OnModifiedPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDatetime
        {
            get
            {
                return _ModifiedDatetime;
            }
            set
            {
                OnModifiedDatetimeChanging(value);
                ReportPropertyChanging("ModifiedDatetime");
                _ModifiedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDatetime");
                OnModifiedDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDatetime;
        partial void OnModifiedDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDatetimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_Therapy")]
        public SPA_Therapy SPA_Therapy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_Therapy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_Therapy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SPA_Therapy> SPA_TherapyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_Therapy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_Therapy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_RezervationSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_RezervationSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_RezervationSchedule object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="personelID">Initial value of the PersonelID property.</param>
        /// <param name="guestID">Initial value of the GuestID property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        /// <param name="endDateTime">Initial value of the EndDateTime property.</param>
        public static SPA_RezervationSchedule CreateSPA_RezervationSchedule(global::System.Guid id, global::System.Guid personelID, global::System.Guid guestID, global::System.Guid statusID, global::System.DateTime startDateTime, global::System.DateTime endDateTime)
        {
            SPA_RezervationSchedule sPA_RezervationSchedule = new SPA_RezervationSchedule();
            sPA_RezervationSchedule.ID = id;
            sPA_RezervationSchedule.PersonelID = personelID;
            sPA_RezervationSchedule.GuestID = guestID;
            sPA_RezervationSchedule.StatusID = statusID;
            sPA_RezervationSchedule.StartDateTime = startDateTime;
            sPA_RezervationSchedule.EndDateTime = endDateTime;
            return sPA_RezervationSchedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonelID
        {
            get
            {
                return _PersonelID;
            }
            set
            {
                OnPersonelIDChanging(value);
                ReportPropertyChanging("PersonelID");
                _PersonelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonelID");
                OnPersonelIDChanged();
            }
        }
        private global::System.Guid _PersonelID;
        partial void OnPersonelIDChanging(global::System.Guid value);
        partial void OnPersonelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GuestID
        {
            get
            {
                return _GuestID;
            }
            set
            {
                OnGuestIDChanging(value);
                ReportPropertyChanging("GuestID");
                _GuestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GuestID");
                OnGuestIDChanged();
            }
        }
        private global::System.Guid _GuestID;
        partial void OnGuestIDChanging(global::System.Guid value);
        partial void OnGuestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Guid _StatusID;
        partial void OnStatusIDChanging(global::System.Guid value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCanceled
        {
            get
            {
                return _IsCanceled;
            }
            set
            {
                OnIsCanceledChanging(value);
                ReportPropertyChanging("IsCanceled");
                _IsCanceled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCanceled");
                OnIsCanceledChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCanceled;
        partial void OnIsCanceledChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCanceledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TherapyID
        {
            get
            {
                return _TherapyID;
            }
            set
            {
                OnTherapyIDChanging(value);
                ReportPropertyChanging("TherapyID");
                _TherapyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TherapyID");
                OnTherapyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TherapyID;
        partial void OnTherapyIDChanging(Nullable<global::System.Int32> value);
        partial void OnTherapyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_RezervationSchedule_SPA_Status", "SPA_Status")]
        public SPA_Status SPA_Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Status>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Status", "SPA_Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Status>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Status", "SPA_Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SPA_Status> SPA_StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Status>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Status", "SPA_Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SPA_Status>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Status", "SPA_Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_Therapy")]
        public SPA_Therapy SPA_Therapy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_Therapy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_Therapy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SPA_Therapy> SPA_TherapyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_Therapy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SPA_Therapy>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_Therapy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_Status object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static SPA_Status CreateSPA_Status(global::System.Guid id, global::System.String statusName)
        {
            SPA_Status sPA_Status = new SPA_Status();
            sPA_Status.ID = id;
            sPA_Status.StatusName = statusName;
            return sPA_Status;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_RezervationSchedule_SPA_Status", "SPA_RezervationSchedule")]
        public EntityCollection<SPA_RezervationSchedule> SPA_RezervationSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPA_RezervationSchedule>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Status", "SPA_RezervationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPA_RezervationSchedule>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Status", "SPA_RezervationSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AtoZCapriceModel", Name="SPA_Therapy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SPA_Therapy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SPA_Therapy object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="therapyName">Initial value of the TherapyName property.</param>
        public static SPA_Therapy CreateSPA_Therapy(global::System.Int32 id, global::System.String therapyName)
        {
            SPA_Therapy sPA_Therapy = new SPA_Therapy();
            sPA_Therapy.ID = id;
            sPA_Therapy.TherapyName = therapyName;
            return sPA_Therapy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TherapyName
        {
            get
            {
                return _TherapyName;
            }
            set
            {
                OnTherapyNameChanging(value);
                ReportPropertyChanging("TherapyName");
                _TherapyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TherapyName");
                OnTherapyNameChanged();
            }
        }
        private global::System.String _TherapyName;
        partial void OnTherapyNameChanging(global::System.String value);
        partial void OnTherapyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonelCount
        {
            get
            {
                return _PersonelCount;
            }
            set
            {
                OnPersonelCountChanging(value);
                ReportPropertyChanging("PersonelCount");
                _PersonelCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonelCount");
                OnPersonelCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonelCount;
        partial void OnPersonelCountChanging(Nullable<global::System.Int32> value);
        partial void OnPersonelCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTax
        {
            get
            {
                return _IsTax;
            }
            set
            {
                OnIsTaxChanging(value);
                ReportPropertyChanging("IsTax");
                _IsTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTax");
                OnIsTaxChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTax;
        partial void OnIsTaxChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_PersonelDetail")]
        public EntityCollection<SPA_PersonelDetail> SPA_PersonelDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPA_PersonelDetail>("AtoZCapriceModel.FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_PersonelDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPA_PersonelDetail>("AtoZCapriceModel.FK_SPA_Therapy_ID_SPA_PersonelDetail_TherapyID", "SPA_PersonelDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_PersonelTherapyDetail")]
        public EntityCollection<SPA_PersonelTherapyDetail> SPA_PersonelTherapyDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPA_PersonelTherapyDetail>("AtoZCapriceModel.FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_PersonelTherapyDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPA_PersonelTherapyDetail>("AtoZCapriceModel.FK_SPA_PersonelTherapyDetail_SPA_Therapy", "SPA_PersonelTherapyDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AtoZCapriceModel", "FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_RezervationSchedule")]
        public EntityCollection<SPA_RezervationSchedule> SPA_RezervationSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SPA_RezervationSchedule>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_RezervationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SPA_RezervationSchedule>("AtoZCapriceModel.FK_SPA_RezervationSchedule_SPA_Therapy", "SPA_RezervationSchedule", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
