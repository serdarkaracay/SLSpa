<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:c1="clr-namespace:C1.Silverlight.Maps;assembly=C1.Silverlight.Maps.5"
					xmlns:c11="http://schemas.componentone.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"              
					xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
					xmlns:OSYS="clr-namespace:OSYS"
					xmlns:vtClasses="clr-namespace:OSYS.Classes"
					xmlns:vtPages="clr-namespace:OSYS.Pages"
					xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:local="clr-namespace:OSYS"
					mc:Ignorable="d">


    <local:BitmapToBitmapSourceConverter x:Key="BitmapToBitmapSourceConverter"/>
    <vtClasses:ConverterSubtract x:Key="ConverterSubtract" />
    <vtClasses:ConverterBoolVisibility x:Key="ConverterBoolVisibility" />
    <vtClasses:ConverterDoubleToInt x:Key="ConverterDoubleToInt" />
    <vtClasses:ConverterDouble x:Key="ConverterDouble" />
    <vtClasses:ConverterDouble x:Key="ConverterKdv" />
    <vtClasses:ConverterDateTime x:Key="ConverterDateTime" />
    <vtClasses:ConverterDate x:Key="ConverterDate" />
    <vtClasses:ConverterTime x:Key="ConverterTime" />
    <vtClasses:ConverterLatLong x:Key="ConverterLatLong" />
    <vtClasses:ConverterInt x:Key="ConverterInt" />
    <vtClasses:ConverterShipColor x:Key="ConverterShipColor" />
    <vtClasses:ConverterShipAndCargo x:Key="ConverterShipAndCargo" />
    <vtClasses:ConverterShipAndCargoForTooltip x:Key="ConverterShipAndCargoForTooltip" />
    <vtClasses:ConverterAISType x:Key="ConverterAISType" />
    <vtClasses:ConverterAtoNVisibility x:Key="ConverterAtoNVisibility" />
    <vtClasses:ConverterBaseStationVisibility x:Key="ConverterBaseStationVisibility" />
    <vtClasses:ConverterShipVisibility x:Key="ConverterShipVisibility" />
    <vtClasses:ConverterCOGVisibility x:Key="ConverterCOGVisibility" />
    <vtClasses:ConverterSOGVisibility x:Key="ConverterSOGVisibility" />
    <vtClasses:ConverterROTLeft x:Key="ConverterROTLeft" />
    <vtClasses:ConverterROTRight x:Key="ConverterROTRight" />
    <vtClasses:ConverterSOG x:Key="ConverterSOG" />
    <vtClasses:ConverterSelectionVisibility x:Key="ConverterSelectionVisibility" />
    <vtClasses:ConverterViaMediaVisibility x:Key="ConverterViaMediaVisibility" />
    <vtClasses:ConverterUnknownVisibility x:Key="ConverterUnknownVisibility" />
    <vtClasses:ConverterAISTypeVisibility x:Key="ConverterAISTypeVisibility" />
    <vtClasses:ConverterWidthLength x:Key="ConverterWidthLength" />



    <DropShadowEffect x:Key="Effect1"
					  BlurRadius="0"
					  ShadowDepth="2" />

    <Style x:Key="ContentPresenterStyle1" TargetType="ContentPresenter">
        <Setter Property="OpacityMask" Value="Black" />
    </Style>

    <Style x:Key="AckBtnStyle" TargetType="HyperlinkButton">
        <Setter Property="Foreground" Value="#FF73A9D8"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="#FFFF8600" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="Black">
                            <Grid>
                                <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <TextBlock x:Name="DisabledOverlay" Foreground="#FFAAAAAA" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Color x:Key="DarkBlue">#FF022035</Color>
    <Color x:Key="LightBlue">#FF135889</Color>
    <LinearGradientBrush x:Key="RectangleOutsetStroke" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource DarkBlue}" />
        <GradientStop Color="{StaticResource LightBlue}" />
    </LinearGradientBrush>
    <Color x:Key="Blue">#FF0F3958</Color>
    <SolidColorBrush x:Key="RectangleFill" Color="{StaticResource Blue}" />
    <SolidColorBrush x:Key="RectangleInsetStroke" Color="Black"/>

    <Style x:Key="ButtonStyle1" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
														Storyboard.TargetName="textBlock"
														Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
														To="#FFFDFF00" />
                                        <ColorAnimation d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource LightBlue}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
														Storyboard.TargetName="textBlock"
														Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
														To="#FFFDFF00" />
                                        <DoubleAnimation Duration="0"
														 Storyboard.TargetName="textBlock"
														 Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)"
														 To="0" />
                                        <ColorAnimation Duration="0"
														Storyboard.TargetName="image"
														Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)"
														To="#FF040404" />
                                        <ColorAnimation d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="#FF125787" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border"
								Background="#FF14456A"
								BorderThickness="1"
								CornerRadius="3">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource DarkBlue}" />
                            </Border.BorderBrush>
                        </Border>
                        <TextBlock x:Name="textBlock"
								   Margin="16,0,7,0"
								   VerticalAlignment="Center"
								   FontSize="12"
								   Foreground="#FFE2DEDE"
								   Text="{TemplateBinding Content}">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" />
                            </TextBlock.Effect>
                        </TextBlock>
                        <Image x:Name="image"
							   Width="8"
							   Height="8"
							   Margin="4,4,0,0"
							   HorizontalAlignment="Left"
							   VerticalAlignment="Top"
							   OpacityMask="Black"
							   Source="../Images/1683_Lightbulb_16x16.png" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root"
			  Margin="5,0"
			  Opacity="0"
			  RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
												 Storyboard.TargetName="xform"
												 Storyboard.TargetProperty="X"
												 To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2"
												 Storyboard.TargetName="Root"
												 Storyboard.TargetProperty="Opacity"
												 To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
											 Storyboard.TargetName="Root"
											 Storyboard.TargetProperty="Opacity"
											 To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
											 Storyboard.TargetName="xform"
											 Storyboard.TargetProperty="X"
											 To="0" />
                            <DoubleAnimation Duration="0"
											 Storyboard.TargetName="Root"
											 Storyboard.TargetProperty="Opacity"
											 To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="4,4,-4,-4"
					Background="#052A2E31"
					CornerRadius="5" />
            <Border Margin="3,3,-3,-3"
					Background="#152A2E31"
					CornerRadius="4" />
            <Border Margin="2,2,-2,-2"
					Background="#252A2E31"
					CornerRadius="3" />
            <Border Margin="1,1,-1,-1"
					Background="#352A2E31"
					CornerRadius="2" />
            <Border Background="#FFDC000C" CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock MaxWidth="250"
						   Margin="8,4,8,4"
						   Foreground="White"
						   Text="{Binding (Validation.Errors)[0].ErrorContent}"
						   TextWrapping="Wrap"
						   UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle1" TargetType="ComboBox">
        <Setter Property="Padding" Value="6,2,25,2" />
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFA3AEB9" />
                    <GradientStop Offset="0.375" Color="#FF8399A9" />
                    <GradientStop Offset="0.375" Color="#FF718597" />
                    <GradientStop Offset="1" Color="#FF617584" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="#FF333333" />
                                <Setter Property="Background" Value="#FF1F3B53" />
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FFA3AEB9" />
                                            <GradientStop Offset="0.375" Color="#FF8399A9" />
                                            <GradientStop Offset="0.375" Color="#FF718597" />
                                            <GradientStop Offset="1" Color="#FF617584" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Padding" Value="3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0"
																				 Storyboard.TargetName="BackgroundOverlay"
																				 Storyboard.TargetProperty="Opacity"
																				 To="1" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
																				To="#7FFFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
																				To="#CCFFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
																				To="#F2FFFFFF" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0"
																				 Storyboard.TargetName="BackgroundOverlay2"
																				 Storyboard.TargetProperty="Opacity"
																				 To="1" />
                                                                <DoubleAnimation Duration="0"
																				 Storyboard.TargetName="Highlight"
																				 Storyboard.TargetProperty="(UIElement.Opacity)"
																				 To="1" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
																				To="#E5FFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
																				To="#BCFFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
																				To="#6BFFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
																				To="#F2FFFFFF" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0"
																				 Storyboard.TargetName="BackgroundOverlay3"
																				 Storyboard.TargetProperty="(UIElement.Opacity)"
																				 To="1" />
                                                                <DoubleAnimation Duration="0"
																				 Storyboard.TargetName="Highlight"
																				 Storyboard.TargetProperty="(UIElement.Opacity)"
																				 To="1" />
                                                                <DoubleAnimation Duration="0"
																				 Storyboard.TargetName="BackgroundGradient2"
																				 Storyboard.TargetProperty="(UIElement.Opacity)"
																				 To="1" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient2"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
																				To="#E5FFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient2"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
																				To="#BCFFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient2"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
																				To="#6BFFFFFF" />
                                                                <ColorAnimation Duration="0"
																				Storyboard.TargetName="BackgroundGradient2"
																				Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
																				To="#F2FFFFFF" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Duration="0"
																							   Storyboard.TargetName="FocusVisualElement"
																							   Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Background"
														   Fill="{TemplateBinding Background}"
														   RadiusX="3"
														   RadiusY="3"
														   Stroke="{TemplateBinding BorderBrush}"
														   StrokeThickness="{TemplateBinding BorderThickness}" />
                                                <Rectangle x:Name="BackgroundOverlay"
														   Fill="#FF448DCA"
														   Opacity="0"
														   RadiusX="3"
														   RadiusY="3"
														   Stroke="#00000000"
														   StrokeThickness="{TemplateBinding BorderThickness}" />
                                                <Rectangle x:Name="BackgroundOverlay2"
														   Fill="#FF448DCA"
														   Opacity="0"
														   RadiusX="3"
														   RadiusY="3"
														   Stroke="#00000000"
														   StrokeThickness="{TemplateBinding BorderThickness}" />
                                                <Rectangle x:Name="BackgroundGradient"
														   Margin="{TemplateBinding BorderThickness}"
														   RadiusX="2"
														   RadiusY="2"
														   Stroke="#FFFFFFFF"
														   StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Offset="0" Color="#FFFFFFFF" />
                                                            <GradientStop Offset="0.375" Color="#F9FFFFFF" />
                                                            <GradientStop Offset="0.625" Color="#E5FFFFFF" />
                                                            <GradientStop Offset="1" Color="#C6FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="BackgroundOverlay3"
														   Fill="#FF448DCA"
														   Opacity="0"
														   RadiusX="3"
														   RadiusY="3"
														   Stroke="#00000000"
														   StrokeThickness="{TemplateBinding BorderThickness}" />
                                                <Rectangle x:Name="BackgroundGradient2"
														   Margin="{TemplateBinding BorderThickness}"
														   Opacity="0"
														   RadiusX="2"
														   RadiusY="2"
														   Stroke="#FFFFFFFF"
														   StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Offset="0" Color="#FFFFFFFF" />
                                                            <GradientStop Offset="0.375" Color="#F9FFFFFF" />
                                                            <GradientStop Offset="0.625" Color="#E5FFFFFF" />
                                                            <GradientStop Offset="1" Color="#C6FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="Highlight"
														   Margin="{TemplateBinding BorderThickness}"
														   IsHitTestVisible="false"
														   Opacity="0"
														   RadiusX="2"
														   RadiusY="2"
														   Stroke="#FF6DBDD1"
														   StrokeThickness="1" />
                                                <ContentPresenter x:Name="contentPresenter"
																  Margin="{TemplateBinding Padding}"
																  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																  Content="{TemplateBinding Content}"
																  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                <Rectangle x:Name="FocusVisualElement"
														   Margin="1"
														   IsHitTestVisible="false"
														   RadiusX="3.5"
														   RadiusY="3.5"
														   Stroke="#FF6DBDD1"
														   StrokeThickness="1"
														   Visibility="Collapsed" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00"
														 Storyboard.TargetName="DisabledVisualElement"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00"
														 Storyboard.TargetName="FocusVisualElement"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
																	   Storyboard.TargetName="PopupBorder"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle"
											  Margin="0"
											  HorizontalAlignment="Stretch"
											  VerticalAlignment="Stretch"
											  HorizontalContentAlignment="Right"
											  Background="{TemplateBinding Background}"
											  BorderBrush="{TemplateBinding BorderBrush}"
											  BorderThickness="{TemplateBinding BorderThickness}"
											  Style="{StaticResource comboToggleStyle}">
                                    <Path x:Name="BtnArrow"
										  Width="8"
										  Height="4"
										  Margin="0,0,6,0"
										  HorizontalAlignment="Right"
										  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
										  Stretch="Uniform">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333" />
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter"
												  Margin="{TemplateBinding Padding}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock Text=" " />
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement"
								   Fill="White"
								   IsHitTestVisible="false"
								   Opacity="0"
								   RadiusX="3"
								   RadiusY="3" />
                        <Rectangle x:Name="FocusVisualElement"
								   Margin="1"
								   IsHitTestVisible="false"
								   Opacity="0"
								   RadiusX="2"
								   RadiusY="2"
								   Stroke="#FF6DBDD1"
								   StrokeThickness="1" />
                        <Border x:Name="ValidationErrorElement"
								BorderBrush="#FFDB000C"
								BorderThickness="1"
								CornerRadius="1"
								Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
										 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										 Placement="Right"
										 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										 Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="12"
								  Height="12"
								  Margin="1,-4,-4,0"
								  HorizontalAlignment="Right"
								  VerticalAlignment="Top">
                                <Path Margin="1,3,0,0"
									  Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
									  Fill="#FFDC000C" />
                                <Path Margin="1,3,0,0"
									  Data="M 0,0 L2,0 L 8,6 L8,8"
									  Fill="#ffffff" />
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder"
									Height="Auto"
									HorizontalAlignment="Stretch"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FFFFFFFF" />
                                        <GradientStop Offset="1" Color="#FFFEFEFE" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer"
											  BorderThickness="0"
											  Padding="1">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="treeItemDataTemplate">
        <Grid Height="128"
			  HorizontalAlignment="Stretch"
			  VerticalAlignment="Top">
            <Grid Width="32"
				  Height="32"
				  HorizontalAlignment="Left"
				  VerticalAlignment="Top">
                <Grid x:Name="AtoNTemplate"
					  Width="32"
					  HorizontalAlignment="Left"
					  Visibility="{Binding AISType, Converter={StaticResource ConverterAtoNVisibility}}">
                    <ed:RegularPolygon Margin="6,6,6,0"
									   PointCount="4"
									   RenderTransformOrigin="0.5,0.5"
									   Stretch="Fill"
									   Stroke="Black"
									   StrokeEndLineCap="Triangle"
									   StrokeLineJoin="Round"
									   StrokeStartLineCap="Round"
									   StrokeThickness="2"
									   UseLayoutRounding="False" />
                    <Path Height="7.938"
						  Margin="15,0,15,8.062"
						  VerticalAlignment="Bottom"
						  Data="M16,16 L16,20.9375"
						  Stretch="Fill"
						  Stroke="Black"
						  StrokeEndLineCap="Triangle"
						  StrokeLineJoin="Round"
						  StrokeStartLineCap="Triangle"
						  StrokeThickness="2"
						  UseLayoutRounding="False" />
                    <Path Height="2"
						  Margin="12,0,11.875,11"
						  VerticalAlignment="Bottom"
						  Data="M12,18 L19.125,18"
						  Stretch="Fill"
						  Stroke="Black"
						  StrokeEndLineCap="Triangle"
						  StrokeLineJoin="Round"
						  StrokeStartLineCap="Triangle"
						  StrokeThickness="2"
						  UseLayoutRounding="False" />

                </Grid>
                <Grid x:Name="ShipTemplate"
					  Width="32"
					  HorizontalAlignment="Right"
					  Visibility="{Binding AISType, Converter={StaticResource ConverterShipVisibility}}">

                    <ed:RegularPolygon Margin="6.316,9.875,6.225,-0.618"
									   Fill="{Binding ShipAndCargo, Converter={StaticResource ConverterShipColor}, FallbackValue=#FFFF0000}"
									   InnerRadius="0.95"
									   PointCount="3"
									   RenderTransformOrigin="0.494,0.533"
									   Stretch="Fill"
									   Stroke="{Binding AISType, Converter={StaticResource ConverterAISType}, FallbackValue=#00FF0000}"
									   StrokeEndLineCap="Triangle"
									   StrokeLineJoin="Round"
									   StrokeStartLineCap="Round"
									   StrokeThickness="2"
									   UseLayoutRounding="False" />

                </Grid>
                <Grid x:Name="BaseStationTemplate"
					  Margin="0,2,0,-2"
					  Canvas.ZIndex="53"
					  Visibility="{Binding AISType, Converter={StaticResource ConverterBaseStationVisibility}}">
                    <Ellipse Width="4"
							 Height="4"
							 Margin="14,14,0,0"
							 HorizontalAlignment="Left"
							 VerticalAlignment="Top"
							 Fill="#FF00010A"
							 Stroke="#FF1300FF"
							 StrokeEndLineCap="Triangle"
							 StrokeLineJoin="Round"
							 StrokeStartLineCap="Round" />
                    <Ellipse Width="10"
							 Height="10"
							 Margin="11,11,0,0"
							 HorizontalAlignment="Left"
							 VerticalAlignment="Top"
							 Opacity="0.795"
							 Stroke="#FF1300FF"
							 StrokeEndLineCap="Triangle"
							 StrokeLineJoin="Round"
							 StrokeStartLineCap="Round" />
                    <Ellipse Width="16"
							 Height="16"
							 Margin="8,8,0,0"
							 HorizontalAlignment="Left"
							 VerticalAlignment="Top"
							 Opacity="0.6"
							 Stroke="#FF1300FF"
							 StrokeEndLineCap="Triangle"
							 StrokeLineJoin="Round"
							 StrokeStartLineCap="Round" />
                    <Ellipse Width="22"
							 Height="22"
							 Margin="5,5,0,0"
							 HorizontalAlignment="Left"
							 VerticalAlignment="Top"
							 Opacity="0.4"
							 Stroke="#FF1300FF"
							 StrokeEndLineCap="Triangle"
							 StrokeLineJoin="Round"
							 StrokeStartLineCap="Round" />
                    <Ellipse Width="28"
							 Height="28"
							 Margin="2,2,0,0"
							 HorizontalAlignment="Left"
							 VerticalAlignment="Top"
							 Opacity="0.2"
							 Stroke="#FF1300FF"
							 StrokeEndLineCap="Triangle"
							 StrokeLineJoin="Round"
							 StrokeStartLineCap="Round" />
                </Grid>
            </Grid>
            <Grid Margin="39,0,0,0">
                <TextBlock Height="18"
						   Margin="4,7,0,0"
						   VerticalAlignment="Top"
						   Foreground="#FF8F8F8F"
						   Text="{Binding MMSI, FallbackValue=-}">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="2" ShadowDepth="1" />
                    </TextBlock.Effect>
                </TextBlock>
                <TextBlock Height="18"
						   Margin="4,26,0,0"
						   VerticalAlignment="Top"
						   Foreground="#FFA5A5A5"
						   Text="{Binding Name, FallbackValue=-}">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="2" ShadowDepth="1" />
                    </TextBlock.Effect>
                </TextBlock>
                <Grid Margin="0,46,0,0" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.24*" />
                        <ColumnDefinition Width="0.76*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1"
							   Height="14"
							   Margin="3,0,0,0"
							   FontSize="10.667"
							   Text="{Binding SOG, ConverterParameter=0.0 kn, Converter={StaticResource ConverterDouble}, FallbackValue=-}" />
                    <TextBlock Height="14"
							   HorizontalAlignment="Right"
							   FontSize="10.667"
							   FontWeight="Bold"
							   Text="SOG" />
                </Grid>
                <Grid Height="16"
					  Margin="0,62,0,0"
					  VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.24*" />
                        <ColumnDefinition Width="0.76*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1"
							   Margin="3,0,0,0"
							   FontSize="10.667"
							   Text="{Binding COG, ConverterParameter=0 °, Converter={StaticResource ConverterDouble}, FallbackValue=-}" />
                    <TextBlock Height="14"
							   HorizontalAlignment="Right"
							   FontSize="10.667"
							   FontWeight="Bold"
							   Text="COG" />
                </Grid>
                <Grid Height="14"
					  Margin="0,78,0,0"
					  VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.24*" />
                        <ColumnDefinition Width="0.76*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1"
							   Margin="3,0,0,0"
							   FontSize="10.667"
							   Text="{Binding HDG, ConverterParameter=0 °, Converter={StaticResource ConverterDouble}, FallbackValue=-}" />
                    <TextBlock Height="14"
							   HorizontalAlignment="Right"
							   FontSize="10.667"
							   FontWeight="Bold"
							   Text="HDG" />
                </Grid>
                <Grid Height="14"
					  Margin="0,94,0,0"
					  VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.24*" />
                        <ColumnDefinition Width="0.76*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1"
							   Margin="3,0,0,0"
							   FontSize="10.667"
							   Text="{Binding ROT, FallbackValue=-}" />
                    <TextBlock Height="14"
							   HorizontalAlignment="Right"
							   FontSize="10.667"
							   FontWeight="Bold"
							   Text="ROT" />
                </Grid>
                <Grid Height="14"
					  Margin="0,110,0,0"
					  VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.24*" />
                        <ColumnDefinition Width="0.76*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1"
							   Margin="3,0,0,0"
							   FontSize="10.667"
							   Text="{Binding ReportDate, ConverterParameter=HH:mm:ss, Converter={StaticResource ConverterDateTime}, FallbackValue=-}" />
                    <TextBlock Height="14"
							   HorizontalAlignment="Right"
							   FontSize="10.667"
							   FontWeight="Bold"
							   Text="Time" />
                </Grid>
            </Grid>
            <Path Height="1"
				  VerticalAlignment="Top"
				  Data="M-28,0 L304,0"
				  Stretch="Fill"
				  Stroke="#FF565656"
				  StrokeDashArray="2"
				  StrokeDashOffset="2"
				  StrokeEndLineCap="Triangle"
				  StrokeLineJoin="Round"
				  StrokeStartLineCap="Round"
				  UseLayoutRounding="False" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="yachtTemplate">
        <Grid x:Name="grid"
			  Width="48"
			  Height="48"
			  c11:C1MapCanvas.LatLong="{Binding LatLong}"
			  c11:C1MapCanvas.Pinpoint="24, 24"
			  RenderTransformOrigin="0.542,0.583">


            <Rectangle x:Name="SelectionPinPoint"
					   Margin="16"
					   Canvas.ZIndex="100"
					   Fill="#000111FF"
					   MouseEnter="Grid_MouseEnter"
					   MouseLeave="Grid_MouseLeave"
					   MouseLeftButtonDown="Grid_MouseLeftButtonDown"
					   RadiusX="8"
					   RadiusY="8" />
            <Grid x:Name="AtoNTemplate"
				  Canvas.ZIndex="51"
				  Visibility="{Binding AISType, Converter={StaticResource ConverterAtoNVisibility}}">
                <ed:RegularPolygon Margin="14,10"
								   PointCount="4"
								   RenderTransformOrigin="0.5,0.5"
								   Stretch="Fill"
								   Stroke="Black"
								   StrokeEndLineCap="Triangle"
								   StrokeLineJoin="Round"
								   StrokeStartLineCap="Round"
								   StrokeThickness="2"
								   UseLayoutRounding="False" />
                <Path Height="7.938"
					  Margin="15.062,19.812,14.938,0"
					  VerticalAlignment="Top"
					  Data="M16,16 L16,20.9375"
					  Stretch="Fill"
					  Stroke="Black"
					  StrokeEndLineCap="Triangle"
					  StrokeLineJoin="Round"
					  StrokeStartLineCap="Triangle"
					  StrokeThickness="2"
					  UseLayoutRounding="False" />
                <Path Margin="20,19"
					  Data="M12,18 L19.125,18"
					  Stretch="Fill"
					  Stroke="Black"
					  StrokeEndLineCap="Triangle"
					  StrokeLineJoin="Round"
					  StrokeStartLineCap="Triangle"
					  StrokeThickness="2"
					  UseLayoutRounding="False" />

            </Grid>
            <Grid x:Name="ShipTemplate"
				  Canvas.ZIndex="52"
				  RenderTransformOrigin="0.5,0.5"
				  Visibility="{Binding AISType, Converter={StaticResource ConverterShipVisibility}}">
                <Path Width="14"
					  Height="40"
					  Margin="17,4.062,17,3.937"
					  Data=" M 54.470,8.266 L 66.750,24.112 L 79.170,56.266 L 91.450,104.112 L 103.800,184.112 L 103.800,232.112 L 97.625,280.112 L 85.275,312.112 L 79.101,320.112 L 54.400,320.112 L 29.700,320.112 L 23.525,312.112 L 17.350,296.112 L 11.175,280.112 L 5.000,232.112 L 5.000,184.112 L 17.350,104.112 L 29.700,56.112 L 42.675,24.112 L 54.470,8.266 Z"
					  RenderTransformOrigin="0.496,0.65"
					  Stretch="Fill"
					  Stroke="#FF020202"
					  StrokeDashOffset="24"
					  StrokeMiterLimit="11"
					  StrokeThickness="3"
					  UseLayoutRounding="False">
                    <Path.Effect>
                        <BlurEffect Radius="7" />
                    </Path.Effect>
                    <Path.RenderTransform>
                        <CompositeTransform Rotation="{Binding Angle}" />
                    </Path.RenderTransform>
                </Path>
                <Path Width="14"
					  Height="40"
					  Margin="17,4,17,3.8"
					  Data=" M 54.470,8.266 L 66.750,24.112 L 79.170,56.266 L 91.450,104.112 L 103.800,184.112 L 103.800,232.112 L 97.625,280.112 L 85.275,312.112 L 79.101,320.112 L 54.400,320.112 L 29.700,320.112 L 23.525,312.112 L 17.350,296.112 L 11.175,280.112 L 5.000,232.112 L 5.000,184.112 L 17.350,104.112 L 29.700,56.112 L 42.675,24.112 L 54.470,8.266 Z"
					  Fill="#ffffcb04"
					  RenderTransformOrigin="0.5,0.619"
					  Stretch="Fill"
					  Stroke="#ff00a550"
					  StrokeMiterLimit="3"
					  UseLayoutRounding="False">
                    <Path.RenderTransform>
                        <CompositeTransform Rotation="{Binding Angle}" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
            <Grid x:Name="BaseStationTemplate"
				  Canvas.ZIndex="53"
				  Visibility="{Binding AISType, Converter={StaticResource ConverterBaseStationVisibility}}">
                <Ellipse Margin="23,23,21,21"
						 Fill="#FF00010A"
						 Stroke="#FF1300FF"
						 StrokeEndLineCap="Triangle"
						 StrokeLineJoin="Round"
						 StrokeStartLineCap="Round" />
                <Ellipse Margin="20,20,18,18"
						 Opacity="0.795"
						 Stroke="#FF1300FF"
						 StrokeEndLineCap="Triangle"
						 StrokeLineJoin="Round"
						 StrokeStartLineCap="Round" />
                <Ellipse Margin="17,17,15,15"
						 Opacity="0.6"
						 Stroke="#FF1300FF"
						 StrokeEndLineCap="Triangle"
						 StrokeLineJoin="Round"
						 StrokeStartLineCap="Round" />
                <Ellipse Margin="14,14,12,12"
						 Opacity="0.4"
						 Stroke="#FF1300FF"
						 StrokeEndLineCap="Triangle"
						 StrokeLineJoin="Round"
						 StrokeStartLineCap="Round" />
                <Ellipse Margin="11,11,9,9"
						 Opacity="0.2"
						 Stroke="#FF1300FF"
						 StrokeEndLineCap="Triangle"
						 StrokeLineJoin="Round"
						 StrokeStartLineCap="Round" />
            </Grid>
            <Rectangle x:Name="SelectionRectangle"
					   Stroke="Red"
					   StrokeEndLineCap="Triangle"
					   StrokeLineJoin="Round"
					   StrokeStartLineCap="Triangle"
					   StrokeThickness="2"
					   Visibility="{Binding Selected, Converter={StaticResource ConverterSelectionVisibility}}" />
        </Grid>
    </DataTemplate>
    <SolidColorBrush x:Key="Gray" Color="#FF7E7E7E" />
    <SolidColorBrush x:Key="LightGray" Color="#FFC6C6C6" />
    <c11:C1SideThicknessConverter x:Key="sideThicknessConverter" />
    <LinearGradientBrush x:Key="GeneralGradientBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFFAFBFC" />
        <GradientStop Offset="1" Color="#FFD1DCE8" />
    </LinearGradientBrush>
    <Color x:Key="BaseColor">#FFD1DCE8</Color>
    <LinearGradientBrush x:Key="GeneralGradientOverBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFDCEEF3" />
        <GradientStop Offset="1" Color="#FFC5E3ED" />
    </LinearGradientBrush>
    <Color x:Key="MouseOverColor">#FF3DADCA</Color>
    <LinearGradientBrush x:Key="GeneralGradientSelectedBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFC6E5F0" />
        <GradientStop Offset="1" Color="#FFA8D4E3" />
    </LinearGradientBrush>
    <Color x:Key="SelectedColor">#FF8ED1E2</Color>
    <SolidColorBrush x:Key="GeneralGradientCheckedBrush" Color="#FF8ED1E2" />
    <SolidColorBrush x:Key="InnerBorderBrush" Color="#FFFAFBFC" />
    <SolidColorBrush x:Key="InnerBorderMouseOverBrush" Color="#FFFAFBFC" />
    <SolidColorBrush x:Key="InnerBorderPressedBrush" Color="#FFFAFBFC" />
    <Thickness x:Key="InnerBorderThickness">1</Thickness>
    <Style x:Key="ClearStyleButtonStyle" TargetType="ButtonBase">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
																	   Storyboard.TargetName="MouseOverElement"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
																	   Storyboard.TargetName="PressedElement"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True"
														 Duration="0"
														 Storyboard.TargetName="BackgroundElement"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.5" />
                                        <DoubleAnimation d:IsOptimized="True"
														 Duration="0"
														 Storyboard.TargetName="contentPresenter"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
																	   Storyboard.TargetName="CheckedElement"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
														 Storyboard.TargetName="FocusVisualElement"
														 Storyboard.TargetProperty="Opacity"
														 To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c11:C1BrushBuilder x:Name="BackgroundBrush"
											DesignBrush="{StaticResource GeneralGradientBrush}"
											DesignColor="{StaticResource BaseColor}"
											Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        <c11:C1BrushBuilder x:Name="MouseOverBrush"
											DesignBrush="{StaticResource GeneralGradientOverBrush}"
											DesignColor="{StaticResource MouseOverColor}"
											Input="{TemplateBinding c11:ClearStyleExtensions.MouseOverBrush}" />
                        <c11:C1BrushBuilder x:Name="PressedBrush"
											DesignBrush="{StaticResource GeneralGradientSelectedBackground}"
											DesignColor="{StaticResource SelectedColor}"
											Input="{TemplateBinding c11:ClearStyleExtensions.PressedBrush}" />
                        <c11:C1BrushBuilder x:Name="CheckedBrush"
											DesignBrush="{StaticResource GeneralGradientCheckedBrush}"
											DesignColor="{StaticResource SelectedColor}"
											Input="{TemplateBinding c11:ClearStyleExtensions.PressedBrush}" />
                        <c11:C1BrushBuilder x:Name="InnerBorderBrush"
											DesignBrush="{StaticResource InnerBorderBrush}"
											DesignColor="{StaticResource BaseColor}"
											Input="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        <c11:C1BrushBuilder x:Name="InnerBorderMouseOverBrush"
											DesignBrush="{StaticResource InnerBorderMouseOverBrush}"
											DesignColor="{StaticResource MouseOverColor}"
											Input="{TemplateBinding c11:ClearStyleExtensions.MouseOverBrush}" />
                        <c11:C1BrushBuilder x:Name="InnerBorderPressedBrush"
											DesignBrush="{StaticResource InnerBorderPressedBrush}"
											DesignColor="{StaticResource SelectedColor}"
											Input="{TemplateBinding c11:ClearStyleExtensions.PressedBrush}" />
                        <Border x:Name="BackgroundElement"
								Background="{Binding Output, ElementName=BackgroundBrush}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}">
                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderBrush}"
									BorderThickness="{StaticResource InnerBorderThickness}"
									CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}" />
                        </Border>
                        <Border x:Name="CheckedElement"
								Background="{Binding Output, ElementName=CheckedBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}"
								Visibility="Collapsed" />
                        <Border x:Name="MouseOverElement"
								Background="{Binding Output, ElementName=MouseOverBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}"
								Visibility="Collapsed">
                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderMouseOverBrush}"
									BorderThickness="{StaticResource InnerBorderThickness}"
									CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}" />
                        </Border>
                        <Border x:Name="PressedElement"
								Background="{Binding Output, ElementName=PressedBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}"
								Visibility="Collapsed">
                            <Border BorderBrush="{Binding Output, ElementName=InnerBorderPressedBrush}"
									BorderThickness="{StaticResource InnerBorderThickness}"
									CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}" />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Border x:Name="FocusVisualElement"
								BorderBrush="{TemplateBinding c11:ClearStyleExtensions.FocusBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding c11:ClearStyleExtensions.CornerRadius}"
								IsHitTestVisible="false"
								Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <c11:C1_Silverlight x:Key="Resources" />
    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
    <Style x:Key="C1TabItemStyle1" TargetType="c11:C1TabItem">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c11:C1TabItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.0010000"
																	   Storyboard.TargetName="DisabledVisualElement"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TabStripPlacementStates">
                                <VisualState x:Name="LeftTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="C1TabItemPresenter" Storyboard.TargetProperty="TabStripPlacement">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c11:Dock>Left</c11:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="C1TabItemPresenter" Storyboard.TargetProperty="TabStripPlacement">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c11:Dock>Top</c11:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="C1TabItemPresenter" Storyboard.TargetProperty="TabStripPlacement">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c11:Dock>Right</c11:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomTabStripPlacement">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="C1TabItemPresenter" Storyboard.TargetProperty="TabStripPlacement">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c11:Dock>Bottom</c11:Dock>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c11:C1TabItemPresenter x:Name="C1TabItemPresenter"
												Background="{TemplateBinding Background}"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{Binding BorderThickness, ConverterParameter=left-top-right, Converter={StaticResource sideThicknessConverter}, RelativeSource={RelativeSource TemplatedParent}}"
												CornerRadius="4"
												IsSelected="{TemplateBinding IsSelected}"
												MouseOverBrush="{TemplateBinding MouseOverBrush}"
												Padding="{TemplateBinding Padding}"
												PressedBrush="{TemplateBinding PressedBrush}"
												SelectedBackground="{TemplateBinding SelectedBackground}"
												TabShape="{TemplateBinding TabShape}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderPresenter"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                <Button x:Name="CloseButton"
										Grid.Column="1"
										Width="15"
										Height="15"
										Margin="5 0 -6 0"
										HorizontalAlignment="Right"
										VerticalAlignment="Center"
										Background="Transparent"
										BorderBrush="Transparent"
										BorderThickness="{TemplateBinding BorderThickness}"
										c11:ClearStyleExtensions.CornerRadius="0"
										c11:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}"
										c11:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}"
										Foreground="{TemplateBinding Foreground}"
										Style="{StaticResource ClearStyleButtonStyle}"
										ToolTipService.ToolTip="{Binding Close, Source={StaticResource Resources}}">
                                    <Path Width="7"
										  Height="6"
										  Data="M0,0 L1.6,0 L3,1.56 L4.4,0 L6,0 L3.8,2.5 L6,5 L4.4,5 L3,3.49 L1.59,5 L-4.2E-09,5 L2.18,2.5 z"
										  Fill="{TemplateBinding Foreground}"
										  Stretch="Uniform" />
                                </Button>
                            </Grid>
                        </c11:C1TabItemPresenter>
                        <Border x:Name="DisabledVisualElement"
								Background="{StaticResource DisabledBrush}"
								Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DropShadowEffect x:Key="FontEfect"
					  BlurRadius="2"
					  ShadowDepth="1" />
    <DropShadowEffect x:Key="FontEffect2"
					  BlurRadius="2"
					  ShadowDepth="1" />
    <DataTemplate x:Key="DataTemplate1">
        <Grid d:DesignHeight="378" d:DesignWidth="626">
            <Rectangle Width="420"
					   Height="140"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   Fill="#98000000"
					   RadiusX="10"
					   RadiusY="10"
					   StrokeThickness="0" />
            <TextBlock x:Name="textBlock"
					   Width="211"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   FontFamily="Calibri"
					   FontSize="24"
					   Foreground="#FF818181"
					   Text="Retreiving the data..."
					   TextAlignment="Center"
					   TextWrapping="Wrap" />
        </Grid>
    </DataTemplate>
    <Style x:Key="ProgressBarStyle1" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="#FF027DB8" />
        <Setter Property="Background" Value="#FFD2D5D8" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint=".5,0" EndPoint=".5,1">
                    <GradientStop Offset="0" Color="#FFAEB7BF" />
                    <GradientStop Offset="0.35" Color="#FF919EA7" />
                    <GradientStop Offset="0.35" Color="#FF7A8A99" />
                    <GradientStop Offset="1" Color="#FF647480" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="00:00:.5"
														 From="0"
														 Storyboard.TargetName="IndeterminateGradientFill"
														 Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X"
														 To="20" />
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
																	   Storyboard.TargetName="IndeterminateRoot"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
																	   Storyboard.TargetName="DeterminateRoot"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ProgressBarTrack"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="3" />
                        <Grid x:Name="ProgressBarRootGrid">
                            <Rectangle x:Name="ProgressBarRootGradient"
									   Margin="{TemplateBinding BorderThickness}"
									   Canvas.ZIndex="1"
									   RadiusX="1.5"
									   RadiusY="1.5"
									   Stroke="#FFFFFFFF"
									   StrokeThickness="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                        <GradientStop Offset="0" Color="#B2FFFFFF" />
                                        <GradientStop Offset="0.15" Color="#C6FFFFFF" />
                                        <GradientStop Offset="0.275" Color="#D1FFFFFF" />
                                        <GradientStop Offset="0.4" Color="#C6FFFFFF" />
                                        <GradientStop Offset="0.65" Color="#BFFFFFFF" />
                                        <GradientStop Offset="0.75" Color="#A5FFFFFF" />
                                        <GradientStop Offset="0.85" Color="#91FFFFFF" />
                                        <GradientStop Offset="1" Color="#72FFFFFF" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                                <Rectangle x:Name="IndeterminateSolidFill"
										   Margin="{TemplateBinding BorderThickness}"
										   Fill="{TemplateBinding Foreground}"
										   Opacity="1"
										   RadiusX="2"
										   RadiusY="2"
										   RenderTransformOrigin="0.5,0.5"
										   Stroke="#FF448DCA"
										   StrokeThickness="0" />
                                <Rectangle x:Name="IndeterminateGradientFill"
										   Margin="{TemplateBinding BorderThickness}"
										   Opacity="0.7"
										   RadiusX="2"
										   RadiusY="2"
										   StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1" EndPoint="0,1">
                                            <LinearGradientBrush.Transform>
                                                <TransformGroup>
                                                    <TranslateTransform X="0" />
                                                    <SkewTransform AngleX="-30" />
                                                </TransformGroup>
                                            </LinearGradientBrush.Transform>
                                            <GradientStop Offset="0" Color="#FFFFFFFF" />
                                            <GradientStop Offset=".25" Color="#00FFFFFF" />
                                            <GradientStop Offset="0.85" Color="#FFFFFFFF" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <Grid x:Name="DeterminateRoot" Margin="1">
                                <Rectangle x:Name="ProgressBarIndicator"
										   Margin="{TemplateBinding BorderThickness}"
										   HorizontalAlignment="Left"
										   Fill="{TemplateBinding Foreground}"
										   RadiusX="1.5"
										   RadiusY="1.5"
										   StrokeThickness="0.5" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BusyIndicatorStyle1" TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent" Value="Please wait..." />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White" />
                    <Setter Property="Opacity" Value="0.5" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate" Value="True" />
                    <Setter Property="Height" Value="15" />
                    <Setter Property="Margin" Value="8,0,8,8" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.001"
																	   Storyboard.TargetName="busycontent"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.001"
																	   Storyboard.TargetName="overlay"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.001"
																	   Storyboard.TargetName="busycontent"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.001"
																	   Storyboard.TargetName="overlay"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle" />
                                <VisualState x:Name="Busy" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="overlay"
								   d:IsHidden="True"
								   Style="{TemplateBinding OverlayStyle}" />
                        <ContentPresenter x:Name="busycontent">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle Fill="Black"
										   Opacity="0.395"
										   RadiusX="10"
										   RadiusY="10" />
                                <StackPanel Margin="5,10,5,15"
											HorizontalAlignment="Center"
											Orientation="Vertical"
											d:LayoutOverrides="Height">
                                    <OSYS:CircularProgress Width="50"
																	 Height="50"
																	 Margin="0,4,0,6"
																	 HorizontalAlignment="Center"
																	 VerticalAlignment="Top" />
                                    <TextBlock x:Name="textBlock"
											   Width="214"
											   HorizontalAlignment="Center"
											   FontFamily="Trebuchet MS"
											   FontSize="18"
											   Foreground="WhiteSmoke"
											   Text="{TemplateBinding BusyContent}"
											   TextAlignment="Center"
											   TextWrapping="Wrap"
											   Visibility="{Binding Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
                                </StackPanel>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle2" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFA3AEB9" />
                    <GradientStop Offset="0.375" Color="#FF8399A9" />
                    <GradientStop Offset="0.375" Color="#FF718597" />
                    <GradientStop Offset="1" Color="#FF617584" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="textBlock"
														Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
														To="White" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointAnimation d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="rectangle"
														Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
														To="0.5,0.5" />
                                        <DoubleAnimation d:IsOptimized="True"
														 Duration="0"
														 Storyboard.TargetName="rectangle"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
														 To="-1" />
                                        <PointAnimation d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="rectangle_Copy"
														Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
														To="0.5,0.5" />
                                        <DoubleAnimation d:IsOptimized="True"
														 Duration="0"
														 Storyboard.TargetName="rectangle_Copy"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
														 To="-1" />
                                        <ColorAnimation d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="textBlock"
														Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
														To="White" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
														 Storyboard.TargetName="DisabledVisualElement"
														 Storyboard.TargetProperty="Opacity"
														 To=".55" />
                                        <DoubleAnimation d:IsOptimized="True"
														 Duration="0"
														 Storyboard.TargetName="textBlock"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.195" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
														 Storyboard.TargetName="FocusVisualElement"
														 Storyboard.TargetProperty="Opacity"
														 To="1" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rectangle_Copy" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation d:IsOptimized="True"
														 Duration="0"
														 Storyboard.TargetName="rectangle_Copy"
														 Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)"
														 To="2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="DisabledVisualElement"
								   Fill="#FFFFFFFF"
								   IsHitTestVisible="false"
								   Opacity="0"
								   RadiusX="3"
								   RadiusY="3" />
                        <Rectangle x:Name="FocusVisualElement"
								   Margin="1"
								   IsHitTestVisible="false"
								   Opacity="0"
								   RadiusX="2"
								   RadiusY="2"
								   Stroke="#FF6DBDD1"
								   StrokeThickness="1" />
                        <Rectangle x:Name="rectangle"
								   Fill="{TemplateBinding Background}"
								   RadiusX="3"
								   RadiusY="3">
                            <Rectangle.RenderTransform>
                                <CompositeTransform />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="rectangle_Copy"
								   Margin="0"
								   Fill="{TemplateBinding Background}"
								   Opacity="0.995"
								   RadiusX="3"
								   RadiusY="3"
								   Visibility="Collapsed">
                            <Rectangle.RenderTransform>
                                <CompositeTransform />
                            </Rectangle.RenderTransform>
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="8"
												  ShadowDepth="0"
												  Color="White" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <TextBlock x:Name="textBlock"
								   Margin="0,3,0,5"
								   Foreground="#FFB6B6B6"
								   Text="{TemplateBinding Content}"
								   TextAlignment="Center"
								   TextWrapping="Wrap"
								   d:LayoutOverrides="Height" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <telerik:Office_BlackTheme x:Key="Theme"/>
    <SolidColorBrush x:Key="ControlForeground_Normal" Color="#FF000000"/>
    <Style TargetType="telerik:RadPanelBar">
        <Setter Property="ExpandMode" Value="Single"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik:PanelBarPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadPanelBar">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)" Storyboard.TargetName="transformationRoot">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="0"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)" Storyboard.TargetName="transformationRoot">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <telerik:LayoutTransformControl x:Name="transformationRoot">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="ScrollViewer" telerik:ScrollViewerExtensions.EnableMouseWheel="True" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalScrollBarVisibility="Auto" IsTabStop="False" Padding="{TemplateBinding Padding}" telerik:StyleManager.Theme="{StaticResource Theme}" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </telerik:LayoutTransformControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

</ResourceDictionary>
