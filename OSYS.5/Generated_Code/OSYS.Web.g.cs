//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSYS
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    
    
    /// <summary>
    /// Context for the RIA application.
    /// </summary>
    /// <remarks>
    /// This context extends the base to make application services and types available
    /// for consumption from code and xaml.
    /// </remarks>
    public sealed partial class WebContext : WebContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the WebContext class.
        /// </summary>
        public WebContext()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the context that is registered as a lifetime object with the current application.
        /// </summary>
        /// <exception cref="InvalidOperationException"> is thrown if there is no current application,
        /// no contexts have been added, or more than one context has been added.
        /// </exception>
        /// <seealso cref="System.Windows.Application.ApplicationLifetimeObjects"/>
        public new static WebContext Current
        {
            get
            {
                return ((WebContext)(WebContextBase.Current));
            }
        }
    }
}
namespace OSYS.Web
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    using System.ServiceModel.Web;
    using System.Xml.Serialization;
    using OSYS.Web.DTO;
    
    
    /// <summary>
    /// The 'DepartmanGorevler' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class DepartmanGorevler : Entity
    {
        
        private bool _aktif;
        
        private Guid _departmanID;
        
        private EntityRef<Departmanlar> _departmanlar;
        
        private Guid _gorevID;
        
        private Guid _oid;
        
        private Nullable<int> _siraNumarasi;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAktifChanging(bool value);
        partial void OnAktifChanged();
        partial void OnDepartmanIDChanging(Guid value);
        partial void OnDepartmanIDChanged();
        partial void OnGorevIDChanging(Guid value);
        partial void OnGorevIDChanged();
        partial void OnOIDChanging(Guid value);
        partial void OnOIDChanged();
        partial void OnSiraNumarasiChanging(Nullable<int> value);
        partial void OnSiraNumarasiChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DepartmanGorevler"/> class.
        /// </summary>
        public DepartmanGorevler()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Aktif' value.
        /// </summary>
        [DataMember()]
        public bool Aktif
        {
            get
            {
                return this._aktif;
            }
            set
            {
                if ((this._aktif != value))
                {
                    this.OnAktifChanging(value);
                    this.RaiseDataMemberChanging("Aktif");
                    this.ValidateProperty("Aktif", value);
                    this._aktif = value;
                    this.RaiseDataMemberChanged("Aktif");
                    this.OnAktifChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepartmanID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Guid DepartmanID
        {
            get
            {
                return this._departmanID;
            }
            set
            {
                if ((this._departmanID != value))
                {
                    this.OnDepartmanIDChanging(value);
                    this.RaiseDataMemberChanging("DepartmanID");
                    this.ValidateProperty("DepartmanID", value);
                    this._departmanID = value;
                    this.RaiseDataMemberChanged("DepartmanID");
                    this.OnDepartmanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Departmanlar"/> entity.
        /// </summary>
        [Association("Departmanlar_DepartmanGorevler", "DepartmanID", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public Departmanlar Departmanlar
        {
            get
            {
                if ((this._departmanlar == null))
                {
                    this._departmanlar = new EntityRef<Departmanlar>(this, "Departmanlar", this.FilterDepartmanlar);
                }
                return this._departmanlar.Entity;
            }
            set
            {
                Departmanlar previous = this.Departmanlar;
                if ((previous != value))
                {
                    this.ValidateProperty("Departmanlar", value);
                    if ((previous != null))
                    {
                        this._departmanlar.Entity = null;
                        previous.DepartmanGorevler.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.DepartmanID = value.OID;
                    }
                    else
                    {
                        this.DepartmanID = default(Guid);
                    }
                    this._departmanlar.Entity = value;
                    if ((value != null))
                    {
                        value.DepartmanGorevler.Add(this);
                    }
                    this.RaisePropertyChanged("Departmanlar");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GorevID' value.
        /// </summary>
        [DataMember()]
        public Guid GorevID
        {
            get
            {
                return this._gorevID;
            }
            set
            {
                if ((this._gorevID != value))
                {
                    this.OnGorevIDChanging(value);
                    this.RaiseDataMemberChanging("GorevID");
                    this.ValidateProperty("GorevID", value);
                    this._gorevID = value;
                    this.RaiseDataMemberChanged("GorevID");
                    this.OnGorevIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid OID
        {
            get
            {
                return this._oid;
            }
            set
            {
                if ((this._oid != value))
                {
                    this.OnOIDChanging(value);
                    this.ValidateProperty("OID", value);
                    this._oid = value;
                    this.RaisePropertyChanged("OID");
                    this.OnOIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SiraNumarasi' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SiraNumarasi
        {
            get
            {
                return this._siraNumarasi;
            }
            set
            {
                if ((this._siraNumarasi != value))
                {
                    this.OnSiraNumarasiChanging(value);
                    this.RaiseDataMemberChanging("SiraNumarasi");
                    this.ValidateProperty("SiraNumarasi", value);
                    this._siraNumarasi = value;
                    this.RaiseDataMemberChanged("SiraNumarasi");
                    this.OnSiraNumarasiChanged();
                }
            }
        }
        
        private bool FilterDepartmanlar(Departmanlar entity)
        {
            return (entity.OID == this.DepartmanID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._oid;
        }
    }
    
    /// <summary>
    /// The 'Departmanlar' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class Departmanlar : Entity
    {
        
        private Nullable<int> _bolumNo;
        
        private string _departmanAdi;
        
        private EntityCollection<DepartmanGorevler> _departmanGorevler;
        
        private EntityCollection<Departmanlar> _departmanlar1;
        
        private EntityRef<Departmanlar> _departmanlar2;
        
        private string _gsmKisaKod1;
        
        private string _gsmKisaKod2;
        
        private string _gsmKisaKod3;
        
        private Nullable<int> _ikLogoNum;
        
        private Nullable<bool> _ikVisible;
        
        private string _kisaKod1;
        
        private string _kisaKod2;
        
        private string _kisaKod3;
        
        private Guid _oid;
        
        private EntityRef<Personel> _personel;
        
        private EntityCollection<Personel> _personel1;
        
        private Nullable<Guid> _sirketId;
        
        private Nullable<bool> _talepPerSayiAl;
        
        private Nullable<Guid> _ustDepartmanId;
        
        private Nullable<bool> _ustDepartmanlaBirlestir;
        
        private Nullable<Guid> _yoneticiId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBolumNoChanging(Nullable<int> value);
        partial void OnBolumNoChanged();
        partial void OnDepartmanAdiChanging(string value);
        partial void OnDepartmanAdiChanged();
        partial void OnGsmKisaKod1Changing(string value);
        partial void OnGsmKisaKod1Changed();
        partial void OnGsmKisaKod2Changing(string value);
        partial void OnGsmKisaKod2Changed();
        partial void OnGsmKisaKod3Changing(string value);
        partial void OnGsmKisaKod3Changed();
        partial void OnIKLogoNumChanging(Nullable<int> value);
        partial void OnIKLogoNumChanged();
        partial void OnIKVisibleChanging(Nullable<bool> value);
        partial void OnIKVisibleChanged();
        partial void OnKisaKod1Changing(string value);
        partial void OnKisaKod1Changed();
        partial void OnKisaKod2Changing(string value);
        partial void OnKisaKod2Changed();
        partial void OnKisaKod3Changing(string value);
        partial void OnKisaKod3Changed();
        partial void OnOIDChanging(Guid value);
        partial void OnOIDChanged();
        partial void OnSirketIdChanging(Nullable<Guid> value);
        partial void OnSirketIdChanged();
        partial void OnTalepPerSayiAlChanging(Nullable<bool> value);
        partial void OnTalepPerSayiAlChanged();
        partial void OnUstDepartmanIdChanging(Nullable<Guid> value);
        partial void OnUstDepartmanIdChanged();
        partial void OnUstDepartmanlaBirlestirChanging(Nullable<bool> value);
        partial void OnUstDepartmanlaBirlestirChanged();
        partial void OnYoneticiIdChanging(Nullable<Guid> value);
        partial void OnYoneticiIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Departmanlar"/> class.
        /// </summary>
        public Departmanlar()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BolumNo' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> BolumNo
        {
            get
            {
                return this._bolumNo;
            }
            set
            {
                if ((this._bolumNo != value))
                {
                    this.OnBolumNoChanging(value);
                    this.RaiseDataMemberChanging("BolumNo");
                    this.ValidateProperty("BolumNo", value);
                    this._bolumNo = value;
                    this.RaiseDataMemberChanged("BolumNo");
                    this.OnBolumNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepartmanAdi' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string DepartmanAdi
        {
            get
            {
                return this._departmanAdi;
            }
            set
            {
                if ((this._departmanAdi != value))
                {
                    this.OnDepartmanAdiChanging(value);
                    this.RaiseDataMemberChanging("DepartmanAdi");
                    this.ValidateProperty("DepartmanAdi", value);
                    this._departmanAdi = value;
                    this.RaiseDataMemberChanged("DepartmanAdi");
                    this.OnDepartmanAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="DepartmanGorevler"/> entity instances.
        /// </summary>
        [Association("Departmanlar_DepartmanGorevler", "OID", "DepartmanID")]
        [XmlIgnore()]
        public EntityCollection<DepartmanGorevler> DepartmanGorevler
        {
            get
            {
                if ((this._departmanGorevler == null))
                {
                    this._departmanGorevler = new EntityCollection<DepartmanGorevler>(this, "DepartmanGorevler", this.FilterDepartmanGorevler, this.AttachDepartmanGorevler, this.DetachDepartmanGorevler);
                }
                return this._departmanGorevler;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Departmanlar"/> entity instances.
        /// </summary>
        [Association("Departmanlar_Departmanlar", "OID", "UstDepartmanId")]
        [XmlIgnore()]
        public EntityCollection<Departmanlar> Departmanlar1
        {
            get
            {
                if ((this._departmanlar1 == null))
                {
                    this._departmanlar1 = new EntityCollection<Departmanlar>(this, "Departmanlar1", this.FilterDepartmanlar1, this.AttachDepartmanlar1, this.DetachDepartmanlar1);
                }
                return this._departmanlar1;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Departmanlar"/> entity.
        /// </summary>
        [Association("Departmanlar_Departmanlar", "UstDepartmanId", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public Departmanlar Departmanlar2
        {
            get
            {
                if ((this._departmanlar2 == null))
                {
                    this._departmanlar2 = new EntityRef<Departmanlar>(this, "Departmanlar2", this.FilterDepartmanlar2);
                }
                return this._departmanlar2.Entity;
            }
            set
            {
                Departmanlar previous = this.Departmanlar2;
                if ((previous != value))
                {
                    this.ValidateProperty("Departmanlar2", value);
                    if ((previous != null))
                    {
                        this._departmanlar2.Entity = null;
                        previous.Departmanlar1.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.UstDepartmanId = value.OID;
                    }
                    else
                    {
                        this.UstDepartmanId = default(Nullable<Guid>);
                    }
                    this._departmanlar2.Entity = value;
                    if ((value != null))
                    {
                        value.Departmanlar1.Add(this);
                    }
                    this.RaisePropertyChanged("Departmanlar2");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GsmKisaKod1' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string GsmKisaKod1
        {
            get
            {
                return this._gsmKisaKod1;
            }
            set
            {
                if ((this._gsmKisaKod1 != value))
                {
                    this.OnGsmKisaKod1Changing(value);
                    this.RaiseDataMemberChanging("GsmKisaKod1");
                    this.ValidateProperty("GsmKisaKod1", value);
                    this._gsmKisaKod1 = value;
                    this.RaiseDataMemberChanged("GsmKisaKod1");
                    this.OnGsmKisaKod1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GsmKisaKod2' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string GsmKisaKod2
        {
            get
            {
                return this._gsmKisaKod2;
            }
            set
            {
                if ((this._gsmKisaKod2 != value))
                {
                    this.OnGsmKisaKod2Changing(value);
                    this.RaiseDataMemberChanging("GsmKisaKod2");
                    this.ValidateProperty("GsmKisaKod2", value);
                    this._gsmKisaKod2 = value;
                    this.RaiseDataMemberChanged("GsmKisaKod2");
                    this.OnGsmKisaKod2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GsmKisaKod3' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string GsmKisaKod3
        {
            get
            {
                return this._gsmKisaKod3;
            }
            set
            {
                if ((this._gsmKisaKod3 != value))
                {
                    this.OnGsmKisaKod3Changing(value);
                    this.RaiseDataMemberChanging("GsmKisaKod3");
                    this.ValidateProperty("GsmKisaKod3", value);
                    this._gsmKisaKod3 = value;
                    this.RaiseDataMemberChanged("GsmKisaKod3");
                    this.OnGsmKisaKod3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IKLogoNum' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> IKLogoNum
        {
            get
            {
                return this._ikLogoNum;
            }
            set
            {
                if ((this._ikLogoNum != value))
                {
                    this.OnIKLogoNumChanging(value);
                    this.RaiseDataMemberChanging("IKLogoNum");
                    this.ValidateProperty("IKLogoNum", value);
                    this._ikLogoNum = value;
                    this.RaiseDataMemberChanged("IKLogoNum");
                    this.OnIKLogoNumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IKVisible' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IKVisible
        {
            get
            {
                return this._ikVisible;
            }
            set
            {
                if ((this._ikVisible != value))
                {
                    this.OnIKVisibleChanging(value);
                    this.RaiseDataMemberChanging("IKVisible");
                    this.ValidateProperty("IKVisible", value);
                    this._ikVisible = value;
                    this.RaiseDataMemberChanged("IKVisible");
                    this.OnIKVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisaKod1' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisaKod1
        {
            get
            {
                return this._kisaKod1;
            }
            set
            {
                if ((this._kisaKod1 != value))
                {
                    this.OnKisaKod1Changing(value);
                    this.RaiseDataMemberChanging("KisaKod1");
                    this.ValidateProperty("KisaKod1", value);
                    this._kisaKod1 = value;
                    this.RaiseDataMemberChanged("KisaKod1");
                    this.OnKisaKod1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisaKod2' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisaKod2
        {
            get
            {
                return this._kisaKod2;
            }
            set
            {
                if ((this._kisaKod2 != value))
                {
                    this.OnKisaKod2Changing(value);
                    this.RaiseDataMemberChanging("KisaKod2");
                    this.ValidateProperty("KisaKod2", value);
                    this._kisaKod2 = value;
                    this.RaiseDataMemberChanged("KisaKod2");
                    this.OnKisaKod2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisaKod3' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisaKod3
        {
            get
            {
                return this._kisaKod3;
            }
            set
            {
                if ((this._kisaKod3 != value))
                {
                    this.OnKisaKod3Changing(value);
                    this.RaiseDataMemberChanging("KisaKod3");
                    this.ValidateProperty("KisaKod3", value);
                    this._kisaKod3 = value;
                    this.RaiseDataMemberChanged("KisaKod3");
                    this.OnKisaKod3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid OID
        {
            get
            {
                return this._oid;
            }
            set
            {
                if ((this._oid != value))
                {
                    this.OnOIDChanging(value);
                    this.ValidateProperty("OID", value);
                    this._oid = value;
                    this.RaisePropertyChanged("OID");
                    this.OnOIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Personel"/> entity.
        /// </summary>
        [Association("Personel_Departmanlar", "YoneticiId", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public Personel Personel
        {
            get
            {
                if ((this._personel == null))
                {
                    this._personel = new EntityRef<Personel>(this, "Personel", this.FilterPersonel);
                }
                return this._personel.Entity;
            }
            set
            {
                Personel previous = this.Personel;
                if ((previous != value))
                {
                    this.ValidateProperty("Personel", value);
                    if ((previous != null))
                    {
                        this._personel.Entity = null;
                        previous.Departmanlar.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.YoneticiId = value.OID;
                    }
                    else
                    {
                        this.YoneticiId = default(Nullable<Guid>);
                    }
                    this._personel.Entity = value;
                    if ((value != null))
                    {
                        value.Departmanlar.Add(this);
                    }
                    this.RaisePropertyChanged("Personel");
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Personel"/> entity instances.
        /// </summary>
        [Association("Departmanlar_Personel", "OID", "DepartmanID")]
        [XmlIgnore()]
        public EntityCollection<Personel> Personel1
        {
            get
            {
                if ((this._personel1 == null))
                {
                    this._personel1 = new EntityCollection<Personel>(this, "Personel1", this.FilterPersonel1, this.AttachPersonel1, this.DetachPersonel1);
                }
                return this._personel1;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SirketId' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> SirketId
        {
            get
            {
                return this._sirketId;
            }
            set
            {
                if ((this._sirketId != value))
                {
                    this.OnSirketIdChanging(value);
                    this.RaiseDataMemberChanging("SirketId");
                    this.ValidateProperty("SirketId", value);
                    this._sirketId = value;
                    this.RaiseDataMemberChanged("SirketId");
                    this.OnSirketIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TalepPerSayiAl' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> TalepPerSayiAl
        {
            get
            {
                return this._talepPerSayiAl;
            }
            set
            {
                if ((this._talepPerSayiAl != value))
                {
                    this.OnTalepPerSayiAlChanging(value);
                    this.RaiseDataMemberChanging("TalepPerSayiAl");
                    this.ValidateProperty("TalepPerSayiAl", value);
                    this._talepPerSayiAl = value;
                    this.RaiseDataMemberChanged("TalepPerSayiAl");
                    this.OnTalepPerSayiAlChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UstDepartmanId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> UstDepartmanId
        {
            get
            {
                return this._ustDepartmanId;
            }
            set
            {
                if ((this._ustDepartmanId != value))
                {
                    this.OnUstDepartmanIdChanging(value);
                    this.RaiseDataMemberChanging("UstDepartmanId");
                    this.ValidateProperty("UstDepartmanId", value);
                    this._ustDepartmanId = value;
                    this.RaiseDataMemberChanged("UstDepartmanId");
                    this.OnUstDepartmanIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UstDepartmanlaBirlestir' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> UstDepartmanlaBirlestir
        {
            get
            {
                return this._ustDepartmanlaBirlestir;
            }
            set
            {
                if ((this._ustDepartmanlaBirlestir != value))
                {
                    this.OnUstDepartmanlaBirlestirChanging(value);
                    this.RaiseDataMemberChanging("UstDepartmanlaBirlestir");
                    this.ValidateProperty("UstDepartmanlaBirlestir", value);
                    this._ustDepartmanlaBirlestir = value;
                    this.RaiseDataMemberChanged("UstDepartmanlaBirlestir");
                    this.OnUstDepartmanlaBirlestirChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'YoneticiId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> YoneticiId
        {
            get
            {
                return this._yoneticiId;
            }
            set
            {
                if ((this._yoneticiId != value))
                {
                    this.OnYoneticiIdChanging(value);
                    this.RaiseDataMemberChanging("YoneticiId");
                    this.ValidateProperty("YoneticiId", value);
                    this._yoneticiId = value;
                    this.RaiseDataMemberChanged("YoneticiId");
                    this.OnYoneticiIdChanged();
                }
            }
        }
        
        private void AttachDepartmanGorevler(DepartmanGorevler entity)
        {
            entity.Departmanlar = this;
        }
        
        private void DetachDepartmanGorevler(DepartmanGorevler entity)
        {
            entity.Departmanlar = null;
        }
        
        private bool FilterDepartmanGorevler(DepartmanGorevler entity)
        {
            return (entity.DepartmanID == this.OID);
        }
        
        private void AttachDepartmanlar1(Departmanlar entity)
        {
            entity.Departmanlar2 = this;
        }
        
        private void DetachDepartmanlar1(Departmanlar entity)
        {
            entity.Departmanlar2 = null;
        }
        
        private bool FilterDepartmanlar1(Departmanlar entity)
        {
            return (entity.UstDepartmanId == this.OID);
        }
        
        private bool FilterDepartmanlar2(Departmanlar entity)
        {
            return (entity.OID == this.UstDepartmanId);
        }
        
        private bool FilterPersonel(Personel entity)
        {
            return (entity.OID == this.YoneticiId);
        }
        
        private void AttachPersonel1(Personel entity)
        {
            entity.Departmanlar1 = this;
        }
        
        private void DetachPersonel1(Personel entity)
        {
            entity.Departmanlar1 = null;
        }
        
        private bool FilterPersonel1(Personel entity)
        {
            return (entity.DepartmanID == this.OID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._oid;
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'DSAtoz' DomainService.
    /// </summary>
    public sealed partial class DSAtoz : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSAtoz"/> class.
        /// </summary>
        public DSAtoz() : 
                this(new WebDomainClient<IDSAtozContract>(new Uri("OSYS-Web-DSAtoz.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSAtoz"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The DSAtoz service URI.</param>
        public DSAtoz(Uri serviceUri) : 
                this(new WebDomainClient<IDSAtozContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSAtoz"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public DSAtoz(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_GuestDiagnosisDetail"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_GuestDiagnosisDetail> SPA_GuestDiagnosisDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_GuestDiagnosisDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="View_SPA_GuestDiagnosticDetail"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<View_SPA_GuestDiagnosticDetail> View_SPA_GuestDiagnosticDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<View_SPA_GuestDiagnosticDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DbGuest"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<DbGuest> DbGuests
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DbGuest>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_Therapy"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_Therapy> SPA_Therapies
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_Therapy>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DBGuestServicePlan"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<DBGuestServicePlan> DBGuestServicePlans
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DBGuestServicePlan>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_PersonelJobDetail"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_PersonelJobDetail> SPA_PersonelJobDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_PersonelJobDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DbPersonelTherapy"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<DbPersonelTherapy> DbPersonelTherapies
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DbPersonelTherapy>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DbPersonelJobDetail"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<DbPersonelJobDetail> DbPersonelJobDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DbPersonelJobDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_RezervationSchedule"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_RezervationSchedule> SPA_RezervationSchedules
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_RezervationSchedule>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_Diagnosis"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_Diagnosis> SPA_Diagnosis
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_Diagnosis>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_GuestTherapyDetail"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_GuestTherapyDetail> SPA_GuestTherapyDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_GuestTherapyDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_PersonelTherapyDetail"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_PersonelTherapyDetail> SPA_PersonelTherapyDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_PersonelTherapyDetail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="SPA_Status"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<SPA_Status> SPA_Status
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SPA_Status>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="View_SPA_GuestReservation"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<View_SPA_GuestReservation> View_SPA_GuestReservations
        {
            get
            {
                return base.EntityContainer.GetEntitySet<View_SPA_GuestReservation>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="View_SPA_ReservationList"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<View_SPA_ReservationList> View_SPA_ReservationLists
        {
            get
            {
                return base.EntityContainer.GetEntitySet<View_SPA_ReservationList>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="View_SPA_ScheduleReservation"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<View_SPA_ScheduleReservation> View_SPA_ScheduleReservations
        {
            get
            {
                return base.EntityContainer.GetEntitySet<View_SPA_ScheduleReservation>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DBIzinPersonel"/> entity instances that have been loaded into this <see cref="DSAtoz"/> instance.
        /// </summary>
        public EntitySet<DBIzinPersonel> DBIzinPersonels
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DBIzinPersonel>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_GuestDiagnosisDetail"/> entity instances using the 'GetDiagnosisDetailUpdate' query.
        /// </summary>
        /// <param name="ID">The value for the 'ID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_GuestDiagnosisDetail"/> entity instances.</returns>
        public EntityQuery<SPA_GuestDiagnosisDetail> GetDiagnosisDetailUpdateQuery(string ID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("ID", ID);
            this.ValidateMethod("GetDiagnosisDetailUpdateQuery", parameters);
            return base.CreateQuery<SPA_GuestDiagnosisDetail>("GetDiagnosisDetailUpdate", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_GuestDiagnosticDetail"/> entity instances using the 'GetFizyoterapistByGuestID' query.
        /// </summary>
        /// <param name="GuestID">The value for the 'GuestID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_GuestDiagnosticDetail"/> entity instances.</returns>
        public EntityQuery<View_SPA_GuestDiagnosticDetail> GetFizyoterapistByGuestIDQuery(string GuestID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("GuestID", GuestID);
            this.ValidateMethod("GetFizyoterapistByGuestIDQuery", parameters);
            return base.CreateQuery<View_SPA_GuestDiagnosticDetail>("GetFizyoterapistByGuestID", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_GuestDiagnosisDetail"/> entity instances using the 'GetFizyoterapistDia' query.
        /// </summary>
        /// <param name="ID">The value for the 'ID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_GuestDiagnosisDetail"/> entity instances.</returns>
        public EntityQuery<SPA_GuestDiagnosisDetail> GetFizyoterapistDiaQuery(string ID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("ID", ID);
            this.ValidateMethod("GetFizyoterapistDiaQuery", parameters);
            return base.CreateQuery<SPA_GuestDiagnosisDetail>("GetFizyoterapistDia", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DbGuest"/> entity instances using the 'GetFizyoterapistGuest' query.
        /// </summary>
        /// <param name="fizyoterapisID">The value for the 'fizyoterapisID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DbGuest"/> entity instances.</returns>
        public EntityQuery<DbGuest> GetFizyoterapistGuestQuery(string fizyoterapisID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("fizyoterapisID", fizyoterapisID);
            this.ValidateMethod("GetFizyoterapistGuestQuery", parameters);
            return base.CreateQuery<DbGuest>("GetFizyoterapistGuest", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DbGuest"/> entity instances using the 'GetFizyoterapistGuestByID' query.
        /// </summary>
        /// <param name="ID">The value for the 'ID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DbGuest"/> entity instances.</returns>
        public EntityQuery<DbGuest> GetFizyoterapistGuestByIDQuery(string ID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("ID", ID);
            this.ValidateMethod("GetFizyoterapistGuestByIDQuery", parameters);
            return base.CreateQuery<DbGuest>("GetFizyoterapistGuestByID", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_Therapy"/> entity instances using the 'GetFizyoterapistTherapy' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_Therapy"/> entity instances.</returns>
        public EntityQuery<SPA_Therapy> GetFizyoterapistTherapyQuery()
        {
            this.ValidateMethod("GetFizyoterapistTherapyQuery", null);
            return base.CreateQuery<SPA_Therapy>("GetFizyoterapistTherapy", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DBGuestServicePlan"/> entity instances using the 'GetGuestServicePlan' query.
        /// </summary>
        /// <param name="GuestID">The value for the 'GuestID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DBGuestServicePlan"/> entity instances.</returns>
        public EntityQuery<DBGuestServicePlan> GetGuestServicePlanQuery(string GuestID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("GuestID", GuestID);
            this.ValidateMethod("GetGuestServicePlanQuery", parameters);
            return base.CreateQuery<DBGuestServicePlan>("GetGuestServicePlan", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_PersonelJobDetail"/> entity instances using the 'GetPersonelByTherapyID' query.
        /// </summary>
        /// <param name="therapyID">The value for the 'therapyID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_PersonelJobDetail"/> entity instances.</returns>
        public EntityQuery<SPA_PersonelJobDetail> GetPersonelByTherapyIDQuery(string therapyID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("therapyID", therapyID);
            this.ValidateMethod("GetPersonelByTherapyIDQuery", parameters);
            return base.CreateQuery<SPA_PersonelJobDetail>("GetPersonelByTherapyID", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_PersonelJobDetail"/> entity instances using the 'GetPersonelDetailList' query.
        /// </summary>
        /// <param name="ServisID">The value for the 'ServisID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_PersonelJobDetail"/> entity instances.</returns>
        public EntityQuery<SPA_PersonelJobDetail> GetPersonelDetailListQuery(string ServisID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("ServisID", ServisID);
            this.ValidateMethod("GetPersonelDetailListQuery", parameters);
            return base.CreateQuery<SPA_PersonelJobDetail>("GetPersonelDetailList", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DbPersonelTherapy"/> entity instances using the 'GetPersonelJobByAppointment' query.
        /// </summary>
        /// <param name="PersonelID">The value for the 'PersonelID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DbPersonelTherapy"/> entity instances.</returns>
        public EntityQuery<DbPersonelTherapy> GetPersonelJobByAppointmentQuery(string PersonelID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("PersonelID", PersonelID);
            this.ValidateMethod("GetPersonelJobByAppointmentQuery", parameters);
            return base.CreateQuery<DbPersonelTherapy>("GetPersonelJobByAppointment", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DbPersonelJobDetail"/> entity instances using the 'GetResourcePersonel' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DbPersonelJobDetail"/> entity instances.</returns>
        public EntityQuery<DbPersonelJobDetail> GetResourcePersonelQuery()
        {
            this.ValidateMethod("GetResourcePersonelQuery", null);
            return base.CreateQuery<DbPersonelJobDetail>("GetResourcePersonel", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_RezervationSchedule"/> entity instances using the 'GetRezervationScheduleByDatetime' query.
        /// </summary>
        /// <param name="dateTime">The value for the 'dateTime' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_RezervationSchedule"/> entity instances.</returns>
        public EntityQuery<SPA_RezervationSchedule> GetRezervationScheduleByDatetimeQuery(Nullable<DateTime> dateTime)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("dateTime", dateTime);
            this.ValidateMethod("GetRezervationScheduleByDatetimeQuery", parameters);
            return base.CreateQuery<SPA_RezervationSchedule>("GetRezervationScheduleByDatetime", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_Diagnosis"/> entity instances using the 'GetSPA_Diagnosis' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_Diagnosis"/> entity instances.</returns>
        public EntityQuery<SPA_Diagnosis> GetSPA_DiagnosisQuery()
        {
            this.ValidateMethod("GetSPA_DiagnosisQuery", null);
            return base.CreateQuery<SPA_Diagnosis>("GetSPA_Diagnosis", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_GuestDiagnosisDetail"/> entity instances using the 'GetSPA_GuestDiagnosisDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_GuestDiagnosisDetail"/> entity instances.</returns>
        public EntityQuery<SPA_GuestDiagnosisDetail> GetSPA_GuestDiagnosisDetailQuery()
        {
            this.ValidateMethod("GetSPA_GuestDiagnosisDetailQuery", null);
            return base.CreateQuery<SPA_GuestDiagnosisDetail>("GetSPA_GuestDiagnosisDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_GuestTherapyDetail"/> entity instances using the 'GetSPA_GuestTherapyDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_GuestTherapyDetail"/> entity instances.</returns>
        public EntityQuery<SPA_GuestTherapyDetail> GetSPA_GuestTherapyDetailQuery()
        {
            this.ValidateMethod("GetSPA_GuestTherapyDetailQuery", null);
            return base.CreateQuery<SPA_GuestTherapyDetail>("GetSPA_GuestTherapyDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_PersonelJobDetail"/> entity instances using the 'GetSPA_PersonelJobDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_PersonelJobDetail"/> entity instances.</returns>
        public EntityQuery<SPA_PersonelJobDetail> GetSPA_PersonelJobDetailQuery()
        {
            this.ValidateMethod("GetSPA_PersonelJobDetailQuery", null);
            return base.CreateQuery<SPA_PersonelJobDetail>("GetSPA_PersonelJobDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_PersonelTherapyDetail"/> entity instances using the 'GetSPA_PersonelTherapyDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_PersonelTherapyDetail"/> entity instances.</returns>
        public EntityQuery<SPA_PersonelTherapyDetail> GetSPA_PersonelTherapyDetailQuery()
        {
            this.ValidateMethod("GetSPA_PersonelTherapyDetailQuery", null);
            return base.CreateQuery<SPA_PersonelTherapyDetail>("GetSPA_PersonelTherapyDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_RezervationSchedule"/> entity instances using the 'GetSPA_RezervationSchedule' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_RezervationSchedule"/> entity instances.</returns>
        public EntityQuery<SPA_RezervationSchedule> GetSPA_RezervationScheduleQuery()
        {
            this.ValidateMethod("GetSPA_RezervationScheduleQuery", null);
            return base.CreateQuery<SPA_RezervationSchedule>("GetSPA_RezervationSchedule", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_Status"/> entity instances using the 'GetSPA_Status' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_Status"/> entity instances.</returns>
        public EntityQuery<SPA_Status> GetSPA_StatusQuery()
        {
            this.ValidateMethod("GetSPA_StatusQuery", null);
            return base.CreateQuery<SPA_Status>("GetSPA_Status", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_Therapy"/> entity instances using the 'GetSPA_Therapy' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_Therapy"/> entity instances.</returns>
        public EntityQuery<SPA_Therapy> GetSPA_TherapyQuery()
        {
            this.ValidateMethod("GetSPA_TherapyQuery", null);
            return base.CreateQuery<SPA_Therapy>("GetSPA_Therapy", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_GuestTherapyDetail"/> entity instances using the 'GetSpaGuestTherapyDetail' query.
        /// </summary>
        /// <param name="GuestID">The value for the 'GuestID' parameter of the query.</param>
        /// <param name="TherapyID">The value for the 'TherapyID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_GuestTherapyDetail"/> entity instances.</returns>
        public EntityQuery<SPA_GuestTherapyDetail> GetSpaGuestTherapyDetailQuery(string GuestID, string TherapyID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("GuestID", GuestID);
            parameters.Add("TherapyID", TherapyID);
            this.ValidateMethod("GetSpaGuestTherapyDetailQuery", parameters);
            return base.CreateQuery<SPA_GuestTherapyDetail>("GetSpaGuestTherapyDetail", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_Therapy"/> entity instances using the 'GetTherapyByID' query.
        /// </summary>
        /// <param name="ID">The value for the 'ID' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_Therapy"/> entity instances.</returns>
        public EntityQuery<SPA_Therapy> GetTherapyByIDQuery(string ID)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("ID", ID);
            this.ValidateMethod("GetTherapyByIDQuery", parameters);
            return base.CreateQuery<SPA_Therapy>("GetTherapyByID", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SPA_GuestTherapyDetail"/> entity instances using the 'GetTherapyGuestDetail' query.
        /// </summary>
        /// <param name="id">The value for the 'id' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SPA_GuestTherapyDetail"/> entity instances.</returns>
        public EntityQuery<SPA_GuestTherapyDetail> GetTherapyGuestDetailQuery(string id)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("id", id);
            this.ValidateMethod("GetTherapyGuestDetailQuery", parameters);
            return base.CreateQuery<SPA_GuestTherapyDetail>("GetTherapyGuestDetail", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_GuestDiagnosticDetail"/> entity instances using the 'GetView_SPA_GuestDiagnosticDetail' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_GuestDiagnosticDetail"/> entity instances.</returns>
        public EntityQuery<View_SPA_GuestDiagnosticDetail> GetView_SPA_GuestDiagnosticDetailQuery()
        {
            this.ValidateMethod("GetView_SPA_GuestDiagnosticDetailQuery", null);
            return base.CreateQuery<View_SPA_GuestDiagnosticDetail>("GetView_SPA_GuestDiagnosticDetail", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_GuestReservation"/> entity instances using the 'GetView_SPA_GuestReservation' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_GuestReservation"/> entity instances.</returns>
        public EntityQuery<View_SPA_GuestReservation> GetView_SPA_GuestReservationQuery()
        {
            this.ValidateMethod("GetView_SPA_GuestReservationQuery", null);
            return base.CreateQuery<View_SPA_GuestReservation>("GetView_SPA_GuestReservation", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_ReservationList"/> entity instances using the 'GetView_SPA_ReservationList' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_ReservationList"/> entity instances.</returns>
        public EntityQuery<View_SPA_ReservationList> GetView_SPA_ReservationListQuery()
        {
            this.ValidateMethod("GetView_SPA_ReservationListQuery", null);
            return base.CreateQuery<View_SPA_ReservationList>("GetView_SPA_ReservationList", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_ScheduleReservation"/> entity instances using the 'GetView_SPA_ScheduleReservation' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_ScheduleReservation"/> entity instances.</returns>
        public EntityQuery<View_SPA_ScheduleReservation> GetView_SPA_ScheduleReservationQuery()
        {
            this.ValidateMethod("GetView_SPA_ScheduleReservationQuery", null);
            return base.CreateQuery<View_SPA_ScheduleReservation>("GetView_SPA_ScheduleReservation", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_GuestReservation"/> entity instances using the 'GetViewSpaGuestReservation' query.
        /// </summary>
        /// <param name="roomNumber">The value for the 'roomNumber' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_GuestReservation"/> entity instances.</returns>
        public EntityQuery<View_SPA_GuestReservation> GetViewSpaGuestReservationQuery(string roomNumber)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("roomNumber", roomNumber);
            this.ValidateMethod("GetViewSpaGuestReservationQuery", parameters);
            return base.CreateQuery<View_SPA_GuestReservation>("GetViewSpaGuestReservation", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DBIzinPersonel"/> entity instances using the 'InsertIzinliPersonel' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DBIzinPersonel"/> entity instances.</returns>
        public EntityQuery<DBIzinPersonel> InsertIzinliPersonelQuery()
        {
            this.ValidateMethod("InsertIzinliPersonelQuery", null);
            return base.CreateQuery<DBIzinPersonel>("InsertIzinliPersonel", null, false, true);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'LoginRole' method of the DomainService.
        /// </summary>
        /// <param name="username">The value for the 'username' parameter of this action.</param>
        /// <param name="password">The value for the 'password' parameter of this action.</param>
        /// <param name="menuAdi">The value for the 'menuAdi' parameter of this action.</param>
        /// <param name="YetkiAdi">The value for the 'YetkiAdi' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> LoginRole(string username, string password, string menuAdi, string YetkiAdi, Action<InvokeOperation<int>> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("username", username);
            parameters.Add("password", password);
            parameters.Add("menuAdi", menuAdi);
            parameters.Add("YetkiAdi", YetkiAdi);
            this.ValidateMethod("LoginRole", parameters);
            return ((InvokeOperation<int>)(this.InvokeOperation("LoginRole", typeof(int), parameters, true, callback, userState)));
        }
        
        /// <summary>
        /// Asynchronously invokes the 'LoginRole' method of the DomainService.
        /// </summary>
        /// <param name="username">The value for the 'username' parameter of this action.</param>
        /// <param name="password">The value for the 'password' parameter of this action.</param>
        /// <param name="menuAdi">The value for the 'menuAdi' parameter of this action.</param>
        /// <param name="YetkiAdi">The value for the 'YetkiAdi' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation<int> LoginRole(string username, string password, string menuAdi, string YetkiAdi)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("username", username);
            parameters.Add("password", password);
            parameters.Add("menuAdi", menuAdi);
            parameters.Add("YetkiAdi", YetkiAdi);
            this.ValidateMethod("LoginRole", parameters);
            return ((InvokeOperation<int>)(this.InvokeOperation("LoginRole", typeof(int), parameters, true, null, null)));
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new DSAtozEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'DSAtoz' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IDSAtozContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetDiagnosisDetailUpdate' operation.
            /// </summary>
            /// <param name="ID">The value for the 'ID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetDiagnosisDetailUpdateDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetDiagnosisDetailUpdate", ReplyAction="http://tempuri.org/DSAtoz/GetDiagnosisDetailUpdateResponse")]
            [WebGet()]
            IAsyncResult BeginGetDiagnosisDetailUpdate(string ID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDiagnosisDetailUpdate'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDiagnosisDetailUpdate'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDiagnosisDetailUpdate' operation.</returns>
            QueryResult<SPA_GuestDiagnosisDetail> EndGetDiagnosisDetailUpdate(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetFizyoterapistByGuestID' operation.
            /// </summary>
            /// <param name="GuestID">The value for the 'GuestID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetFizyoterapistByGuestIDDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetFizyoterapistByGuestID", ReplyAction="http://tempuri.org/DSAtoz/GetFizyoterapistByGuestIDResponse")]
            [WebGet()]
            IAsyncResult BeginGetFizyoterapistByGuestID(string GuestID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetFizyoterapistByGuestID'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetFizyoterapistByGuestID'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetFizyoterapistByGuestID' operation.</returns>
            QueryResult<View_SPA_GuestDiagnosticDetail> EndGetFizyoterapistByGuestID(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetFizyoterapistDia' operation.
            /// </summary>
            /// <param name="ID">The value for the 'ID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetFizyoterapistDiaDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetFizyoterapistDia", ReplyAction="http://tempuri.org/DSAtoz/GetFizyoterapistDiaResponse")]
            [WebGet()]
            IAsyncResult BeginGetFizyoterapistDia(string ID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetFizyoterapistDia'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetFizyoterapistDia'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetFizyoterapistDia' operation.</returns>
            QueryResult<SPA_GuestDiagnosisDetail> EndGetFizyoterapistDia(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetFizyoterapistGuest' operation.
            /// </summary>
            /// <param name="fizyoterapisID">The value for the 'fizyoterapisID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetFizyoterapistGuestDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetFizyoterapistGuest", ReplyAction="http://tempuri.org/DSAtoz/GetFizyoterapistGuestResponse")]
            [WebGet()]
            IAsyncResult BeginGetFizyoterapistGuest(string fizyoterapisID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetFizyoterapistGuest'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetFizyoterapistGuest'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetFizyoterapistGuest' operation.</returns>
            QueryResult<DbGuest> EndGetFizyoterapistGuest(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetFizyoterapistGuestByID' operation.
            /// </summary>
            /// <param name="ID">The value for the 'ID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetFizyoterapistGuestByIDDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetFizyoterapistGuestByID", ReplyAction="http://tempuri.org/DSAtoz/GetFizyoterapistGuestByIDResponse")]
            [WebGet()]
            IAsyncResult BeginGetFizyoterapistGuestByID(string ID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetFizyoterapistGuestByID'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetFizyoterapistGuestByID'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetFizyoterapistGuestByID' operation.</returns>
            QueryResult<DbGuest> EndGetFizyoterapistGuestByID(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetFizyoterapistTherapy' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetFizyoterapistTherapyDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetFizyoterapistTherapy", ReplyAction="http://tempuri.org/DSAtoz/GetFizyoterapistTherapyResponse")]
            [WebGet()]
            IAsyncResult BeginGetFizyoterapistTherapy(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetFizyoterapistTherapy'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetFizyoterapistTherapy'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetFizyoterapistTherapy' operation.</returns>
            QueryResult<SPA_Therapy> EndGetFizyoterapistTherapy(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetGuestServicePlan' operation.
            /// </summary>
            /// <param name="GuestID">The value for the 'GuestID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetGuestServicePlanDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetGuestServicePlan", ReplyAction="http://tempuri.org/DSAtoz/GetGuestServicePlanResponse")]
            [WebGet()]
            IAsyncResult BeginGetGuestServicePlan(string GuestID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetGuestServicePlan'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetGuestServicePlan'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetGuestServicePlan' operation.</returns>
            QueryResult<DBGuestServicePlan> EndGetGuestServicePlan(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelByTherapyID' operation.
            /// </summary>
            /// <param name="therapyID">The value for the 'therapyID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetPersonelByTherapyIDDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetPersonelByTherapyID", ReplyAction="http://tempuri.org/DSAtoz/GetPersonelByTherapyIDResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelByTherapyID(string therapyID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelByTherapyID'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelByTherapyID'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelByTherapyID' operation.</returns>
            QueryResult<SPA_PersonelJobDetail> EndGetPersonelByTherapyID(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelDetailList' operation.
            /// </summary>
            /// <param name="ServisID">The value for the 'ServisID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetPersonelDetailListDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetPersonelDetailList", ReplyAction="http://tempuri.org/DSAtoz/GetPersonelDetailListResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelDetailList(string ServisID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelDetailList'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelDetailList'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelDetailList' operation.</returns>
            QueryResult<SPA_PersonelJobDetail> EndGetPersonelDetailList(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelJobByAppointment' operation.
            /// </summary>
            /// <param name="PersonelID">The value for the 'PersonelID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetPersonelJobByAppointmentDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetPersonelJobByAppointment", ReplyAction="http://tempuri.org/DSAtoz/GetPersonelJobByAppointmentResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelJobByAppointment(string PersonelID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelJobByAppointment'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelJobByAppointment'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelJobByAppointment' operation.</returns>
            QueryResult<DbPersonelTherapy> EndGetPersonelJobByAppointment(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetResourcePersonel' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetResourcePersonelDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetResourcePersonel", ReplyAction="http://tempuri.org/DSAtoz/GetResourcePersonelResponse")]
            [WebGet()]
            IAsyncResult BeginGetResourcePersonel(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetResourcePersonel'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetResourcePersonel'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetResourcePersonel' operation.</returns>
            QueryResult<DbPersonelJobDetail> EndGetResourcePersonel(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetRezervationScheduleByDatetime' operation.
            /// </summary>
            /// <param name="dateTime">The value for the 'dateTime' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetRezervationScheduleByDatetimeDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetRezervationScheduleByDatetime", ReplyAction="http://tempuri.org/DSAtoz/GetRezervationScheduleByDatetimeResponse")]
            [WebGet()]
            IAsyncResult BeginGetRezervationScheduleByDatetime(Nullable<DateTime> dateTime, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetRezervationScheduleByDatetime'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetRezervationScheduleByDatetime'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetRezervationScheduleByDatetime' operation.</returns>
            QueryResult<SPA_RezervationSchedule> EndGetRezervationScheduleByDatetime(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_Diagnosis' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_DiagnosisDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_Diagnosis", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_DiagnosisResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_Diagnosis(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_Diagnosis'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_Diagnosis'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_Diagnosis' operation.</returns>
            QueryResult<SPA_Diagnosis> EndGetSPA_Diagnosis(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_GuestDiagnosisDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_GuestDiagnosisDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_GuestDiagnosisDetail", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_GuestDiagnosisDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_GuestDiagnosisDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_GuestDiagnosisDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_GuestDiagnosisDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_GuestDiagnosisDetail' operation.</returns>
            QueryResult<SPA_GuestDiagnosisDetail> EndGetSPA_GuestDiagnosisDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_GuestTherapyDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_GuestTherapyDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_GuestTherapyDetail", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_GuestTherapyDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_GuestTherapyDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_GuestTherapyDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_GuestTherapyDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_GuestTherapyDetail' operation.</returns>
            QueryResult<SPA_GuestTherapyDetail> EndGetSPA_GuestTherapyDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_PersonelJobDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_PersonelJobDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_PersonelJobDetail", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_PersonelJobDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_PersonelJobDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_PersonelJobDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_PersonelJobDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_PersonelJobDetail' operation.</returns>
            QueryResult<SPA_PersonelJobDetail> EndGetSPA_PersonelJobDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_PersonelTherapyDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_PersonelTherapyDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_PersonelTherapyDetail", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_PersonelTherapyDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_PersonelTherapyDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_PersonelTherapyDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_PersonelTherapyDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_PersonelTherapyDetail' operation.</returns>
            QueryResult<SPA_PersonelTherapyDetail> EndGetSPA_PersonelTherapyDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_RezervationSchedule' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_RezervationScheduleDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_RezervationSchedule", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_RezervationScheduleResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_RezervationSchedule(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_RezervationSchedule'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_RezervationSchedule'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_RezervationSchedule' operation.</returns>
            QueryResult<SPA_RezervationSchedule> EndGetSPA_RezervationSchedule(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_Status' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_StatusDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_Status", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_StatusResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_Status(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_Status'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_Status'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_Status' operation.</returns>
            QueryResult<SPA_Status> EndGetSPA_Status(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSPA_Therapy' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSPA_TherapyDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSPA_Therapy", ReplyAction="http://tempuri.org/DSAtoz/GetSPA_TherapyResponse")]
            [WebGet()]
            IAsyncResult BeginGetSPA_Therapy(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSPA_Therapy'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSPA_Therapy'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSPA_Therapy' operation.</returns>
            QueryResult<SPA_Therapy> EndGetSPA_Therapy(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetSpaGuestTherapyDetail' operation.
            /// </summary>
            /// <param name="GuestID">The value for the 'GuestID' parameter of this action.</param>
            /// <param name="TherapyID">The value for the 'TherapyID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetSpaGuestTherapyDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetSpaGuestTherapyDetail", ReplyAction="http://tempuri.org/DSAtoz/GetSpaGuestTherapyDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetSpaGuestTherapyDetail(string GuestID, string TherapyID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSpaGuestTherapyDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSpaGuestTherapyDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSpaGuestTherapyDetail' operation.</returns>
            QueryResult<SPA_GuestTherapyDetail> EndGetSpaGuestTherapyDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTherapyByID' operation.
            /// </summary>
            /// <param name="ID">The value for the 'ID' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetTherapyByIDDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetTherapyByID", ReplyAction="http://tempuri.org/DSAtoz/GetTherapyByIDResponse")]
            [WebGet()]
            IAsyncResult BeginGetTherapyByID(string ID, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTherapyByID'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTherapyByID'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTherapyByID' operation.</returns>
            QueryResult<SPA_Therapy> EndGetTherapyByID(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetTherapyGuestDetail' operation.
            /// </summary>
            /// <param name="id">The value for the 'id' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetTherapyGuestDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetTherapyGuestDetail", ReplyAction="http://tempuri.org/DSAtoz/GetTherapyGuestDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetTherapyGuestDetail(string id, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetTherapyGuestDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetTherapyGuestDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetTherapyGuestDetail' operation.</returns>
            QueryResult<SPA_GuestTherapyDetail> EndGetTherapyGuestDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetView_SPA_GuestDiagnosticDetail' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetView_SPA_GuestDiagnosticDetailDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetView_SPA_GuestDiagnosticDetail", ReplyAction="http://tempuri.org/DSAtoz/GetView_SPA_GuestDiagnosticDetailResponse")]
            [WebGet()]
            IAsyncResult BeginGetView_SPA_GuestDiagnosticDetail(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetView_SPA_GuestDiagnosticDetail'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetView_SPA_GuestDiagnosticDetail'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetView_SPA_GuestDiagnosticDetail' operation.</returns>
            QueryResult<View_SPA_GuestDiagnosticDetail> EndGetView_SPA_GuestDiagnosticDetail(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetView_SPA_GuestReservation' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetView_SPA_GuestReservationDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetView_SPA_GuestReservation", ReplyAction="http://tempuri.org/DSAtoz/GetView_SPA_GuestReservationResponse")]
            [WebGet()]
            IAsyncResult BeginGetView_SPA_GuestReservation(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetView_SPA_GuestReservation'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetView_SPA_GuestReservation'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetView_SPA_GuestReservation' operation.</returns>
            QueryResult<View_SPA_GuestReservation> EndGetView_SPA_GuestReservation(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetView_SPA_ReservationList' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetView_SPA_ReservationListDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetView_SPA_ReservationList", ReplyAction="http://tempuri.org/DSAtoz/GetView_SPA_ReservationListResponse")]
            [WebGet()]
            IAsyncResult BeginGetView_SPA_ReservationList(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetView_SPA_ReservationList'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetView_SPA_ReservationList'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetView_SPA_ReservationList' operation.</returns>
            QueryResult<View_SPA_ReservationList> EndGetView_SPA_ReservationList(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetView_SPA_ScheduleReservation' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetView_SPA_ScheduleReservationDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetView_SPA_ScheduleReservation", ReplyAction="http://tempuri.org/DSAtoz/GetView_SPA_ScheduleReservationResponse")]
            [WebGet()]
            IAsyncResult BeginGetView_SPA_ScheduleReservation(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetView_SPA_ScheduleReservation'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetView_SPA_ScheduleReservation'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetView_SPA_ScheduleReservation' operation.</returns>
            QueryResult<View_SPA_ScheduleReservation> EndGetView_SPA_ScheduleReservation(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetViewSpaGuestReservation' operation.
            /// </summary>
            /// <param name="roomNumber">The value for the 'roomNumber' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/GetViewSpaGuestReservationDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/GetViewSpaGuestReservation", ReplyAction="http://tempuri.org/DSAtoz/GetViewSpaGuestReservationResponse")]
            [WebGet()]
            IAsyncResult BeginGetViewSpaGuestReservation(string roomNumber, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetViewSpaGuestReservation'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetViewSpaGuestReservation'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetViewSpaGuestReservation' operation.</returns>
            QueryResult<View_SPA_GuestReservation> EndGetViewSpaGuestReservation(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'InsertIzinliPersonel' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/InsertIzinliPersonelDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/InsertIzinliPersonel", ReplyAction="http://tempuri.org/DSAtoz/InsertIzinliPersonelResponse")]
            [WebGet()]
            IAsyncResult BeginInsertIzinliPersonel(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginInsertIzinliPersonel'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginInsertIzinliPersonel'.</param>
            /// <returns>The 'QueryResult' returned from the 'InsertIzinliPersonel' operation.</returns>
            QueryResult<DBIzinPersonel> EndInsertIzinliPersonel(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'LoginRole' operation.
            /// </summary>
            /// <param name="username">The value for the 'username' parameter of this action.</param>
            /// <param name="password">The value for the 'password' parameter of this action.</param>
            /// <param name="menuAdi">The value for the 'menuAdi' parameter of this action.</param>
            /// <param name="YetkiAdi">The value for the 'YetkiAdi' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/LoginRoleDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/LoginRole", ReplyAction="http://tempuri.org/DSAtoz/LoginRoleResponse")]
            IAsyncResult BeginLoginRole(string username, string password, string menuAdi, string YetkiAdi, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginLoginRole'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginLoginRole'.</param>
            /// <returns>The 'Int32' returned from the 'LoginRole' operation.</returns>
            int EndLoginRole(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSAtoz/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSAtoz/SubmitChanges", ReplyAction="http://tempuri.org/DSAtoz/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class DSAtozEntityContainer : EntityContainer
        {
            
            public DSAtozEntityContainer()
            {
                this.CreateEntitySet<DbGuest>(EntitySetOperations.None);
                this.CreateEntitySet<DBGuestServicePlan>(EntitySetOperations.None);
                this.CreateEntitySet<DBIzinPersonel>(EntitySetOperations.None);
                this.CreateEntitySet<DbPersonelJobDetail>(EntitySetOperations.None);
                this.CreateEntitySet<DbPersonelTherapy>(EntitySetOperations.None);
                this.CreateEntitySet<SPA_Diagnosis>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_GuestDiagnosisDetail>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_GuestTherapyDetail>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_PersonelJobDetail>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_PersonelTherapyDetail>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_RezervationSchedule>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_Status>(EntitySetOperations.All);
                this.CreateEntitySet<SPA_Therapy>(EntitySetOperations.All);
                this.CreateEntitySet<View_SPA_GuestDiagnosticDetail>(EntitySetOperations.All);
                this.CreateEntitySet<View_SPA_GuestReservation>(EntitySetOperations.All);
                this.CreateEntitySet<View_SPA_ReservationList>(EntitySetOperations.All);
                this.CreateEntitySet<View_SPA_ScheduleReservation>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'DSCapriceOfis' DomainService.
    /// </summary>
    public sealed partial class DSCapriceOfis : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSCapriceOfis"/> class.
        /// </summary>
        public DSCapriceOfis() : 
                this(new WebDomainClient<IDSCapriceOfisContract>(new Uri("OSYS-Web-DSCapriceOfis.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSCapriceOfis"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The DSCapriceOfis service URI.</param>
        public DSCapriceOfis(Uri serviceUri) : 
                this(new WebDomainClient<IDSCapriceOfisContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSCapriceOfis"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public DSCapriceOfis(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="DepartmanGorevler"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<DepartmanGorevler> DepartmanGorevlers
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DepartmanGorevler>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Departmanlar"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<Departmanlar> Departmanlars
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Departmanlar>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DbLogin"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<DbLogin> DbLogins
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DbLogin>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Personel"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<Personel> Personels
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Personel>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="DbPersonel"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<DbPersonel> DbPersonels
        {
            get
            {
                return base.EntityContainer.GetEntitySet<DbPersonel>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PersonelIzinDatalari"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<PersonelIzinDatalari> PersonelIzinDatalaris
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PersonelIzinDatalari>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="PersonelProfili"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<PersonelProfili> PersonelProfilis
        {
            get
            {
                return base.EntityContainer.GetEntitySet<PersonelProfili>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="User"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<User> Users
        {
            get
            {
                return base.EntityContainer.GetEntitySet<User>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserApplications"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<UserApplications> UserApplications
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserApplications>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserAppRoles"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<UserAppRoles> UserAppRoles
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserAppRoles>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserRightDefinitions"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<UserRightDefinitions> UserRightDefinitions
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserRightDefinitions>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserRoleDetails"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<UserRoleDetails> UserRoleDetails
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserRoleDetails>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="UserRoles"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<UserRoles> UserRoles
        {
            get
            {
                return base.EntityContainer.GetEntitySet<UserRoles>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="View_SPA_PersonelIzin"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<View_SPA_PersonelIzin> View_SPA_PersonelIzins
        {
            get
            {
                return base.EntityContainer.GetEntitySet<View_SPA_PersonelIzin>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="View_SPA_PersonelProfil"/> entity instances that have been loaded into this <see cref="DSCapriceOfis"/> instance.
        /// </summary>
        public EntitySet<View_SPA_PersonelProfil> View_SPA_PersonelProfils
        {
            get
            {
                return base.EntityContainer.GetEntitySet<View_SPA_PersonelProfil>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DepartmanGorevler"/> entity instances using the 'GetDepartmanGorevler' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DepartmanGorevler"/> entity instances.</returns>
        public EntityQuery<DepartmanGorevler> GetDepartmanGorevlerQuery()
        {
            this.ValidateMethod("GetDepartmanGorevlerQuery", null);
            return base.CreateQuery<DepartmanGorevler>("GetDepartmanGorevler", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Departmanlar"/> entity instances using the 'GetDepartmanlar' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Departmanlar"/> entity instances.</returns>
        public EntityQuery<Departmanlar> GetDepartmanlarQuery()
        {
            this.ValidateMethod("GetDepartmanlarQuery", null);
            return base.CreateQuery<Departmanlar>("GetDepartmanlar", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DbLogin"/> entity instances using the 'GetLogin' query.
        /// </summary>
        /// <param name="userName">The value for the 'userName' parameter of the query.</param>
        /// <param name="password">The value for the 'password' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DbLogin"/> entity instances.</returns>
        public EntityQuery<DbLogin> GetLoginQuery(string userName, string password)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("userName", userName);
            parameters.Add("password", password);
            this.ValidateMethod("GetLoginQuery", parameters);
            return base.CreateQuery<DbLogin>("GetLogin", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Personel"/> entity instances using the 'GetPersonel' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Personel"/> entity instances.</returns>
        public EntityQuery<Personel> GetPersonelQuery()
        {
            this.ValidateMethod("GetPersonelQuery", null);
            return base.CreateQuery<Personel>("GetPersonel", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Personel"/> entity instances using the 'GetPersonelByFizyoterapist' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Personel"/> entity instances.</returns>
        public EntityQuery<Personel> GetPersonelByFizyoterapistQuery()
        {
            this.ValidateMethod("GetPersonelByFizyoterapistQuery", null);
            return base.CreateQuery<Personel>("GetPersonelByFizyoterapist", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="DbPersonel"/> entity instances using the 'GetPersonelByPersonelAdi' query.
        /// </summary>
        /// <param name="personelAdi">The value for the 'personelAdi' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="DbPersonel"/> entity instances.</returns>
        public EntityQuery<DbPersonel> GetPersonelByPersonelAdiQuery(string personelAdi)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("personelAdi", personelAdi);
            this.ValidateMethod("GetPersonelByPersonelAdiQuery", parameters);
            return base.CreateQuery<DbPersonel>("GetPersonelByPersonelAdi", parameters, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PersonelIzinDatalari"/> entity instances using the 'GetPersonelIzinDatalari' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PersonelIzinDatalari"/> entity instances.</returns>
        public EntityQuery<PersonelIzinDatalari> GetPersonelIzinDatalariQuery()
        {
            this.ValidateMethod("GetPersonelIzinDatalariQuery", null);
            return base.CreateQuery<PersonelIzinDatalari>("GetPersonelIzinDatalari", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="PersonelProfili"/> entity instances using the 'GetPersonelProfili' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="PersonelProfili"/> entity instances.</returns>
        public EntityQuery<PersonelProfili> GetPersonelProfiliQuery()
        {
            this.ValidateMethod("GetPersonelProfiliQuery", null);
            return base.CreateQuery<PersonelProfili>("GetPersonelProfili", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="User"/> entity instances using the 'GetUser' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="User"/> entity instances.</returns>
        public EntityQuery<User> GetUserQuery()
        {
            this.ValidateMethod("GetUserQuery", null);
            return base.CreateQuery<User>("GetUser", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserApplications"/> entity instances using the 'GetUserApplications' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserApplications"/> entity instances.</returns>
        public EntityQuery<UserApplications> GetUserApplicationsQuery()
        {
            this.ValidateMethod("GetUserApplicationsQuery", null);
            return base.CreateQuery<UserApplications>("GetUserApplications", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserAppRoles"/> entity instances using the 'GetUserAppRoles' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserAppRoles"/> entity instances.</returns>
        public EntityQuery<UserAppRoles> GetUserAppRolesQuery()
        {
            this.ValidateMethod("GetUserAppRolesQuery", null);
            return base.CreateQuery<UserAppRoles>("GetUserAppRoles", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserRightDefinitions"/> entity instances using the 'GetUserRightDefinitions' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserRightDefinitions"/> entity instances.</returns>
        public EntityQuery<UserRightDefinitions> GetUserRightDefinitionsQuery()
        {
            this.ValidateMethod("GetUserRightDefinitionsQuery", null);
            return base.CreateQuery<UserRightDefinitions>("GetUserRightDefinitions", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserRoleDetails"/> entity instances using the 'GetUserRoleDetails' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserRoleDetails"/> entity instances.</returns>
        public EntityQuery<UserRoleDetails> GetUserRoleDetailsQuery()
        {
            this.ValidateMethod("GetUserRoleDetailsQuery", null);
            return base.CreateQuery<UserRoleDetails>("GetUserRoleDetails", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="UserRoles"/> entity instances using the 'GetUserRoles' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="UserRoles"/> entity instances.</returns>
        public EntityQuery<UserRoles> GetUserRolesQuery()
        {
            this.ValidateMethod("GetUserRolesQuery", null);
            return base.CreateQuery<UserRoles>("GetUserRoles", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_PersonelIzin"/> entity instances using the 'GetView_SPA_PersonelIzin' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_PersonelIzin"/> entity instances.</returns>
        public EntityQuery<View_SPA_PersonelIzin> GetView_SPA_PersonelIzinQuery()
        {
            this.ValidateMethod("GetView_SPA_PersonelIzinQuery", null);
            return base.CreateQuery<View_SPA_PersonelIzin>("GetView_SPA_PersonelIzin", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_PersonelProfil"/> entity instances using the 'GetView_SPA_PersonelProfil' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_PersonelProfil"/> entity instances.</returns>
        public EntityQuery<View_SPA_PersonelProfil> GetView_SPA_PersonelProfilQuery()
        {
            this.ValidateMethod("GetView_SPA_PersonelProfilQuery", null);
            return base.CreateQuery<View_SPA_PersonelProfil>("GetView_SPA_PersonelProfil", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="View_SPA_PersonelProfil"/> entity instances using the 'GetViewPersonelProfil' query.
        /// </summary>
        /// <param name="Adi">The value for the 'Adi' parameter of the query.</param>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="View_SPA_PersonelProfil"/> entity instances.</returns>
        public EntityQuery<View_SPA_PersonelProfil> GetViewPersonelProfilQuery(string Adi)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("Adi", Adi);
            this.ValidateMethod("GetViewPersonelProfilQuery", parameters);
            return base.CreateQuery<View_SPA_PersonelProfil>("GetViewPersonelProfil", parameters, false, true);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'LoginUser' method of the DomainService.
        /// </summary>
        /// <param name="username">The value for the 'username' parameter of this action.</param>
        /// <param name="password">The value for the 'password' parameter of this action.</param>
        /// <param name="callback">Callback to invoke when the operation completes.</param>
        /// <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation LoginUser(string username, string password, Action<InvokeOperation> callback, object userState)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("username", username);
            parameters.Add("password", password);
            this.ValidateMethod("LoginUser", parameters);
            return this.InvokeOperation("LoginUser", typeof(void), parameters, true, callback, userState);
        }
        
        /// <summary>
        /// Asynchronously invokes the 'LoginUser' method of the DomainService.
        /// </summary>
        /// <param name="username">The value for the 'username' parameter of this action.</param>
        /// <param name="password">The value for the 'password' parameter of this action.</param>
        /// <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        public InvokeOperation LoginUser(string username, string password)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("username", username);
            parameters.Add("password", password);
            this.ValidateMethod("LoginUser", parameters);
            return this.InvokeOperation("LoginUser", typeof(void), parameters, true, null, null);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new DSCapriceOfisEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'DSCapriceOfis' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IDSCapriceOfisContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetDepartmanGorevler' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetDepartmanGorevlerDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetDepartmanGorevler", ReplyAction="http://tempuri.org/DSCapriceOfis/GetDepartmanGorevlerResponse")]
            [WebGet()]
            IAsyncResult BeginGetDepartmanGorevler(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDepartmanGorevler'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDepartmanGorevler'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDepartmanGorevler' operation.</returns>
            QueryResult<DepartmanGorevler> EndGetDepartmanGorevler(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetDepartmanlar' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetDepartmanlarDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetDepartmanlar", ReplyAction="http://tempuri.org/DSCapriceOfis/GetDepartmanlarResponse")]
            [WebGet()]
            IAsyncResult BeginGetDepartmanlar(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDepartmanlar'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDepartmanlar'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDepartmanlar' operation.</returns>
            QueryResult<Departmanlar> EndGetDepartmanlar(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetLogin' operation.
            /// </summary>
            /// <param name="userName">The value for the 'userName' parameter of this action.</param>
            /// <param name="password">The value for the 'password' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetLoginDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetLogin", ReplyAction="http://tempuri.org/DSCapriceOfis/GetLoginResponse")]
            [WebGet()]
            IAsyncResult BeginGetLogin(string userName, string password, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetLogin'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetLogin'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetLogin' operation.</returns>
            QueryResult<DbLogin> EndGetLogin(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonel' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetPersonelDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetPersonel", ReplyAction="http://tempuri.org/DSCapriceOfis/GetPersonelResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonel(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonel'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonel'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonel' operation.</returns>
            QueryResult<Personel> EndGetPersonel(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelByFizyoterapist' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetPersonelByFizyoterapistDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetPersonelByFizyoterapist", ReplyAction="http://tempuri.org/DSCapriceOfis/GetPersonelByFizyoterapistResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelByFizyoterapist(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelByFizyoterapist'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelByFizyoterapist'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelByFizyoterapist' operation.</returns>
            QueryResult<Personel> EndGetPersonelByFizyoterapist(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelByPersonelAdi' operation.
            /// </summary>
            /// <param name="personelAdi">The value for the 'personelAdi' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetPersonelByPersonelAdiDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetPersonelByPersonelAdi", ReplyAction="http://tempuri.org/DSCapriceOfis/GetPersonelByPersonelAdiResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelByPersonelAdi(string personelAdi, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelByPersonelAdi'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelByPersonelAdi'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelByPersonelAdi' operation.</returns>
            QueryResult<DbPersonel> EndGetPersonelByPersonelAdi(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelIzinDatalari' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetPersonelIzinDatalariDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetPersonelIzinDatalari", ReplyAction="http://tempuri.org/DSCapriceOfis/GetPersonelIzinDatalariResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelIzinDatalari(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelIzinDatalari'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelIzinDatalari'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelIzinDatalari' operation.</returns>
            QueryResult<PersonelIzinDatalari> EndGetPersonelIzinDatalari(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetPersonelProfili' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetPersonelProfiliDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetPersonelProfili", ReplyAction="http://tempuri.org/DSCapriceOfis/GetPersonelProfiliResponse")]
            [WebGet()]
            IAsyncResult BeginGetPersonelProfili(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetPersonelProfili'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetPersonelProfili'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetPersonelProfili' operation.</returns>
            QueryResult<PersonelProfili> EndGetPersonelProfili(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUser' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetUserDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetUser", ReplyAction="http://tempuri.org/DSCapriceOfis/GetUserResponse")]
            [WebGet()]
            IAsyncResult BeginGetUser(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUser'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUser'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUser' operation.</returns>
            QueryResult<User> EndGetUser(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserApplications' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetUserApplicationsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetUserApplications", ReplyAction="http://tempuri.org/DSCapriceOfis/GetUserApplicationsResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserApplications(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserApplications'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserApplications'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserApplications' operation.</returns>
            QueryResult<UserApplications> EndGetUserApplications(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserAppRoles' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetUserAppRolesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetUserAppRoles", ReplyAction="http://tempuri.org/DSCapriceOfis/GetUserAppRolesResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserAppRoles(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserAppRoles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserAppRoles'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserAppRoles' operation.</returns>
            QueryResult<UserAppRoles> EndGetUserAppRoles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserRightDefinitions' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetUserRightDefinitionsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetUserRightDefinitions", ReplyAction="http://tempuri.org/DSCapriceOfis/GetUserRightDefinitionsResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserRightDefinitions(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserRightDefinitions'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserRightDefinitions'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserRightDefinitions' operation.</returns>
            QueryResult<UserRightDefinitions> EndGetUserRightDefinitions(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserRoleDetails' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetUserRoleDetailsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetUserRoleDetails", ReplyAction="http://tempuri.org/DSCapriceOfis/GetUserRoleDetailsResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserRoleDetails(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserRoleDetails'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserRoleDetails'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserRoleDetails' operation.</returns>
            QueryResult<UserRoleDetails> EndGetUserRoleDetails(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetUserRoles' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetUserRolesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetUserRoles", ReplyAction="http://tempuri.org/DSCapriceOfis/GetUserRolesResponse")]
            [WebGet()]
            IAsyncResult BeginGetUserRoles(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetUserRoles'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetUserRoles'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetUserRoles' operation.</returns>
            QueryResult<UserRoles> EndGetUserRoles(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetView_SPA_PersonelIzin' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetView_SPA_PersonelIzinDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetView_SPA_PersonelIzin", ReplyAction="http://tempuri.org/DSCapriceOfis/GetView_SPA_PersonelIzinResponse")]
            [WebGet()]
            IAsyncResult BeginGetView_SPA_PersonelIzin(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetView_SPA_PersonelIzin'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetView_SPA_PersonelIzin'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetView_SPA_PersonelIzin' operation.</returns>
            QueryResult<View_SPA_PersonelIzin> EndGetView_SPA_PersonelIzin(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetView_SPA_PersonelProfil' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetView_SPA_PersonelProfilDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetView_SPA_PersonelProfil", ReplyAction="http://tempuri.org/DSCapriceOfis/GetView_SPA_PersonelProfilResponse")]
            [WebGet()]
            IAsyncResult BeginGetView_SPA_PersonelProfil(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetView_SPA_PersonelProfil'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetView_SPA_PersonelProfil'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetView_SPA_PersonelProfil' operation.</returns>
            QueryResult<View_SPA_PersonelProfil> EndGetView_SPA_PersonelProfil(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetViewPersonelProfil' operation.
            /// </summary>
            /// <param name="Adi">The value for the 'Adi' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/GetViewPersonelProfilDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/GetViewPersonelProfil", ReplyAction="http://tempuri.org/DSCapriceOfis/GetViewPersonelProfilResponse")]
            [WebGet()]
            IAsyncResult BeginGetViewPersonelProfil(string Adi, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetViewPersonelProfil'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetViewPersonelProfil'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetViewPersonelProfil' operation.</returns>
            QueryResult<View_SPA_PersonelProfil> EndGetViewPersonelProfil(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'LoginUser' operation.
            /// </summary>
            /// <param name="username">The value for the 'username' parameter of this action.</param>
            /// <param name="password">The value for the 'password' parameter of this action.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/LoginUserDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/LoginUser", ReplyAction="http://tempuri.org/DSCapriceOfis/LoginUserResponse")]
            IAsyncResult BeginLoginUser(string username, string password, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginLoginUser'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginLoginUser'.</param>
            void EndLoginUser(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/DSCapriceOfis/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/DSCapriceOfis/SubmitChanges", ReplyAction="http://tempuri.org/DSCapriceOfis/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class DSCapriceOfisEntityContainer : EntityContainer
        {
            
            public DSCapriceOfisEntityContainer()
            {
                this.CreateEntitySet<DepartmanGorevler>(EntitySetOperations.All);
                this.CreateEntitySet<Departmanlar>(EntitySetOperations.All);
                this.CreateEntitySet<DbLogin>(EntitySetOperations.Edit);
                this.CreateEntitySet<DbPersonel>(EntitySetOperations.Edit);
                this.CreateEntitySet<Personel>(EntitySetOperations.All);
                this.CreateEntitySet<PersonelIzinDatalari>(EntitySetOperations.All);
                this.CreateEntitySet<PersonelProfili>(EntitySetOperations.All);
                this.CreateEntitySet<User>(EntitySetOperations.All);
                this.CreateEntitySet<UserApplications>(EntitySetOperations.All);
                this.CreateEntitySet<UserAppRoles>(EntitySetOperations.All);
                this.CreateEntitySet<UserRightDefinitions>(EntitySetOperations.All);
                this.CreateEntitySet<UserRoleDetails>(EntitySetOperations.All);
                this.CreateEntitySet<UserRoles>(EntitySetOperations.All);
                this.CreateEntitySet<View_SPA_PersonelIzin>(EntitySetOperations.All);
                this.CreateEntitySet<View_SPA_PersonelProfil>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'Personel' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class Personel : Entity
    {
        
        private string _adi;
        
        private string _aileReisi;
        
        private Nullable<bool> _aktif;
        
        private Nullable<Guid> _birimID;
        
        private Nullable<Guid> _departmanID;
        
        private EntityCollection<Departmanlar> _departmanlar;
        
        private EntityRef<Departmanlar> _departmanlar1;
        
        private Nullable<DateTime> _dogumtarihi;
        
        private Nullable<int> _eskiParmakIzNu;
        
        private string _gorevi;
        
        private Nullable<Guid> _gorevID;
        
        private Nullable<DateTime> _iseGirisTarihi;
        
        private Nullable<DateTime> _istenCikisTarihi;
        
        private Nullable<Guid> _izinEskiDatalarID;
        
        private Nullable<decimal> _izinEskiDataNormal;
        
        private Nullable<decimal> _izinEskiDataYillik;
        
        private Nullable<int> _logoNumber;
        
        private Guid _oid;
        
        private Nullable<bool> _ozelPersonel;
        
        private Nullable<bool> _parmakBasiyormu;
        
        private Nullable<int> _parmakIziNu;
        
        private EntityCollection<PersonelIzinDatalari> _personelIzinDatalari;
        
        private EntityRef<PersonelProfili> _personelProfili;
        
        private Nullable<Guid> _personelProfilID;
        
        private Nullable<Guid> _personelTipiID;
        
        private Nullable<Guid> _servisId;
        
        private string _sicilNo;
        
        private string _sosyalGuvNu;
        
        private Nullable<int> _stajyerCalismaGrubu;
        
        private string _tcNu;
        
        private Nullable<Guid> _unvanId;
        
        private EntityCollection<User> _user;
        
        private Nullable<int> _vardiyaGirisNu;
        
        private Nullable<bool> _yonetici;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnAileReisiChanging(string value);
        partial void OnAileReisiChanged();
        partial void OnAktifChanging(Nullable<bool> value);
        partial void OnAktifChanged();
        partial void OnBirimIDChanging(Nullable<Guid> value);
        partial void OnBirimIDChanged();
        partial void OnDepartmanIDChanging(Nullable<Guid> value);
        partial void OnDepartmanIDChanged();
        partial void OnDogumtarihiChanging(Nullable<DateTime> value);
        partial void OnDogumtarihiChanged();
        partial void OnEskiParmakIzNuChanging(Nullable<int> value);
        partial void OnEskiParmakIzNuChanged();
        partial void OnGoreviChanging(string value);
        partial void OnGoreviChanged();
        partial void OnGorevIDChanging(Nullable<Guid> value);
        partial void OnGorevIDChanged();
        partial void OnIseGirisTarihiChanging(Nullable<DateTime> value);
        partial void OnIseGirisTarihiChanged();
        partial void OnIstenCikisTarihiChanging(Nullable<DateTime> value);
        partial void OnIstenCikisTarihiChanged();
        partial void OnIzinEskiDatalarIDChanging(Nullable<Guid> value);
        partial void OnIzinEskiDatalarIDChanged();
        partial void OnIzinEskiDataNormalChanging(Nullable<decimal> value);
        partial void OnIzinEskiDataNormalChanged();
        partial void OnIzinEskiDataYillikChanging(Nullable<decimal> value);
        partial void OnIzinEskiDataYillikChanged();
        partial void OnLogoNumberChanging(Nullable<int> value);
        partial void OnLogoNumberChanged();
        partial void OnOIDChanging(Guid value);
        partial void OnOIDChanged();
        partial void OnOzelPersonelChanging(Nullable<bool> value);
        partial void OnOzelPersonelChanged();
        partial void OnParmakBasiyormuChanging(Nullable<bool> value);
        partial void OnParmakBasiyormuChanged();
        partial void OnParmakIziNuChanging(Nullable<int> value);
        partial void OnParmakIziNuChanged();
        partial void OnPersonelProfilIDChanging(Nullable<Guid> value);
        partial void OnPersonelProfilIDChanged();
        partial void OnPersonelTipiIDChanging(Nullable<Guid> value);
        partial void OnPersonelTipiIDChanged();
        partial void OnServisIdChanging(Nullable<Guid> value);
        partial void OnServisIdChanged();
        partial void OnSicilNoChanging(string value);
        partial void OnSicilNoChanged();
        partial void OnSosyalGuvNuChanging(string value);
        partial void OnSosyalGuvNuChanged();
        partial void OnStajyerCalismaGrubuChanging(Nullable<int> value);
        partial void OnStajyerCalismaGrubuChanged();
        partial void OnTCNuChanging(string value);
        partial void OnTCNuChanged();
        partial void OnUnvanIdChanging(Nullable<Guid> value);
        partial void OnUnvanIdChanged();
        partial void OnVardiyaGirisNuChanging(Nullable<int> value);
        partial void OnVardiyaGirisNuChanged();
        partial void OnYoneticiChanging(Nullable<bool> value);
        partial void OnYoneticiChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Personel"/> class.
        /// </summary>
        public Personel()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Adi' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Adi
        {
            get
            {
                return this._adi;
            }
            set
            {
                if ((this._adi != value))
                {
                    this.OnAdiChanging(value);
                    this.RaiseDataMemberChanging("Adi");
                    this.ValidateProperty("Adi", value);
                    this._adi = value;
                    this.RaiseDataMemberChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'AileReisi' value.
        /// </summary>
        [DataMember()]
        [StringLength(75)]
        public string AileReisi
        {
            get
            {
                return this._aileReisi;
            }
            set
            {
                if ((this._aileReisi != value))
                {
                    this.OnAileReisiChanging(value);
                    this.RaiseDataMemberChanging("AileReisi");
                    this.ValidateProperty("AileReisi", value);
                    this._aileReisi = value;
                    this.RaiseDataMemberChanged("AileReisi");
                    this.OnAileReisiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Aktif' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Aktif
        {
            get
            {
                return this._aktif;
            }
            set
            {
                if ((this._aktif != value))
                {
                    this.OnAktifChanging(value);
                    this.RaiseDataMemberChanging("Aktif");
                    this.ValidateProperty("Aktif", value);
                    this._aktif = value;
                    this.RaiseDataMemberChanged("Aktif");
                    this.OnAktifChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BirimID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> BirimID
        {
            get
            {
                return this._birimID;
            }
            set
            {
                if ((this._birimID != value))
                {
                    this.OnBirimIDChanging(value);
                    this.RaiseDataMemberChanging("BirimID");
                    this.ValidateProperty("BirimID", value);
                    this._birimID = value;
                    this.RaiseDataMemberChanged("BirimID");
                    this.OnBirimIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepartmanID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> DepartmanID
        {
            get
            {
                return this._departmanID;
            }
            set
            {
                if ((this._departmanID != value))
                {
                    this.OnDepartmanIDChanging(value);
                    this.RaiseDataMemberChanging("DepartmanID");
                    this.ValidateProperty("DepartmanID", value);
                    this._departmanID = value;
                    this.RaiseDataMemberChanged("DepartmanID");
                    this.OnDepartmanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Departmanlar"/> entity instances.
        /// </summary>
        [Association("Personel_Departmanlar", "OID", "YoneticiId")]
        [XmlIgnore()]
        public EntityCollection<Departmanlar> Departmanlar
        {
            get
            {
                if ((this._departmanlar == null))
                {
                    this._departmanlar = new EntityCollection<Departmanlar>(this, "Departmanlar", this.FilterDepartmanlar, this.AttachDepartmanlar, this.DetachDepartmanlar);
                }
                return this._departmanlar;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Departmanlar"/> entity.
        /// </summary>
        [Association("Departmanlar_Personel", "DepartmanID", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public Departmanlar Departmanlar1
        {
            get
            {
                if ((this._departmanlar1 == null))
                {
                    this._departmanlar1 = new EntityRef<Departmanlar>(this, "Departmanlar1", this.FilterDepartmanlar1);
                }
                return this._departmanlar1.Entity;
            }
            set
            {
                Departmanlar previous = this.Departmanlar1;
                if ((previous != value))
                {
                    this.ValidateProperty("Departmanlar1", value);
                    if ((previous != null))
                    {
                        this._departmanlar1.Entity = null;
                        previous.Personel1.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.DepartmanID = value.OID;
                    }
                    else
                    {
                        this.DepartmanID = default(Nullable<Guid>);
                    }
                    this._departmanlar1.Entity = value;
                    if ((value != null))
                    {
                        value.Personel1.Add(this);
                    }
                    this.RaisePropertyChanged("Departmanlar1");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Dogumtarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> Dogumtarihi
        {
            get
            {
                return this._dogumtarihi;
            }
            set
            {
                if ((this._dogumtarihi != value))
                {
                    this.OnDogumtarihiChanging(value);
                    this.RaiseDataMemberChanging("Dogumtarihi");
                    this.ValidateProperty("Dogumtarihi", value);
                    this._dogumtarihi = value;
                    this.RaiseDataMemberChanged("Dogumtarihi");
                    this.OnDogumtarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EskiParmakIzNu' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> EskiParmakIzNu
        {
            get
            {
                return this._eskiParmakIzNu;
            }
            set
            {
                if ((this._eskiParmakIzNu != value))
                {
                    this.OnEskiParmakIzNuChanging(value);
                    this.RaiseDataMemberChanging("EskiParmakIzNu");
                    this.ValidateProperty("EskiParmakIzNu", value);
                    this._eskiParmakIzNu = value;
                    this.RaiseDataMemberChanged("EskiParmakIzNu");
                    this.OnEskiParmakIzNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Gorevi' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Gorevi
        {
            get
            {
                return this._gorevi;
            }
            set
            {
                if ((this._gorevi != value))
                {
                    this.OnGoreviChanging(value);
                    this.RaiseDataMemberChanging("Gorevi");
                    this.ValidateProperty("Gorevi", value);
                    this._gorevi = value;
                    this.RaiseDataMemberChanged("Gorevi");
                    this.OnGoreviChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GorevID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> GorevID
        {
            get
            {
                return this._gorevID;
            }
            set
            {
                if ((this._gorevID != value))
                {
                    this.OnGorevIDChanging(value);
                    this.RaiseDataMemberChanging("GorevID");
                    this.ValidateProperty("GorevID", value);
                    this._gorevID = value;
                    this.RaiseDataMemberChanged("GorevID");
                    this.OnGorevIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IseGirisTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> IseGirisTarihi
        {
            get
            {
                return this._iseGirisTarihi;
            }
            set
            {
                if ((this._iseGirisTarihi != value))
                {
                    this.OnIseGirisTarihiChanging(value);
                    this.RaiseDataMemberChanging("IseGirisTarihi");
                    this.ValidateProperty("IseGirisTarihi", value);
                    this._iseGirisTarihi = value;
                    this.RaiseDataMemberChanged("IseGirisTarihi");
                    this.OnIseGirisTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IstenCikisTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> IstenCikisTarihi
        {
            get
            {
                return this._istenCikisTarihi;
            }
            set
            {
                if ((this._istenCikisTarihi != value))
                {
                    this.OnIstenCikisTarihiChanging(value);
                    this.RaiseDataMemberChanging("IstenCikisTarihi");
                    this.ValidateProperty("IstenCikisTarihi", value);
                    this._istenCikisTarihi = value;
                    this.RaiseDataMemberChanged("IstenCikisTarihi");
                    this.OnIstenCikisTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinEskiDatalarID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> IzinEskiDatalarID
        {
            get
            {
                return this._izinEskiDatalarID;
            }
            set
            {
                if ((this._izinEskiDatalarID != value))
                {
                    this.OnIzinEskiDatalarIDChanging(value);
                    this.RaiseDataMemberChanging("IzinEskiDatalarID");
                    this.ValidateProperty("IzinEskiDatalarID", value);
                    this._izinEskiDatalarID = value;
                    this.RaiseDataMemberChanged("IzinEskiDatalarID");
                    this.OnIzinEskiDatalarIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinEskiDataNormal' value.
        /// </summary>
        [DataMember()]
        public Nullable<decimal> IzinEskiDataNormal
        {
            get
            {
                return this._izinEskiDataNormal;
            }
            set
            {
                if ((this._izinEskiDataNormal != value))
                {
                    this.OnIzinEskiDataNormalChanging(value);
                    this.RaiseDataMemberChanging("IzinEskiDataNormal");
                    this.ValidateProperty("IzinEskiDataNormal", value);
                    this._izinEskiDataNormal = value;
                    this.RaiseDataMemberChanged("IzinEskiDataNormal");
                    this.OnIzinEskiDataNormalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinEskiDataYillik' value.
        /// </summary>
        [DataMember()]
        public Nullable<decimal> IzinEskiDataYillik
        {
            get
            {
                return this._izinEskiDataYillik;
            }
            set
            {
                if ((this._izinEskiDataYillik != value))
                {
                    this.OnIzinEskiDataYillikChanging(value);
                    this.RaiseDataMemberChanging("IzinEskiDataYillik");
                    this.ValidateProperty("IzinEskiDataYillik", value);
                    this._izinEskiDataYillik = value;
                    this.RaiseDataMemberChanged("IzinEskiDataYillik");
                    this.OnIzinEskiDataYillikChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LogoNumber' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> LogoNumber
        {
            get
            {
                return this._logoNumber;
            }
            set
            {
                if ((this._logoNumber != value))
                {
                    this.OnLogoNumberChanging(value);
                    this.RaiseDataMemberChanging("LogoNumber");
                    this.ValidateProperty("LogoNumber", value);
                    this._logoNumber = value;
                    this.RaiseDataMemberChanged("LogoNumber");
                    this.OnLogoNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid OID
        {
            get
            {
                return this._oid;
            }
            set
            {
                if ((this._oid != value))
                {
                    this.OnOIDChanging(value);
                    this.ValidateProperty("OID", value);
                    this._oid = value;
                    this.RaisePropertyChanged("OID");
                    this.OnOIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OzelPersonel' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> OzelPersonel
        {
            get
            {
                return this._ozelPersonel;
            }
            set
            {
                if ((this._ozelPersonel != value))
                {
                    this.OnOzelPersonelChanging(value);
                    this.RaiseDataMemberChanging("OzelPersonel");
                    this.ValidateProperty("OzelPersonel", value);
                    this._ozelPersonel = value;
                    this.RaiseDataMemberChanged("OzelPersonel");
                    this.OnOzelPersonelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParmakBasiyormu' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> ParmakBasiyormu
        {
            get
            {
                return this._parmakBasiyormu;
            }
            set
            {
                if ((this._parmakBasiyormu != value))
                {
                    this.OnParmakBasiyormuChanging(value);
                    this.RaiseDataMemberChanging("ParmakBasiyormu");
                    this.ValidateProperty("ParmakBasiyormu", value);
                    this._parmakBasiyormu = value;
                    this.RaiseDataMemberChanged("ParmakBasiyormu");
                    this.OnParmakBasiyormuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParmakIziNu' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ParmakIziNu
        {
            get
            {
                return this._parmakIziNu;
            }
            set
            {
                if ((this._parmakIziNu != value))
                {
                    this.OnParmakIziNuChanging(value);
                    this.RaiseDataMemberChanging("ParmakIziNu");
                    this.ValidateProperty("ParmakIziNu", value);
                    this._parmakIziNu = value;
                    this.RaiseDataMemberChanged("ParmakIziNu");
                    this.OnParmakIziNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="PersonelIzinDatalari"/> entity instances.
        /// </summary>
        [Association("Personel_PersonelIzinDatalari", "OID", "PersonelID")]
        [XmlIgnore()]
        public EntityCollection<PersonelIzinDatalari> PersonelIzinDatalari
        {
            get
            {
                if ((this._personelIzinDatalari == null))
                {
                    this._personelIzinDatalari = new EntityCollection<PersonelIzinDatalari>(this, "PersonelIzinDatalari", this.FilterPersonelIzinDatalari, this.AttachPersonelIzinDatalari, this.DetachPersonelIzinDatalari);
                }
                return this._personelIzinDatalari;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="PersonelProfili"/> entity.
        /// </summary>
        [Association("PersonelProfili_Personel", "PersonelProfilID", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public PersonelProfili PersonelProfili
        {
            get
            {
                if ((this._personelProfili == null))
                {
                    this._personelProfili = new EntityRef<PersonelProfili>(this, "PersonelProfili", this.FilterPersonelProfili);
                }
                return this._personelProfili.Entity;
            }
            set
            {
                PersonelProfili previous = this.PersonelProfili;
                if ((previous != value))
                {
                    this.ValidateProperty("PersonelProfili", value);
                    if ((previous != null))
                    {
                        this._personelProfili.Entity = null;
                        previous.Personel.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.PersonelProfilID = value.OID;
                    }
                    else
                    {
                        this.PersonelProfilID = default(Nullable<Guid>);
                    }
                    this._personelProfili.Entity = value;
                    if ((value != null))
                    {
                        value.Personel.Add(this);
                    }
                    this.RaisePropertyChanged("PersonelProfili");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelProfilID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> PersonelProfilID
        {
            get
            {
                return this._personelProfilID;
            }
            set
            {
                if ((this._personelProfilID != value))
                {
                    this.OnPersonelProfilIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelProfilID");
                    this.ValidateProperty("PersonelProfilID", value);
                    this._personelProfilID = value;
                    this.RaiseDataMemberChanged("PersonelProfilID");
                    this.OnPersonelProfilIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelTipiID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> PersonelTipiID
        {
            get
            {
                return this._personelTipiID;
            }
            set
            {
                if ((this._personelTipiID != value))
                {
                    this.OnPersonelTipiIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelTipiID");
                    this.ValidateProperty("PersonelTipiID", value);
                    this._personelTipiID = value;
                    this.RaiseDataMemberChanged("PersonelTipiID");
                    this.OnPersonelTipiIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ServisId' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> ServisId
        {
            get
            {
                return this._servisId;
            }
            set
            {
                if ((this._servisId != value))
                {
                    this.OnServisIdChanging(value);
                    this.RaiseDataMemberChanging("ServisId");
                    this.ValidateProperty("ServisId", value);
                    this._servisId = value;
                    this.RaiseDataMemberChanged("ServisId");
                    this.OnServisIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SicilNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string SicilNo
        {
            get
            {
                return this._sicilNo;
            }
            set
            {
                if ((this._sicilNo != value))
                {
                    this.OnSicilNoChanging(value);
                    this.RaiseDataMemberChanging("SicilNo");
                    this.ValidateProperty("SicilNo", value);
                    this._sicilNo = value;
                    this.RaiseDataMemberChanged("SicilNo");
                    this.OnSicilNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SosyalGuvNu' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string SosyalGuvNu
        {
            get
            {
                return this._sosyalGuvNu;
            }
            set
            {
                if ((this._sosyalGuvNu != value))
                {
                    this.OnSosyalGuvNuChanging(value);
                    this.RaiseDataMemberChanging("SosyalGuvNu");
                    this.ValidateProperty("SosyalGuvNu", value);
                    this._sosyalGuvNu = value;
                    this.RaiseDataMemberChanged("SosyalGuvNu");
                    this.OnSosyalGuvNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StajyerCalismaGrubu' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> StajyerCalismaGrubu
        {
            get
            {
                return this._stajyerCalismaGrubu;
            }
            set
            {
                if ((this._stajyerCalismaGrubu != value))
                {
                    this.OnStajyerCalismaGrubuChanging(value);
                    this.RaiseDataMemberChanging("StajyerCalismaGrubu");
                    this.ValidateProperty("StajyerCalismaGrubu", value);
                    this._stajyerCalismaGrubu = value;
                    this.RaiseDataMemberChanged("StajyerCalismaGrubu");
                    this.OnStajyerCalismaGrubuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TCNu' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string TCNu
        {
            get
            {
                return this._tcNu;
            }
            set
            {
                if ((this._tcNu != value))
                {
                    this.OnTCNuChanging(value);
                    this.RaiseDataMemberChanging("TCNu");
                    this.ValidateProperty("TCNu", value);
                    this._tcNu = value;
                    this.RaiseDataMemberChanged("TCNu");
                    this.OnTCNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UnvanId' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> UnvanId
        {
            get
            {
                return this._unvanId;
            }
            set
            {
                if ((this._unvanId != value))
                {
                    this.OnUnvanIdChanging(value);
                    this.RaiseDataMemberChanging("UnvanId");
                    this.ValidateProperty("UnvanId", value);
                    this._unvanId = value;
                    this.RaiseDataMemberChanged("UnvanId");
                    this.OnUnvanIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="User"/> entity instances.
        /// </summary>
        [Association("Personel_User", "OID", "EmployeeId")]
        [XmlIgnore()]
        public EntityCollection<User> User
        {
            get
            {
                if ((this._user == null))
                {
                    this._user = new EntityCollection<User>(this, "User", this.FilterUser, this.AttachUser, this.DetachUser);
                }
                return this._user;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'VardiyaGirisNu' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> VardiyaGirisNu
        {
            get
            {
                return this._vardiyaGirisNu;
            }
            set
            {
                if ((this._vardiyaGirisNu != value))
                {
                    this.OnVardiyaGirisNuChanging(value);
                    this.RaiseDataMemberChanging("VardiyaGirisNu");
                    this.ValidateProperty("VardiyaGirisNu", value);
                    this._vardiyaGirisNu = value;
                    this.RaiseDataMemberChanged("VardiyaGirisNu");
                    this.OnVardiyaGirisNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Yonetici' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> Yonetici
        {
            get
            {
                return this._yonetici;
            }
            set
            {
                if ((this._yonetici != value))
                {
                    this.OnYoneticiChanging(value);
                    this.RaiseDataMemberChanging("Yonetici");
                    this.ValidateProperty("Yonetici", value);
                    this._yonetici = value;
                    this.RaiseDataMemberChanged("Yonetici");
                    this.OnYoneticiChanged();
                }
            }
        }
        
        private void AttachDepartmanlar(Departmanlar entity)
        {
            entity.Personel = this;
        }
        
        private void DetachDepartmanlar(Departmanlar entity)
        {
            entity.Personel = null;
        }
        
        private bool FilterDepartmanlar(Departmanlar entity)
        {
            return (entity.YoneticiId == this.OID);
        }
        
        private bool FilterDepartmanlar1(Departmanlar entity)
        {
            return (entity.OID == this.DepartmanID);
        }
        
        private void AttachPersonelIzinDatalari(PersonelIzinDatalari entity)
        {
            entity.Personel = this;
        }
        
        private void DetachPersonelIzinDatalari(PersonelIzinDatalari entity)
        {
            entity.Personel = null;
        }
        
        private bool FilterPersonelIzinDatalari(PersonelIzinDatalari entity)
        {
            return (entity.PersonelID == this.OID);
        }
        
        private bool FilterPersonelProfili(PersonelProfili entity)
        {
            return (entity.OID == this.PersonelProfilID);
        }
        
        private void AttachUser(User entity)
        {
            entity.Personel = this;
        }
        
        private void DetachUser(User entity)
        {
            entity.Personel = null;
        }
        
        private bool FilterUser(User entity)
        {
            return (entity.EmployeeId == this.OID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._oid;
        }
    }
    
    /// <summary>
    /// The 'PersonelIzinDatalari' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class PersonelIzinDatalari : Entity
    {
        
        private string _aciklama;
        
        private Nullable<DateTime> _baslangicTarihi;
        
        private Nullable<DateTime> _bitisTarihi;
        
        private Nullable<DateTime> _gunlukGorevBasSaati;
        
        private Nullable<DateTime> _gunlukGorevBitSaati;
        
        private Nullable<Guid> _ikOnayKullaniciID;
        
        private string _izindeBulunucagiAdres;
        
        private int _izinFormNumarasi;
        
        private Nullable<Guid> _izinID;
        
        private Nullable<DateTime> _izinOnayTarihi;
        
        private Nullable<Guid> _izinTipiID;
        
        private Nullable<Guid> _izinVerenKullaniciID;
        
        private Nullable<DateTime> _izinVerisTarihi;
        
        private Guid _oid;
        
        private EntityRef<Personel> _personel;
        
        private Nullable<Guid> _personelID;
        
        private EntityRef<User> _user;
        
        private EntityRef<User> _user1;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAciklamaChanging(string value);
        partial void OnAciklamaChanged();
        partial void OnBaslangicTarihiChanging(Nullable<DateTime> value);
        partial void OnBaslangicTarihiChanged();
        partial void OnBitisTarihiChanging(Nullable<DateTime> value);
        partial void OnBitisTarihiChanged();
        partial void OnGunlukGorevBasSaatiChanging(Nullable<DateTime> value);
        partial void OnGunlukGorevBasSaatiChanged();
        partial void OnGunlukGorevBitSaatiChanging(Nullable<DateTime> value);
        partial void OnGunlukGorevBitSaatiChanged();
        partial void OnIKOnayKullaniciIDChanging(Nullable<Guid> value);
        partial void OnIKOnayKullaniciIDChanged();
        partial void OnIzindeBulunucagiAdresChanging(string value);
        partial void OnIzindeBulunucagiAdresChanged();
        partial void OnIzinFormNumarasiChanging(int value);
        partial void OnIzinFormNumarasiChanged();
        partial void OnIzinIDChanging(Nullable<Guid> value);
        partial void OnIzinIDChanged();
        partial void OnIzinOnayTarihiChanging(Nullable<DateTime> value);
        partial void OnIzinOnayTarihiChanged();
        partial void OnIzinTipiIDChanging(Nullable<Guid> value);
        partial void OnIzinTipiIDChanged();
        partial void OnIzinVerenKullaniciIDChanging(Nullable<Guid> value);
        partial void OnIzinVerenKullaniciIDChanged();
        partial void OnIzinVerisTarihiChanging(Nullable<DateTime> value);
        partial void OnIzinVerisTarihiChanged();
        partial void OnOIDChanging(Guid value);
        partial void OnOIDChanged();
        partial void OnPersonelIDChanging(Nullable<Guid> value);
        partial void OnPersonelIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonelIzinDatalari"/> class.
        /// </summary>
        public PersonelIzinDatalari()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Aciklama' value.
        /// </summary>
        [DataMember()]
        public string Aciklama
        {
            get
            {
                return this._aciklama;
            }
            set
            {
                if ((this._aciklama != value))
                {
                    this.OnAciklamaChanging(value);
                    this.RaiseDataMemberChanging("Aciklama");
                    this.ValidateProperty("Aciklama", value);
                    this._aciklama = value;
                    this.RaiseDataMemberChanged("Aciklama");
                    this.OnAciklamaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BaslangicTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> BaslangicTarihi
        {
            get
            {
                return this._baslangicTarihi;
            }
            set
            {
                if ((this._baslangicTarihi != value))
                {
                    this.OnBaslangicTarihiChanging(value);
                    this.RaiseDataMemberChanging("BaslangicTarihi");
                    this.ValidateProperty("BaslangicTarihi", value);
                    this._baslangicTarihi = value;
                    this.RaiseDataMemberChanged("BaslangicTarihi");
                    this.OnBaslangicTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BitisTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> BitisTarihi
        {
            get
            {
                return this._bitisTarihi;
            }
            set
            {
                if ((this._bitisTarihi != value))
                {
                    this.OnBitisTarihiChanging(value);
                    this.RaiseDataMemberChanging("BitisTarihi");
                    this.ValidateProperty("BitisTarihi", value);
                    this._bitisTarihi = value;
                    this.RaiseDataMemberChanged("BitisTarihi");
                    this.OnBitisTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GunlukGorevBasSaati' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> GunlukGorevBasSaati
        {
            get
            {
                return this._gunlukGorevBasSaati;
            }
            set
            {
                if ((this._gunlukGorevBasSaati != value))
                {
                    this.OnGunlukGorevBasSaatiChanging(value);
                    this.RaiseDataMemberChanging("GunlukGorevBasSaati");
                    this.ValidateProperty("GunlukGorevBasSaati", value);
                    this._gunlukGorevBasSaati = value;
                    this.RaiseDataMemberChanged("GunlukGorevBasSaati");
                    this.OnGunlukGorevBasSaatiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GunlukGorevBitSaati' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> GunlukGorevBitSaati
        {
            get
            {
                return this._gunlukGorevBitSaati;
            }
            set
            {
                if ((this._gunlukGorevBitSaati != value))
                {
                    this.OnGunlukGorevBitSaatiChanging(value);
                    this.RaiseDataMemberChanging("GunlukGorevBitSaati");
                    this.ValidateProperty("GunlukGorevBitSaati", value);
                    this._gunlukGorevBitSaati = value;
                    this.RaiseDataMemberChanged("GunlukGorevBitSaati");
                    this.OnGunlukGorevBitSaatiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IKOnayKullaniciID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> IKOnayKullaniciID
        {
            get
            {
                return this._ikOnayKullaniciID;
            }
            set
            {
                if ((this._ikOnayKullaniciID != value))
                {
                    this.OnIKOnayKullaniciIDChanging(value);
                    this.RaiseDataMemberChanging("IKOnayKullaniciID");
                    this.ValidateProperty("IKOnayKullaniciID", value);
                    this._ikOnayKullaniciID = value;
                    this.RaiseDataMemberChanged("IKOnayKullaniciID");
                    this.OnIKOnayKullaniciIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzindeBulunucagiAdres' value.
        /// </summary>
        [DataMember()]
        public string IzindeBulunucagiAdres
        {
            get
            {
                return this._izindeBulunucagiAdres;
            }
            set
            {
                if ((this._izindeBulunucagiAdres != value))
                {
                    this.OnIzindeBulunucagiAdresChanging(value);
                    this.RaiseDataMemberChanging("IzindeBulunucagiAdres");
                    this.ValidateProperty("IzindeBulunucagiAdres", value);
                    this._izindeBulunucagiAdres = value;
                    this.RaiseDataMemberChanged("IzindeBulunucagiAdres");
                    this.OnIzindeBulunucagiAdresChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinFormNumarasi' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        public int IzinFormNumarasi
        {
            get
            {
                return this._izinFormNumarasi;
            }
            set
            {
                if ((this._izinFormNumarasi != value))
                {
                    this.OnIzinFormNumarasiChanging(value);
                    this.RaiseDataMemberChanging("IzinFormNumarasi");
                    this.ValidateProperty("IzinFormNumarasi", value);
                    this._izinFormNumarasi = value;
                    this.RaiseDataMemberChanged("IzinFormNumarasi");
                    this.OnIzinFormNumarasiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> IzinID
        {
            get
            {
                return this._izinID;
            }
            set
            {
                if ((this._izinID != value))
                {
                    this.OnIzinIDChanging(value);
                    this.RaiseDataMemberChanging("IzinID");
                    this.ValidateProperty("IzinID", value);
                    this._izinID = value;
                    this.RaiseDataMemberChanged("IzinID");
                    this.OnIzinIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinOnayTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> IzinOnayTarihi
        {
            get
            {
                return this._izinOnayTarihi;
            }
            set
            {
                if ((this._izinOnayTarihi != value))
                {
                    this.OnIzinOnayTarihiChanging(value);
                    this.RaiseDataMemberChanging("IzinOnayTarihi");
                    this.ValidateProperty("IzinOnayTarihi", value);
                    this._izinOnayTarihi = value;
                    this.RaiseDataMemberChanged("IzinOnayTarihi");
                    this.OnIzinOnayTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinTipiID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> IzinTipiID
        {
            get
            {
                return this._izinTipiID;
            }
            set
            {
                if ((this._izinTipiID != value))
                {
                    this.OnIzinTipiIDChanging(value);
                    this.RaiseDataMemberChanging("IzinTipiID");
                    this.ValidateProperty("IzinTipiID", value);
                    this._izinTipiID = value;
                    this.RaiseDataMemberChanged("IzinTipiID");
                    this.OnIzinTipiIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinVerenKullaniciID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> IzinVerenKullaniciID
        {
            get
            {
                return this._izinVerenKullaniciID;
            }
            set
            {
                if ((this._izinVerenKullaniciID != value))
                {
                    this.OnIzinVerenKullaniciIDChanging(value);
                    this.RaiseDataMemberChanging("IzinVerenKullaniciID");
                    this.ValidateProperty("IzinVerenKullaniciID", value);
                    this._izinVerenKullaniciID = value;
                    this.RaiseDataMemberChanged("IzinVerenKullaniciID");
                    this.OnIzinVerenKullaniciIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinVerisTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> IzinVerisTarihi
        {
            get
            {
                return this._izinVerisTarihi;
            }
            set
            {
                if ((this._izinVerisTarihi != value))
                {
                    this.OnIzinVerisTarihiChanging(value);
                    this.RaiseDataMemberChanging("IzinVerisTarihi");
                    this.ValidateProperty("IzinVerisTarihi", value);
                    this._izinVerisTarihi = value;
                    this.RaiseDataMemberChanged("IzinVerisTarihi");
                    this.OnIzinVerisTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid OID
        {
            get
            {
                return this._oid;
            }
            set
            {
                if ((this._oid != value))
                {
                    this.OnOIDChanging(value);
                    this.ValidateProperty("OID", value);
                    this._oid = value;
                    this.RaisePropertyChanged("OID");
                    this.OnOIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Personel"/> entity.
        /// </summary>
        [Association("Personel_PersonelIzinDatalari", "PersonelID", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public Personel Personel
        {
            get
            {
                if ((this._personel == null))
                {
                    this._personel = new EntityRef<Personel>(this, "Personel", this.FilterPersonel);
                }
                return this._personel.Entity;
            }
            set
            {
                Personel previous = this.Personel;
                if ((previous != value))
                {
                    this.ValidateProperty("Personel", value);
                    if ((previous != null))
                    {
                        this._personel.Entity = null;
                        previous.PersonelIzinDatalari.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.PersonelID = value.OID;
                    }
                    else
                    {
                        this.PersonelID = default(Nullable<Guid>);
                    }
                    this._personel.Entity = value;
                    if ((value != null))
                    {
                        value.PersonelIzinDatalari.Add(this);
                    }
                    this.RaisePropertyChanged("Personel");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelID");
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaiseDataMemberChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="User"/> entity.
        /// </summary>
        [Association("User_PersonelIzinDatalari", "IzinVerenKullaniciID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public User User
        {
            get
            {
                if ((this._user == null))
                {
                    this._user = new EntityRef<User>(this, "User", this.FilterUser);
                }
                return this._user.Entity;
            }
            set
            {
                User previous = this.User;
                if ((previous != value))
                {
                    this.ValidateProperty("User", value);
                    if ((previous != null))
                    {
                        this._user.Entity = null;
                        previous.PersonelIzinDatalari.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.IzinVerenKullaniciID = value.ID;
                    }
                    else
                    {
                        this.IzinVerenKullaniciID = default(Nullable<Guid>);
                    }
                    this._user.Entity = value;
                    if ((value != null))
                    {
                        value.PersonelIzinDatalari.Add(this);
                    }
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="User"/> entity.
        /// </summary>
        [Association("User_PersonelIzinDatalari1", "IKOnayKullaniciID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public User User1
        {
            get
            {
                if ((this._user1 == null))
                {
                    this._user1 = new EntityRef<User>(this, "User1", this.FilterUser1);
                }
                return this._user1.Entity;
            }
            set
            {
                User previous = this.User1;
                if ((previous != value))
                {
                    this.ValidateProperty("User1", value);
                    if ((previous != null))
                    {
                        this._user1.Entity = null;
                        previous.PersonelIzinDatalari1.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.IKOnayKullaniciID = value.ID;
                    }
                    else
                    {
                        this.IKOnayKullaniciID = default(Nullable<Guid>);
                    }
                    this._user1.Entity = value;
                    if ((value != null))
                    {
                        value.PersonelIzinDatalari1.Add(this);
                    }
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        private bool FilterPersonel(Personel entity)
        {
            return (entity.OID == this.PersonelID);
        }
        
        private bool FilterUser(User entity)
        {
            return (entity.ID == this.IzinVerenKullaniciID);
        }
        
        private bool FilterUser1(User entity)
        {
            return (entity.ID == this.IKOnayKullaniciID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._oid;
        }
    }
    
    /// <summary>
    /// The 'PersonelProfili' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class PersonelProfili : Entity
    {
        
        private string _acilTelNu;
        
        private string _adres;
        
        private string _anaAdi;
        
        private string _babaAdi;
        
        private string _capriceMail;
        
        private string _cepTel;
        
        private string _cinsiyeti;
        
        private string _dahili;
        
        private string _dogumYeri;
        
        private string _egtBolum;
        
        private string _egtMezDer;
        
        private string _egtMezYil;
        
        private string _egtOkul;
        
        private string _egtYabAlm;
        
        private string _egtYabanciDil;
        
        private string _egtYabArabca;
        
        private string _egtYabIng;
        
        private string _egtYabRus;
        
        private string _eposta;
        
        private string _evTel;
        
        private Nullable<Guid> _ilceID;
        
        private Nullable<Guid> _ilid;
        
        private string _kanGrubu;
        
        private string _kimlikNu;
        
        private string _kimlikSeri;
        
        private string _kisAyakNu;
        
        private string _kisCeketBeden;
        
        private string _kisCocukSay;
        
        private string _kisEhliyet;
        
        private Nullable<bool> _kisEmeklimi;
        
        private Nullable<DateTime> _kisEvlenmeTar;
        
        private string _kisGomlekBeden;
        
        private string _kisKronikHastalik;
        
        private string _kisLojmanOda;
        
        private Nullable<bool> _kisOzurlumu;
        
        private string _kisOzurOran;
        
        private string _kisPantolonNu;
        
        private string _kisServisGuzergah;
        
        private Nullable<bool> _kisSigaraKulla;
        
        private string _medeniDurum;
        
        private string _nufDini;
        
        private string _nufusAileSiraNo;
        
        private string _nufusCiltNo;
        
        private Nullable<Guid> _nufusKayitIl;
        
        private Nullable<Guid> _nufusKayitIlce;
        
        private string _nufusMahalle;
        
        private string _nufusSiraNo;
        
        private string _nufusVerilYer;
        
        private Nullable<DateTime> _nufusVerTar;
        
        private string _ogrenimDurumu;
        
        private Guid _oid;
        
        private EntityCollection<Personel> _personel;
        
        private byte[] _personelFoto;
        
        private string _personelNotu;
        
        private string _postaCodu;
        
        private string _sireketKisaKodu;
        
        private string _sirketGSM;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAcilTelNuChanging(string value);
        partial void OnAcilTelNuChanged();
        partial void OnAdresChanging(string value);
        partial void OnAdresChanged();
        partial void OnAnaAdiChanging(string value);
        partial void OnAnaAdiChanged();
        partial void OnBabaAdiChanging(string value);
        partial void OnBabaAdiChanged();
        partial void OnCapriceMailChanging(string value);
        partial void OnCapriceMailChanged();
        partial void OnCepTelChanging(string value);
        partial void OnCepTelChanged();
        partial void OnCinsiyetiChanging(string value);
        partial void OnCinsiyetiChanged();
        partial void OnDahiliChanging(string value);
        partial void OnDahiliChanged();
        partial void OnDogumYeriChanging(string value);
        partial void OnDogumYeriChanged();
        partial void OnEgtBolumChanging(string value);
        partial void OnEgtBolumChanged();
        partial void OnEgtMezDerChanging(string value);
        partial void OnEgtMezDerChanged();
        partial void OnEgtMezYilChanging(string value);
        partial void OnEgtMezYilChanged();
        partial void OnEgtOkulChanging(string value);
        partial void OnEgtOkulChanged();
        partial void OnEgtYabAlmChanging(string value);
        partial void OnEgtYabAlmChanged();
        partial void OnEgtYabanciDilChanging(string value);
        partial void OnEgtYabanciDilChanged();
        partial void OnEgtYabArabcaChanging(string value);
        partial void OnEgtYabArabcaChanged();
        partial void OnEgtYabIngChanging(string value);
        partial void OnEgtYabIngChanged();
        partial void OnEgtYabRusChanging(string value);
        partial void OnEgtYabRusChanged();
        partial void OnEpostaChanging(string value);
        partial void OnEpostaChanged();
        partial void OnEvTelChanging(string value);
        partial void OnEvTelChanged();
        partial void OnIlceIDChanging(Nullable<Guid> value);
        partial void OnIlceIDChanged();
        partial void OnILIDChanging(Nullable<Guid> value);
        partial void OnILIDChanged();
        partial void OnKanGrubuChanging(string value);
        partial void OnKanGrubuChanged();
        partial void OnKimlikNuChanging(string value);
        partial void OnKimlikNuChanged();
        partial void OnKimlikSeriChanging(string value);
        partial void OnKimlikSeriChanged();
        partial void OnKisAyakNuChanging(string value);
        partial void OnKisAyakNuChanged();
        partial void OnKisCeketBedenChanging(string value);
        partial void OnKisCeketBedenChanged();
        partial void OnKisCocukSayChanging(string value);
        partial void OnKisCocukSayChanged();
        partial void OnKisEhliyetChanging(string value);
        partial void OnKisEhliyetChanged();
        partial void OnKisEmeklimiChanging(Nullable<bool> value);
        partial void OnKisEmeklimiChanged();
        partial void OnKisEvlenmeTarChanging(Nullable<DateTime> value);
        partial void OnKisEvlenmeTarChanged();
        partial void OnKisGomlekBedenChanging(string value);
        partial void OnKisGomlekBedenChanged();
        partial void OnKisKronikHastalikChanging(string value);
        partial void OnKisKronikHastalikChanged();
        partial void OnKisLojmanOdaChanging(string value);
        partial void OnKisLojmanOdaChanged();
        partial void OnKisOzurlumuChanging(Nullable<bool> value);
        partial void OnKisOzurlumuChanged();
        partial void OnKisOzurOranChanging(string value);
        partial void OnKisOzurOranChanged();
        partial void OnKisPantolonNuChanging(string value);
        partial void OnKisPantolonNuChanged();
        partial void OnKisServisGuzergahChanging(string value);
        partial void OnKisServisGuzergahChanged();
        partial void OnKisSigaraKullaChanging(Nullable<bool> value);
        partial void OnKisSigaraKullaChanged();
        partial void OnMedeniDurumChanging(string value);
        partial void OnMedeniDurumChanged();
        partial void OnNufDiniChanging(string value);
        partial void OnNufDiniChanged();
        partial void OnNufusAileSiraNoChanging(string value);
        partial void OnNufusAileSiraNoChanged();
        partial void OnNufusCiltNoChanging(string value);
        partial void OnNufusCiltNoChanged();
        partial void OnNufusKayitIlChanging(Nullable<Guid> value);
        partial void OnNufusKayitIlChanged();
        partial void OnNufusKayitIlceChanging(Nullable<Guid> value);
        partial void OnNufusKayitIlceChanged();
        partial void OnNufusMahalleChanging(string value);
        partial void OnNufusMahalleChanged();
        partial void OnNufusSiraNoChanging(string value);
        partial void OnNufusSiraNoChanged();
        partial void OnNufusVerilYerChanging(string value);
        partial void OnNufusVerilYerChanged();
        partial void OnNufusVerTarChanging(Nullable<DateTime> value);
        partial void OnNufusVerTarChanged();
        partial void OnOgrenimDurumuChanging(string value);
        partial void OnOgrenimDurumuChanged();
        partial void OnOIDChanging(Guid value);
        partial void OnOIDChanged();
        partial void OnPersonelFotoChanging(byte[] value);
        partial void OnPersonelFotoChanged();
        partial void OnPersonelNotuChanging(string value);
        partial void OnPersonelNotuChanged();
        partial void OnPostaCoduChanging(string value);
        partial void OnPostaCoduChanged();
        partial void OnSireketKisaKoduChanging(string value);
        partial void OnSireketKisaKoduChanged();
        partial void OnSirketGSMChanging(string value);
        partial void OnSirketGSMChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonelProfili"/> class.
        /// </summary>
        public PersonelProfili()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AcilTelNu' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string AcilTelNu
        {
            get
            {
                return this._acilTelNu;
            }
            set
            {
                if ((this._acilTelNu != value))
                {
                    this.OnAcilTelNuChanging(value);
                    this.RaiseDataMemberChanging("AcilTelNu");
                    this.ValidateProperty("AcilTelNu", value);
                    this._acilTelNu = value;
                    this.RaiseDataMemberChanged("AcilTelNu");
                    this.OnAcilTelNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Adres' value.
        /// </summary>
        [DataMember()]
        public string Adres
        {
            get
            {
                return this._adres;
            }
            set
            {
                if ((this._adres != value))
                {
                    this.OnAdresChanging(value);
                    this.RaiseDataMemberChanging("Adres");
                    this.ValidateProperty("Adres", value);
                    this._adres = value;
                    this.RaiseDataMemberChanged("Adres");
                    this.OnAdresChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'AnaAdi' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string AnaAdi
        {
            get
            {
                return this._anaAdi;
            }
            set
            {
                if ((this._anaAdi != value))
                {
                    this.OnAnaAdiChanging(value);
                    this.RaiseDataMemberChanging("AnaAdi");
                    this.ValidateProperty("AnaAdi", value);
                    this._anaAdi = value;
                    this.RaiseDataMemberChanged("AnaAdi");
                    this.OnAnaAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BabaAdi' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string BabaAdi
        {
            get
            {
                return this._babaAdi;
            }
            set
            {
                if ((this._babaAdi != value))
                {
                    this.OnBabaAdiChanging(value);
                    this.RaiseDataMemberChanging("BabaAdi");
                    this.ValidateProperty("BabaAdi", value);
                    this._babaAdi = value;
                    this.RaiseDataMemberChanged("BabaAdi");
                    this.OnBabaAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CapriceMail' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string CapriceMail
        {
            get
            {
                return this._capriceMail;
            }
            set
            {
                if ((this._capriceMail != value))
                {
                    this.OnCapriceMailChanging(value);
                    this.RaiseDataMemberChanging("CapriceMail");
                    this.ValidateProperty("CapriceMail", value);
                    this._capriceMail = value;
                    this.RaiseDataMemberChanged("CapriceMail");
                    this.OnCapriceMailChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CepTel' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string CepTel
        {
            get
            {
                return this._cepTel;
            }
            set
            {
                if ((this._cepTel != value))
                {
                    this.OnCepTelChanging(value);
                    this.RaiseDataMemberChanging("CepTel");
                    this.ValidateProperty("CepTel", value);
                    this._cepTel = value;
                    this.RaiseDataMemberChanged("CepTel");
                    this.OnCepTelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Cinsiyeti' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Cinsiyeti
        {
            get
            {
                return this._cinsiyeti;
            }
            set
            {
                if ((this._cinsiyeti != value))
                {
                    this.OnCinsiyetiChanging(value);
                    this.RaiseDataMemberChanging("Cinsiyeti");
                    this.ValidateProperty("Cinsiyeti", value);
                    this._cinsiyeti = value;
                    this.RaiseDataMemberChanged("Cinsiyeti");
                    this.OnCinsiyetiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Dahili' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Dahili
        {
            get
            {
                return this._dahili;
            }
            set
            {
                if ((this._dahili != value))
                {
                    this.OnDahiliChanging(value);
                    this.RaiseDataMemberChanging("Dahili");
                    this.ValidateProperty("Dahili", value);
                    this._dahili = value;
                    this.RaiseDataMemberChanged("Dahili");
                    this.OnDahiliChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DogumYeri' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string DogumYeri
        {
            get
            {
                return this._dogumYeri;
            }
            set
            {
                if ((this._dogumYeri != value))
                {
                    this.OnDogumYeriChanging(value);
                    this.RaiseDataMemberChanging("DogumYeri");
                    this.ValidateProperty("DogumYeri", value);
                    this._dogumYeri = value;
                    this.RaiseDataMemberChanged("DogumYeri");
                    this.OnDogumYeriChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtBolum' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string EgtBolum
        {
            get
            {
                return this._egtBolum;
            }
            set
            {
                if ((this._egtBolum != value))
                {
                    this.OnEgtBolumChanging(value);
                    this.RaiseDataMemberChanging("EgtBolum");
                    this.ValidateProperty("EgtBolum", value);
                    this._egtBolum = value;
                    this.RaiseDataMemberChanged("EgtBolum");
                    this.OnEgtBolumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtMezDer' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string EgtMezDer
        {
            get
            {
                return this._egtMezDer;
            }
            set
            {
                if ((this._egtMezDer != value))
                {
                    this.OnEgtMezDerChanging(value);
                    this.RaiseDataMemberChanging("EgtMezDer");
                    this.ValidateProperty("EgtMezDer", value);
                    this._egtMezDer = value;
                    this.RaiseDataMemberChanged("EgtMezDer");
                    this.OnEgtMezDerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtMezYil' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string EgtMezYil
        {
            get
            {
                return this._egtMezYil;
            }
            set
            {
                if ((this._egtMezYil != value))
                {
                    this.OnEgtMezYilChanging(value);
                    this.RaiseDataMemberChanging("EgtMezYil");
                    this.ValidateProperty("EgtMezYil", value);
                    this._egtMezYil = value;
                    this.RaiseDataMemberChanged("EgtMezYil");
                    this.OnEgtMezYilChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtOkul' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string EgtOkul
        {
            get
            {
                return this._egtOkul;
            }
            set
            {
                if ((this._egtOkul != value))
                {
                    this.OnEgtOkulChanging(value);
                    this.RaiseDataMemberChanging("EgtOkul");
                    this.ValidateProperty("EgtOkul", value);
                    this._egtOkul = value;
                    this.RaiseDataMemberChanged("EgtOkul");
                    this.OnEgtOkulChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtYabAlm' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string EgtYabAlm
        {
            get
            {
                return this._egtYabAlm;
            }
            set
            {
                if ((this._egtYabAlm != value))
                {
                    this.OnEgtYabAlmChanging(value);
                    this.RaiseDataMemberChanging("EgtYabAlm");
                    this.ValidateProperty("EgtYabAlm", value);
                    this._egtYabAlm = value;
                    this.RaiseDataMemberChanged("EgtYabAlm");
                    this.OnEgtYabAlmChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtYabanciDil' value.
        /// </summary>
        [DataMember()]
        public string EgtYabanciDil
        {
            get
            {
                return this._egtYabanciDil;
            }
            set
            {
                if ((this._egtYabanciDil != value))
                {
                    this.OnEgtYabanciDilChanging(value);
                    this.RaiseDataMemberChanging("EgtYabanciDil");
                    this.ValidateProperty("EgtYabanciDil", value);
                    this._egtYabanciDil = value;
                    this.RaiseDataMemberChanged("EgtYabanciDil");
                    this.OnEgtYabanciDilChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtYabArabca' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string EgtYabArabca
        {
            get
            {
                return this._egtYabArabca;
            }
            set
            {
                if ((this._egtYabArabca != value))
                {
                    this.OnEgtYabArabcaChanging(value);
                    this.RaiseDataMemberChanging("EgtYabArabca");
                    this.ValidateProperty("EgtYabArabca", value);
                    this._egtYabArabca = value;
                    this.RaiseDataMemberChanged("EgtYabArabca");
                    this.OnEgtYabArabcaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtYabIng' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string EgtYabIng
        {
            get
            {
                return this._egtYabIng;
            }
            set
            {
                if ((this._egtYabIng != value))
                {
                    this.OnEgtYabIngChanging(value);
                    this.RaiseDataMemberChanging("EgtYabIng");
                    this.ValidateProperty("EgtYabIng", value);
                    this._egtYabIng = value;
                    this.RaiseDataMemberChanged("EgtYabIng");
                    this.OnEgtYabIngChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EgtYabRus' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string EgtYabRus
        {
            get
            {
                return this._egtYabRus;
            }
            set
            {
                if ((this._egtYabRus != value))
                {
                    this.OnEgtYabRusChanging(value);
                    this.RaiseDataMemberChanging("EgtYabRus");
                    this.ValidateProperty("EgtYabRus", value);
                    this._egtYabRus = value;
                    this.RaiseDataMemberChanged("EgtYabRus");
                    this.OnEgtYabRusChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Eposta' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Eposta
        {
            get
            {
                return this._eposta;
            }
            set
            {
                if ((this._eposta != value))
                {
                    this.OnEpostaChanging(value);
                    this.RaiseDataMemberChanging("Eposta");
                    this.ValidateProperty("Eposta", value);
                    this._eposta = value;
                    this.RaiseDataMemberChanged("Eposta");
                    this.OnEpostaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EvTel' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string EvTel
        {
            get
            {
                return this._evTel;
            }
            set
            {
                if ((this._evTel != value))
                {
                    this.OnEvTelChanging(value);
                    this.RaiseDataMemberChanging("EvTel");
                    this.ValidateProperty("EvTel", value);
                    this._evTel = value;
                    this.RaiseDataMemberChanged("EvTel");
                    this.OnEvTelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IlceID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> IlceID
        {
            get
            {
                return this._ilceID;
            }
            set
            {
                if ((this._ilceID != value))
                {
                    this.OnIlceIDChanging(value);
                    this.RaiseDataMemberChanging("IlceID");
                    this.ValidateProperty("IlceID", value);
                    this._ilceID = value;
                    this.RaiseDataMemberChanged("IlceID");
                    this.OnIlceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ILID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> ILID
        {
            get
            {
                return this._ilid;
            }
            set
            {
                if ((this._ilid != value))
                {
                    this.OnILIDChanging(value);
                    this.RaiseDataMemberChanging("ILID");
                    this.ValidateProperty("ILID", value);
                    this._ilid = value;
                    this.RaiseDataMemberChanged("ILID");
                    this.OnILIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KanGrubu' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string KanGrubu
        {
            get
            {
                return this._kanGrubu;
            }
            set
            {
                if ((this._kanGrubu != value))
                {
                    this.OnKanGrubuChanging(value);
                    this.RaiseDataMemberChanging("KanGrubu");
                    this.ValidateProperty("KanGrubu", value);
                    this._kanGrubu = value;
                    this.RaiseDataMemberChanged("KanGrubu");
                    this.OnKanGrubuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KimlikNu' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string KimlikNu
        {
            get
            {
                return this._kimlikNu;
            }
            set
            {
                if ((this._kimlikNu != value))
                {
                    this.OnKimlikNuChanging(value);
                    this.RaiseDataMemberChanging("KimlikNu");
                    this.ValidateProperty("KimlikNu", value);
                    this._kimlikNu = value;
                    this.RaiseDataMemberChanged("KimlikNu");
                    this.OnKimlikNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KimlikSeri' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string KimlikSeri
        {
            get
            {
                return this._kimlikSeri;
            }
            set
            {
                if ((this._kimlikSeri != value))
                {
                    this.OnKimlikSeriChanging(value);
                    this.RaiseDataMemberChanging("KimlikSeri");
                    this.ValidateProperty("KimlikSeri", value);
                    this._kimlikSeri = value;
                    this.RaiseDataMemberChanged("KimlikSeri");
                    this.OnKimlikSeriChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisAyakNu' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisAyakNu
        {
            get
            {
                return this._kisAyakNu;
            }
            set
            {
                if ((this._kisAyakNu != value))
                {
                    this.OnKisAyakNuChanging(value);
                    this.RaiseDataMemberChanging("KisAyakNu");
                    this.ValidateProperty("KisAyakNu", value);
                    this._kisAyakNu = value;
                    this.RaiseDataMemberChanged("KisAyakNu");
                    this.OnKisAyakNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisCeketBeden' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisCeketBeden
        {
            get
            {
                return this._kisCeketBeden;
            }
            set
            {
                if ((this._kisCeketBeden != value))
                {
                    this.OnKisCeketBedenChanging(value);
                    this.RaiseDataMemberChanging("KisCeketBeden");
                    this.ValidateProperty("KisCeketBeden", value);
                    this._kisCeketBeden = value;
                    this.RaiseDataMemberChanged("KisCeketBeden");
                    this.OnKisCeketBedenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisCocukSay' value.
        /// </summary>
        [DataMember()]
        [StringLength(5)]
        public string KisCocukSay
        {
            get
            {
                return this._kisCocukSay;
            }
            set
            {
                if ((this._kisCocukSay != value))
                {
                    this.OnKisCocukSayChanging(value);
                    this.RaiseDataMemberChanging("KisCocukSay");
                    this.ValidateProperty("KisCocukSay", value);
                    this._kisCocukSay = value;
                    this.RaiseDataMemberChanged("KisCocukSay");
                    this.OnKisCocukSayChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisEhliyet' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisEhliyet
        {
            get
            {
                return this._kisEhliyet;
            }
            set
            {
                if ((this._kisEhliyet != value))
                {
                    this.OnKisEhliyetChanging(value);
                    this.RaiseDataMemberChanging("KisEhliyet");
                    this.ValidateProperty("KisEhliyet", value);
                    this._kisEhliyet = value;
                    this.RaiseDataMemberChanged("KisEhliyet");
                    this.OnKisEhliyetChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisEmeklimi' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> KisEmeklimi
        {
            get
            {
                return this._kisEmeklimi;
            }
            set
            {
                if ((this._kisEmeklimi != value))
                {
                    this.OnKisEmeklimiChanging(value);
                    this.RaiseDataMemberChanging("KisEmeklimi");
                    this.ValidateProperty("KisEmeklimi", value);
                    this._kisEmeklimi = value;
                    this.RaiseDataMemberChanged("KisEmeklimi");
                    this.OnKisEmeklimiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisEvlenmeTar' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> KisEvlenmeTar
        {
            get
            {
                return this._kisEvlenmeTar;
            }
            set
            {
                if ((this._kisEvlenmeTar != value))
                {
                    this.OnKisEvlenmeTarChanging(value);
                    this.RaiseDataMemberChanging("KisEvlenmeTar");
                    this.ValidateProperty("KisEvlenmeTar", value);
                    this._kisEvlenmeTar = value;
                    this.RaiseDataMemberChanged("KisEvlenmeTar");
                    this.OnKisEvlenmeTarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisGomlekBeden' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisGomlekBeden
        {
            get
            {
                return this._kisGomlekBeden;
            }
            set
            {
                if ((this._kisGomlekBeden != value))
                {
                    this.OnKisGomlekBedenChanging(value);
                    this.RaiseDataMemberChanging("KisGomlekBeden");
                    this.ValidateProperty("KisGomlekBeden", value);
                    this._kisGomlekBeden = value;
                    this.RaiseDataMemberChanged("KisGomlekBeden");
                    this.OnKisGomlekBedenChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisKronikHastalik' value.
        /// </summary>
        [DataMember()]
        public string KisKronikHastalik
        {
            get
            {
                return this._kisKronikHastalik;
            }
            set
            {
                if ((this._kisKronikHastalik != value))
                {
                    this.OnKisKronikHastalikChanging(value);
                    this.RaiseDataMemberChanging("KisKronikHastalik");
                    this.ValidateProperty("KisKronikHastalik", value);
                    this._kisKronikHastalik = value;
                    this.RaiseDataMemberChanged("KisKronikHastalik");
                    this.OnKisKronikHastalikChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisLojmanOda' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisLojmanOda
        {
            get
            {
                return this._kisLojmanOda;
            }
            set
            {
                if ((this._kisLojmanOda != value))
                {
                    this.OnKisLojmanOdaChanging(value);
                    this.RaiseDataMemberChanging("KisLojmanOda");
                    this.ValidateProperty("KisLojmanOda", value);
                    this._kisLojmanOda = value;
                    this.RaiseDataMemberChanged("KisLojmanOda");
                    this.OnKisLojmanOdaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisOzurlumu' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> KisOzurlumu
        {
            get
            {
                return this._kisOzurlumu;
            }
            set
            {
                if ((this._kisOzurlumu != value))
                {
                    this.OnKisOzurlumuChanging(value);
                    this.RaiseDataMemberChanging("KisOzurlumu");
                    this.ValidateProperty("KisOzurlumu", value);
                    this._kisOzurlumu = value;
                    this.RaiseDataMemberChanged("KisOzurlumu");
                    this.OnKisOzurlumuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisOzurOran' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisOzurOran
        {
            get
            {
                return this._kisOzurOran;
            }
            set
            {
                if ((this._kisOzurOran != value))
                {
                    this.OnKisOzurOranChanging(value);
                    this.RaiseDataMemberChanging("KisOzurOran");
                    this.ValidateProperty("KisOzurOran", value);
                    this._kisOzurOran = value;
                    this.RaiseDataMemberChanged("KisOzurOran");
                    this.OnKisOzurOranChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisPantolonNu' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string KisPantolonNu
        {
            get
            {
                return this._kisPantolonNu;
            }
            set
            {
                if ((this._kisPantolonNu != value))
                {
                    this.OnKisPantolonNuChanging(value);
                    this.RaiseDataMemberChanging("KisPantolonNu");
                    this.ValidateProperty("KisPantolonNu", value);
                    this._kisPantolonNu = value;
                    this.RaiseDataMemberChanged("KisPantolonNu");
                    this.OnKisPantolonNuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisServisGuzergah' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string KisServisGuzergah
        {
            get
            {
                return this._kisServisGuzergah;
            }
            set
            {
                if ((this._kisServisGuzergah != value))
                {
                    this.OnKisServisGuzergahChanging(value);
                    this.RaiseDataMemberChanging("KisServisGuzergah");
                    this.ValidateProperty("KisServisGuzergah", value);
                    this._kisServisGuzergah = value;
                    this.RaiseDataMemberChanged("KisServisGuzergah");
                    this.OnKisServisGuzergahChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KisSigaraKulla' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> KisSigaraKulla
        {
            get
            {
                return this._kisSigaraKulla;
            }
            set
            {
                if ((this._kisSigaraKulla != value))
                {
                    this.OnKisSigaraKullaChanging(value);
                    this.RaiseDataMemberChanging("KisSigaraKulla");
                    this.ValidateProperty("KisSigaraKulla", value);
                    this._kisSigaraKulla = value;
                    this.RaiseDataMemberChanged("KisSigaraKulla");
                    this.OnKisSigaraKullaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MedeniDurum' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string MedeniDurum
        {
            get
            {
                return this._medeniDurum;
            }
            set
            {
                if ((this._medeniDurum != value))
                {
                    this.OnMedeniDurumChanging(value);
                    this.RaiseDataMemberChanging("MedeniDurum");
                    this.ValidateProperty("MedeniDurum", value);
                    this._medeniDurum = value;
                    this.RaiseDataMemberChanged("MedeniDurum");
                    this.OnMedeniDurumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufDini' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string NufDini
        {
            get
            {
                return this._nufDini;
            }
            set
            {
                if ((this._nufDini != value))
                {
                    this.OnNufDiniChanging(value);
                    this.RaiseDataMemberChanging("NufDini");
                    this.ValidateProperty("NufDini", value);
                    this._nufDini = value;
                    this.RaiseDataMemberChanged("NufDini");
                    this.OnNufDiniChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusAileSiraNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string NufusAileSiraNo
        {
            get
            {
                return this._nufusAileSiraNo;
            }
            set
            {
                if ((this._nufusAileSiraNo != value))
                {
                    this.OnNufusAileSiraNoChanging(value);
                    this.RaiseDataMemberChanging("NufusAileSiraNo");
                    this.ValidateProperty("NufusAileSiraNo", value);
                    this._nufusAileSiraNo = value;
                    this.RaiseDataMemberChanged("NufusAileSiraNo");
                    this.OnNufusAileSiraNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusCiltNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string NufusCiltNo
        {
            get
            {
                return this._nufusCiltNo;
            }
            set
            {
                if ((this._nufusCiltNo != value))
                {
                    this.OnNufusCiltNoChanging(value);
                    this.RaiseDataMemberChanging("NufusCiltNo");
                    this.ValidateProperty("NufusCiltNo", value);
                    this._nufusCiltNo = value;
                    this.RaiseDataMemberChanged("NufusCiltNo");
                    this.OnNufusCiltNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusKayitIl' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> NufusKayitIl
        {
            get
            {
                return this._nufusKayitIl;
            }
            set
            {
                if ((this._nufusKayitIl != value))
                {
                    this.OnNufusKayitIlChanging(value);
                    this.RaiseDataMemberChanging("NufusKayitIl");
                    this.ValidateProperty("NufusKayitIl", value);
                    this._nufusKayitIl = value;
                    this.RaiseDataMemberChanged("NufusKayitIl");
                    this.OnNufusKayitIlChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusKayitIlce' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> NufusKayitIlce
        {
            get
            {
                return this._nufusKayitIlce;
            }
            set
            {
                if ((this._nufusKayitIlce != value))
                {
                    this.OnNufusKayitIlceChanging(value);
                    this.RaiseDataMemberChanging("NufusKayitIlce");
                    this.ValidateProperty("NufusKayitIlce", value);
                    this._nufusKayitIlce = value;
                    this.RaiseDataMemberChanged("NufusKayitIlce");
                    this.OnNufusKayitIlceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusMahalle' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string NufusMahalle
        {
            get
            {
                return this._nufusMahalle;
            }
            set
            {
                if ((this._nufusMahalle != value))
                {
                    this.OnNufusMahalleChanging(value);
                    this.RaiseDataMemberChanging("NufusMahalle");
                    this.ValidateProperty("NufusMahalle", value);
                    this._nufusMahalle = value;
                    this.RaiseDataMemberChanged("NufusMahalle");
                    this.OnNufusMahalleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusSiraNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string NufusSiraNo
        {
            get
            {
                return this._nufusSiraNo;
            }
            set
            {
                if ((this._nufusSiraNo != value))
                {
                    this.OnNufusSiraNoChanging(value);
                    this.RaiseDataMemberChanging("NufusSiraNo");
                    this.ValidateProperty("NufusSiraNo", value);
                    this._nufusSiraNo = value;
                    this.RaiseDataMemberChanged("NufusSiraNo");
                    this.OnNufusSiraNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusVerilYer' value.
        /// </summary>
        [DataMember()]
        [StringLength(20)]
        public string NufusVerilYer
        {
            get
            {
                return this._nufusVerilYer;
            }
            set
            {
                if ((this._nufusVerilYer != value))
                {
                    this.OnNufusVerilYerChanging(value);
                    this.RaiseDataMemberChanging("NufusVerilYer");
                    this.ValidateProperty("NufusVerilYer", value);
                    this._nufusVerilYer = value;
                    this.RaiseDataMemberChanged("NufusVerilYer");
                    this.OnNufusVerilYerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'NufusVerTar' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> NufusVerTar
        {
            get
            {
                return this._nufusVerTar;
            }
            set
            {
                if ((this._nufusVerTar != value))
                {
                    this.OnNufusVerTarChanging(value);
                    this.RaiseDataMemberChanging("NufusVerTar");
                    this.ValidateProperty("NufusVerTar", value);
                    this._nufusVerTar = value;
                    this.RaiseDataMemberChanged("NufusVerTar");
                    this.OnNufusVerTarChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OgrenimDurumu' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string OgrenimDurumu
        {
            get
            {
                return this._ogrenimDurumu;
            }
            set
            {
                if ((this._ogrenimDurumu != value))
                {
                    this.OnOgrenimDurumuChanging(value);
                    this.RaiseDataMemberChanging("OgrenimDurumu");
                    this.ValidateProperty("OgrenimDurumu", value);
                    this._ogrenimDurumu = value;
                    this.RaiseDataMemberChanged("OgrenimDurumu");
                    this.OnOgrenimDurumuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid OID
        {
            get
            {
                return this._oid;
            }
            set
            {
                if ((this._oid != value))
                {
                    this.OnOIDChanging(value);
                    this.ValidateProperty("OID", value);
                    this._oid = value;
                    this.RaisePropertyChanged("OID");
                    this.OnOIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Personel"/> entity instances.
        /// </summary>
        [Association("PersonelProfili_Personel", "OID", "PersonelProfilID")]
        [XmlIgnore()]
        public EntityCollection<Personel> Personel
        {
            get
            {
                if ((this._personel == null))
                {
                    this._personel = new EntityCollection<Personel>(this, "Personel", this.FilterPersonel, this.AttachPersonel, this.DetachPersonel);
                }
                return this._personel;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelFoto' value.
        /// </summary>
        [DataMember()]
        public byte[] PersonelFoto
        {
            get
            {
                return this._personelFoto;
            }
            set
            {
                if ((this._personelFoto != value))
                {
                    this.OnPersonelFotoChanging(value);
                    this.RaiseDataMemberChanging("PersonelFoto");
                    this.ValidateProperty("PersonelFoto", value);
                    this._personelFoto = value;
                    this.RaiseDataMemberChanged("PersonelFoto");
                    this.OnPersonelFotoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelNotu' value.
        /// </summary>
        [DataMember()]
        public string PersonelNotu
        {
            get
            {
                return this._personelNotu;
            }
            set
            {
                if ((this._personelNotu != value))
                {
                    this.OnPersonelNotuChanging(value);
                    this.RaiseDataMemberChanging("PersonelNotu");
                    this.ValidateProperty("PersonelNotu", value);
                    this._personelNotu = value;
                    this.RaiseDataMemberChanged("PersonelNotu");
                    this.OnPersonelNotuChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PostaCodu' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string PostaCodu
        {
            get
            {
                return this._postaCodu;
            }
            set
            {
                if ((this._postaCodu != value))
                {
                    this.OnPostaCoduChanging(value);
                    this.RaiseDataMemberChanging("PostaCodu");
                    this.ValidateProperty("PostaCodu", value);
                    this._postaCodu = value;
                    this.RaiseDataMemberChanged("PostaCodu");
                    this.OnPostaCoduChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SireketKisaKodu' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string SireketKisaKodu
        {
            get
            {
                return this._sireketKisaKodu;
            }
            set
            {
                if ((this._sireketKisaKodu != value))
                {
                    this.OnSireketKisaKoduChanging(value);
                    this.RaiseDataMemberChanging("SireketKisaKodu");
                    this.ValidateProperty("SireketKisaKodu", value);
                    this._sireketKisaKodu = value;
                    this.RaiseDataMemberChanged("SireketKisaKodu");
                    this.OnSireketKisaKoduChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SirketGSM' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string SirketGSM
        {
            get
            {
                return this._sirketGSM;
            }
            set
            {
                if ((this._sirketGSM != value))
                {
                    this.OnSirketGSMChanging(value);
                    this.RaiseDataMemberChanging("SirketGSM");
                    this.ValidateProperty("SirketGSM", value);
                    this._sirketGSM = value;
                    this.RaiseDataMemberChanged("SirketGSM");
                    this.OnSirketGSMChanged();
                }
            }
        }
        
        private void AttachPersonel(Personel entity)
        {
            entity.PersonelProfili = this;
        }
        
        private void DetachPersonel(Personel entity)
        {
            entity.PersonelProfili = null;
        }
        
        private bool FilterPersonel(Personel entity)
        {
            return (entity.PersonelProfilID == this.OID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._oid;
        }
    }
    
    /// <summary>
    /// The 'SPA_Diagnosis' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_Diagnosis : Entity
    {
        
        private string _diagnosisName;
        
        private Guid _id;
        
        private bool _isActive;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDiagnosisNameChanging(string value);
        partial void OnDiagnosisNameChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsActiveChanging(bool value);
        partial void OnIsActiveChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_Diagnosis"/> class.
        /// </summary>
        public SPA_Diagnosis()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DiagnosisName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(150)]
        public string DiagnosisName
        {
            get
            {
                return this._diagnosisName;
            }
            set
            {
                if ((this._diagnosisName != value))
                {
                    this.OnDiagnosisNameChanging(value);
                    this.RaiseDataMemberChanging("DiagnosisName");
                    this.ValidateProperty("DiagnosisName", value);
                    this._diagnosisName = value;
                    this.RaiseDataMemberChanged("DiagnosisName");
                    this.OnDiagnosisNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsActive' value.
        /// </summary>
        [DataMember()]
        public bool IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                if ((this._isActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._isActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_GuestDiagnosisDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_GuestDiagnosisDetail : Entity
    {
        
        private bool _completed;
        
        private DateTime _completedDateTime;
        
        private Nullable<DateTime> _createdDatetime;
        
        private Nullable<Guid> _createdPersonelID;
        
        private string _descDiagnosis;
        
        private Nullable<Guid> _diagnosisID;
        
        private Guid _guestID;
        
        private Guid _id;
        
        private Nullable<DateTime> _modifiedDatetime;
        
        private Nullable<Guid> _modifiedPersonelID;
        
        private Guid _personelID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCompletedChanging(bool value);
        partial void OnCompletedChanged();
        partial void OnCompletedDateTimeChanging(DateTime value);
        partial void OnCompletedDateTimeChanged();
        partial void OnCreatedDatetimeChanging(Nullable<DateTime> value);
        partial void OnCreatedDatetimeChanged();
        partial void OnCreatedPersonelIDChanging(Nullable<Guid> value);
        partial void OnCreatedPersonelIDChanged();
        partial void OnDescDiagnosisChanging(string value);
        partial void OnDescDiagnosisChanged();
        partial void OnDiagnosisIDChanging(Nullable<Guid> value);
        partial void OnDiagnosisIDChanged();
        partial void OnGuestIDChanging(Guid value);
        partial void OnGuestIDChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnModifiedDatetimeChanging(Nullable<DateTime> value);
        partial void OnModifiedDatetimeChanged();
        partial void OnModifiedPersonelIDChanging(Nullable<Guid> value);
        partial void OnModifiedPersonelIDChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_GuestDiagnosisDetail"/> class.
        /// </summary>
        public SPA_GuestDiagnosisDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Completed' value.
        /// </summary>
        [DataMember()]
        public bool Completed
        {
            get
            {
                return this._completed;
            }
            set
            {
                if ((this._completed != value))
                {
                    this.OnCompletedChanging(value);
                    this.RaiseDataMemberChanging("Completed");
                    this.ValidateProperty("Completed", value);
                    this._completed = value;
                    this.RaiseDataMemberChanged("Completed");
                    this.OnCompletedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CompletedDateTime' value.
        /// </summary>
        [DataMember()]
        public DateTime CompletedDateTime
        {
            get
            {
                return this._completedDateTime;
            }
            set
            {
                if ((this._completedDateTime != value))
                {
                    this.OnCompletedDateTimeChanging(value);
                    this.RaiseDataMemberChanging("CompletedDateTime");
                    this.ValidateProperty("CompletedDateTime", value);
                    this._completedDateTime = value;
                    this.RaiseDataMemberChanged("CompletedDateTime");
                    this.OnCompletedDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CreatedDatetime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> CreatedDatetime
        {
            get
            {
                return this._createdDatetime;
            }
            set
            {
                if ((this._createdDatetime != value))
                {
                    this.OnCreatedDatetimeChanging(value);
                    this.RaiseDataMemberChanging("CreatedDatetime");
                    this.ValidateProperty("CreatedDatetime", value);
                    this._createdDatetime = value;
                    this.RaiseDataMemberChanged("CreatedDatetime");
                    this.OnCreatedDatetimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CreatedPersonelID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> CreatedPersonelID
        {
            get
            {
                return this._createdPersonelID;
            }
            set
            {
                if ((this._createdPersonelID != value))
                {
                    this.OnCreatedPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("CreatedPersonelID");
                    this.ValidateProperty("CreatedPersonelID", value);
                    this._createdPersonelID = value;
                    this.RaiseDataMemberChanged("CreatedPersonelID");
                    this.OnCreatedPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DescDiagnosis' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(250)]
        public string DescDiagnosis
        {
            get
            {
                return this._descDiagnosis;
            }
            set
            {
                if ((this._descDiagnosis != value))
                {
                    this.OnDescDiagnosisChanging(value);
                    this.RaiseDataMemberChanging("DescDiagnosis");
                    this.ValidateProperty("DescDiagnosis", value);
                    this._descDiagnosis = value;
                    this.RaiseDataMemberChanged("DescDiagnosis");
                    this.OnDescDiagnosisChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DiagnosisID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> DiagnosisID
        {
            get
            {
                return this._diagnosisID;
            }
            set
            {
                if ((this._diagnosisID != value))
                {
                    this.OnDiagnosisIDChanging(value);
                    this.RaiseDataMemberChanging("DiagnosisID");
                    this.ValidateProperty("DiagnosisID", value);
                    this._diagnosisID = value;
                    this.RaiseDataMemberChanged("DiagnosisID");
                    this.OnDiagnosisIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        public Guid GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.RaiseDataMemberChanging("GuestID");
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaiseDataMemberChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ModifiedDatetime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> ModifiedDatetime
        {
            get
            {
                return this._modifiedDatetime;
            }
            set
            {
                if ((this._modifiedDatetime != value))
                {
                    this.OnModifiedDatetimeChanging(value);
                    this.RaiseDataMemberChanging("ModifiedDatetime");
                    this.ValidateProperty("ModifiedDatetime", value);
                    this._modifiedDatetime = value;
                    this.RaiseDataMemberChanged("ModifiedDatetime");
                    this.OnModifiedDatetimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ModifiedPersonelID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> ModifiedPersonelID
        {
            get
            {
                return this._modifiedPersonelID;
            }
            set
            {
                if ((this._modifiedPersonelID != value))
                {
                    this.OnModifiedPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("ModifiedPersonelID");
                    this.ValidateProperty("ModifiedPersonelID", value);
                    this._modifiedPersonelID = value;
                    this.RaiseDataMemberChanged("ModifiedPersonelID");
                    this.OnModifiedPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelID");
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaiseDataMemberChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_GuestTherapyDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_GuestTherapyDetail : Entity
    {
        
        private Guid _guestID;
        
        private Guid _id;
        
        private Nullable<bool> _isCompleted;
        
        private Nullable<DateTime> _therapyDateTime;
        
        private Nullable<Guid> _therapyID;
        
        private string _therapyNote;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnGuestIDChanging(Guid value);
        partial void OnGuestIDChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsCompletedChanging(Nullable<bool> value);
        partial void OnIsCompletedChanged();
        partial void OnTherapyDateTimeChanging(Nullable<DateTime> value);
        partial void OnTherapyDateTimeChanged();
        partial void OnTherapyIDChanging(Nullable<Guid> value);
        partial void OnTherapyIDChanged();
        partial void OnTherapyNoteChanging(string value);
        partial void OnTherapyNoteChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_GuestTherapyDetail"/> class.
        /// </summary>
        public SPA_GuestTherapyDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        public Guid GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.RaiseDataMemberChanging("GuestID");
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaiseDataMemberChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsCompleted' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsCompleted
        {
            get
            {
                return this._isCompleted;
            }
            set
            {
                if ((this._isCompleted != value))
                {
                    this.OnIsCompletedChanging(value);
                    this.RaiseDataMemberChanging("IsCompleted");
                    this.ValidateProperty("IsCompleted", value);
                    this._isCompleted = value;
                    this.RaiseDataMemberChanged("IsCompleted");
                    this.OnIsCompletedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyDateTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TherapyDateTime
        {
            get
            {
                return this._therapyDateTime;
            }
            set
            {
                if ((this._therapyDateTime != value))
                {
                    this.OnTherapyDateTimeChanging(value);
                    this.RaiseDataMemberChanging("TherapyDateTime");
                    this.ValidateProperty("TherapyDateTime", value);
                    this._therapyDateTime = value;
                    this.RaiseDataMemberChanged("TherapyDateTime");
                    this.OnTherapyDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> TherapyID
        {
            get
            {
                return this._therapyID;
            }
            set
            {
                if ((this._therapyID != value))
                {
                    this.OnTherapyIDChanging(value);
                    this.RaiseDataMemberChanging("TherapyID");
                    this.ValidateProperty("TherapyID", value);
                    this._therapyID = value;
                    this.RaiseDataMemberChanged("TherapyID");
                    this.OnTherapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(500)]
        public string TherapyNote
        {
            get
            {
                return this._therapyNote;
            }
            set
            {
                if ((this._therapyNote != value))
                {
                    this.OnTherapyNoteChanging(value);
                    this.RaiseDataMemberChanging("TherapyNote");
                    this.ValidateProperty("TherapyNote", value);
                    this._therapyNote = value;
                    this.RaiseDataMemberChanged("TherapyNote");
                    this.OnTherapyNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_PersonelJobDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_PersonelJobDetail : Entity
    {
        
        private string _adi;
        
        private Guid _id;
        
        private Guid _personelID;
        
        private byte[] _personelPhoto;
        
        private Nullable<Guid> _therapyID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnPersonelPhotoChanging(byte[] value);
        partial void OnPersonelPhotoChanged();
        partial void OnTherapyIDChanging(Nullable<Guid> value);
        partial void OnTherapyIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_PersonelJobDetail"/> class.
        /// </summary>
        public SPA_PersonelJobDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Adi' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(500)]
        public string Adi
        {
            get
            {
                return this._adi;
            }
            set
            {
                if ((this._adi != value))
                {
                    this.OnAdiChanging(value);
                    this.RaiseDataMemberChanging("Adi");
                    this.ValidateProperty("Adi", value);
                    this._adi = value;
                    this.RaiseDataMemberChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelID");
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaiseDataMemberChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelPhoto' value.
        /// </summary>
        [DataMember()]
        public byte[] PersonelPhoto
        {
            get
            {
                return this._personelPhoto;
            }
            set
            {
                if ((this._personelPhoto != value))
                {
                    this.OnPersonelPhotoChanging(value);
                    this.RaiseDataMemberChanging("PersonelPhoto");
                    this.ValidateProperty("PersonelPhoto", value);
                    this._personelPhoto = value;
                    this.RaiseDataMemberChanged("PersonelPhoto");
                    this.OnPersonelPhotoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> TherapyID
        {
            get
            {
                return this._therapyID;
            }
            set
            {
                if ((this._therapyID != value))
                {
                    this.OnTherapyIDChanging(value);
                    this.RaiseDataMemberChanging("TherapyID");
                    this.ValidateProperty("TherapyID", value);
                    this._therapyID = value;
                    this.RaiseDataMemberChanged("TherapyID");
                    this.OnTherapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_PersonelTherapyDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_PersonelTherapyDetail : Entity
    {
        
        private Nullable<DateTime> _createdDatetime;
        
        private Nullable<Guid> _createdPersonelID;
        
        private Guid _id;
        
        private Nullable<bool> _isReplecment;
        
        private Nullable<DateTime> _modifiedDatetime;
        
        private Nullable<Guid> _modifiedPersonelID;
        
        private Guid _personelID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCreatedDatetimeChanging(Nullable<DateTime> value);
        partial void OnCreatedDatetimeChanged();
        partial void OnCreatedPersonelIDChanging(Nullable<Guid> value);
        partial void OnCreatedPersonelIDChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsReplecmentChanging(Nullable<bool> value);
        partial void OnIsReplecmentChanged();
        partial void OnModifiedDatetimeChanging(Nullable<DateTime> value);
        partial void OnModifiedDatetimeChanged();
        partial void OnModifiedPersonelIDChanging(Nullable<Guid> value);
        partial void OnModifiedPersonelIDChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_PersonelTherapyDetail"/> class.
        /// </summary>
        public SPA_PersonelTherapyDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'CreatedDatetime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> CreatedDatetime
        {
            get
            {
                return this._createdDatetime;
            }
            set
            {
                if ((this._createdDatetime != value))
                {
                    this.OnCreatedDatetimeChanging(value);
                    this.RaiseDataMemberChanging("CreatedDatetime");
                    this.ValidateProperty("CreatedDatetime", value);
                    this._createdDatetime = value;
                    this.RaiseDataMemberChanged("CreatedDatetime");
                    this.OnCreatedDatetimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CreatedPersonelID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> CreatedPersonelID
        {
            get
            {
                return this._createdPersonelID;
            }
            set
            {
                if ((this._createdPersonelID != value))
                {
                    this.OnCreatedPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("CreatedPersonelID");
                    this.ValidateProperty("CreatedPersonelID", value);
                    this._createdPersonelID = value;
                    this.RaiseDataMemberChanged("CreatedPersonelID");
                    this.OnCreatedPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsReplecment' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsReplecment
        {
            get
            {
                return this._isReplecment;
            }
            set
            {
                if ((this._isReplecment != value))
                {
                    this.OnIsReplecmentChanging(value);
                    this.RaiseDataMemberChanging("IsReplecment");
                    this.ValidateProperty("IsReplecment", value);
                    this._isReplecment = value;
                    this.RaiseDataMemberChanged("IsReplecment");
                    this.OnIsReplecmentChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ModifiedDatetime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> ModifiedDatetime
        {
            get
            {
                return this._modifiedDatetime;
            }
            set
            {
                if ((this._modifiedDatetime != value))
                {
                    this.OnModifiedDatetimeChanging(value);
                    this.RaiseDataMemberChanging("ModifiedDatetime");
                    this.ValidateProperty("ModifiedDatetime", value);
                    this._modifiedDatetime = value;
                    this.RaiseDataMemberChanged("ModifiedDatetime");
                    this.OnModifiedDatetimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ModifiedPersonelID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> ModifiedPersonelID
        {
            get
            {
                return this._modifiedPersonelID;
            }
            set
            {
                if ((this._modifiedPersonelID != value))
                {
                    this.OnModifiedPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("ModifiedPersonelID");
                    this.ValidateProperty("ModifiedPersonelID", value);
                    this._modifiedPersonelID = value;
                    this.RaiseDataMemberChanged("ModifiedPersonelID");
                    this.OnModifiedPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelID");
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaiseDataMemberChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_RezervationSchedule' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_RezervationSchedule : Entity
    {
        
        private DateTime _endDateTime;
        
        private Nullable<Guid> _guestID;
        
        private string _guestNote;
        
        private Guid _id;
        
        private Nullable<bool> _isCanceled;
        
        private Nullable<Guid> _izinID;
        
        private string _location;
        
        private Guid _personelID;
        
        private DateTime _startDateTime;
        
        private Nullable<int> _statusID;
        
        private string _subject;
        
        private Nullable<Guid> _therapyID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnEndDateTimeChanging(DateTime value);
        partial void OnEndDateTimeChanged();
        partial void OnGuestIDChanging(Nullable<Guid> value);
        partial void OnGuestIDChanged();
        partial void OnGuestNoteChanging(string value);
        partial void OnGuestNoteChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsCanceledChanging(Nullable<bool> value);
        partial void OnIsCanceledChanged();
        partial void OnIzinIDChanging(Nullable<Guid> value);
        partial void OnIzinIDChanged();
        partial void OnLocationChanging(string value);
        partial void OnLocationChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnStartDateTimeChanging(DateTime value);
        partial void OnStartDateTimeChanged();
        partial void OnStatusIDChanging(Nullable<int> value);
        partial void OnStatusIDChanged();
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();
        partial void OnTherapyIDChanging(Nullable<Guid> value);
        partial void OnTherapyIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_RezervationSchedule"/> class.
        /// </summary>
        public SPA_RezervationSchedule()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'EndDateTime' value.
        /// </summary>
        [DataMember()]
        public DateTime EndDateTime
        {
            get
            {
                return this._endDateTime;
            }
            set
            {
                if ((this._endDateTime != value))
                {
                    this.OnEndDateTimeChanging(value);
                    this.RaiseDataMemberChanging("EndDateTime");
                    this.ValidateProperty("EndDateTime", value);
                    this._endDateTime = value;
                    this.RaiseDataMemberChanged("EndDateTime");
                    this.OnEndDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.RaiseDataMemberChanging("GuestID");
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaiseDataMemberChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(500)]
        public string GuestNote
        {
            get
            {
                return this._guestNote;
            }
            set
            {
                if ((this._guestNote != value))
                {
                    this.OnGuestNoteChanging(value);
                    this.RaiseDataMemberChanging("GuestNote");
                    this.ValidateProperty("GuestNote", value);
                    this._guestNote = value;
                    this.RaiseDataMemberChanged("GuestNote");
                    this.OnGuestNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsCanceled' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsCanceled
        {
            get
            {
                return this._isCanceled;
            }
            set
            {
                if ((this._isCanceled != value))
                {
                    this.OnIsCanceledChanging(value);
                    this.RaiseDataMemberChanging("IsCanceled");
                    this.ValidateProperty("IsCanceled", value);
                    this._isCanceled = value;
                    this.RaiseDataMemberChanged("IsCanceled");
                    this.OnIsCanceledChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> IzinID
        {
            get
            {
                return this._izinID;
            }
            set
            {
                if ((this._izinID != value))
                {
                    this.OnIzinIDChanging(value);
                    this.RaiseDataMemberChanging("IzinID");
                    this.ValidateProperty("IzinID", value);
                    this._izinID = value;
                    this.RaiseDataMemberChanged("IzinID");
                    this.OnIzinIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Location' value.
        /// </summary>
        [DataMember()]
        [StringLength(1500)]
        public string Location
        {
            get
            {
                return this._location;
            }
            set
            {
                if ((this._location != value))
                {
                    this.OnLocationChanging(value);
                    this.RaiseDataMemberChanging("Location");
                    this.ValidateProperty("Location", value);
                    this._location = value;
                    this.RaiseDataMemberChanged("Location");
                    this.OnLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelID");
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaiseDataMemberChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StartDateTime' value.
        /// </summary>
        [DataMember()]
        public DateTime StartDateTime
        {
            get
            {
                return this._startDateTime;
            }
            set
            {
                if ((this._startDateTime != value))
                {
                    this.OnStartDateTimeChanging(value);
                    this.RaiseDataMemberChanging("StartDateTime");
                    this.ValidateProperty("StartDateTime", value);
                    this._startDateTime = value;
                    this.RaiseDataMemberChanged("StartDateTime");
                    this.OnStartDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StatusID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> StatusID
        {
            get
            {
                return this._statusID;
            }
            set
            {
                if ((this._statusID != value))
                {
                    this.OnStatusIDChanging(value);
                    this.RaiseDataMemberChanging("StatusID");
                    this.ValidateProperty("StatusID", value);
                    this._statusID = value;
                    this.RaiseDataMemberChanged("StatusID");
                    this.OnStatusIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Subject' value.
        /// </summary>
        [DataMember()]
        [StringLength(1000)]
        public string Subject
        {
            get
            {
                return this._subject;
            }
            set
            {
                if ((this._subject != value))
                {
                    this.OnSubjectChanging(value);
                    this.RaiseDataMemberChanging("Subject");
                    this.ValidateProperty("Subject", value);
                    this._subject = value;
                    this.RaiseDataMemberChanged("Subject");
                    this.OnSubjectChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> TherapyID
        {
            get
            {
                return this._therapyID;
            }
            set
            {
                if ((this._therapyID != value))
                {
                    this.OnTherapyIDChanging(value);
                    this.RaiseDataMemberChanging("TherapyID");
                    this.ValidateProperty("TherapyID", value);
                    this._therapyID = value;
                    this.RaiseDataMemberChanged("TherapyID");
                    this.OnTherapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_Status' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_Status : Entity
    {
        
        private Guid _id;
        
        private int _statusID;
        
        private string _statusName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnStatusIDChanging(int value);
        partial void OnStatusIDChanged();
        partial void OnStatusNameChanging(string value);
        partial void OnStatusNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_Status"/> class.
        /// </summary>
        public SPA_Status()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StatusID' value.
        /// </summary>
        [DataMember()]
        public int StatusID
        {
            get
            {
                return this._statusID;
            }
            set
            {
                if ((this._statusID != value))
                {
                    this.OnStatusIDChanging(value);
                    this.RaiseDataMemberChanging("StatusID");
                    this.ValidateProperty("StatusID", value);
                    this._statusID = value;
                    this.RaiseDataMemberChanged("StatusID");
                    this.OnStatusIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StatusName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(250)]
        public string StatusName
        {
            get
            {
                return this._statusName;
            }
            set
            {
                if ((this._statusName != value))
                {
                    this.OnStatusNameChanging(value);
                    this.RaiseDataMemberChanging("StatusName");
                    this.ValidateProperty("StatusName", value);
                    this._statusName = value;
                    this.RaiseDataMemberChanged("StatusName");
                    this.OnStatusNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'SPA_Therapy' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class SPA_Therapy : Entity
    {
        
        private Guid _id;
        
        private Nullable<bool> _isActive;
        
        private Nullable<bool> _isTax;
        
        private Nullable<decimal> _price;
        
        private Nullable<int> _servisTime;
        
        private string _therapyName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsActiveChanging(Nullable<bool> value);
        partial void OnIsActiveChanged();
        partial void OnIsTaxChanging(Nullable<bool> value);
        partial void OnIsTaxChanged();
        partial void OnPriceChanging(Nullable<decimal> value);
        partial void OnPriceChanged();
        partial void OnServisTimeChanging(Nullable<int> value);
        partial void OnServisTimeChanged();
        partial void OnTherapyNameChanging(string value);
        partial void OnTherapyNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SPA_Therapy"/> class.
        /// </summary>
        public SPA_Therapy()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsActive' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                if ((this._isActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._isActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsTax' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsTax
        {
            get
            {
                return this._isTax;
            }
            set
            {
                if ((this._isTax != value))
                {
                    this.OnIsTaxChanging(value);
                    this.RaiseDataMemberChanging("IsTax");
                    this.ValidateProperty("IsTax", value);
                    this._isTax = value;
                    this.RaiseDataMemberChanged("IsTax");
                    this.OnIsTaxChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Price' value.
        /// </summary>
        [DataMember()]
        public Nullable<decimal> Price
        {
            get
            {
                return this._price;
            }
            set
            {
                if ((this._price != value))
                {
                    this.OnPriceChanging(value);
                    this.RaiseDataMemberChanging("Price");
                    this.ValidateProperty("Price", value);
                    this._price = value;
                    this.RaiseDataMemberChanged("Price");
                    this.OnPriceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ServisTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ServisTime
        {
            get
            {
                return this._servisTime;
            }
            set
            {
                if ((this._servisTime != value))
                {
                    this.OnServisTimeChanging(value);
                    this.RaiseDataMemberChanging("ServisTime");
                    this.ValidateProperty("ServisTime", value);
                    this._servisTime = value;
                    this.RaiseDataMemberChanged("ServisTime");
                    this.OnServisTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(250)]
        public string TherapyName
        {
            get
            {
                return this._therapyName;
            }
            set
            {
                if ((this._therapyName != value))
                {
                    this.OnTherapyNameChanging(value);
                    this.RaiseDataMemberChanging("TherapyName");
                    this.ValidateProperty("TherapyName", value);
                    this._therapyName = value;
                    this.RaiseDataMemberChanged("TherapyName");
                    this.OnTherapyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'User' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class User : Entity
    {
        
        private Nullable<DateTime> _accountDisabledFrom;
        
        private Nullable<DateTime> _accountDisabledTo;
        
        private string _accountDisableReason;
        
        private string _address;
        
        private Nullable<int> _cashierNumber;
        
        private string _culture;
        
        private string _dateCulture;
        
        private Nullable<Guid> _defectDepartmentID;
        
        private Nullable<Guid> _employeeId;
        
        private string _firstName;
        
        private Guid _id;
        
        private string _idCardNumber;
        
        private string _initials;
        
        private Nullable<bool> _isActive;
        
        private Nullable<bool> _isFullTime;
        
        private Nullable<bool> _isHasBonusRight;
        
        private Nullable<bool> _isPasswordEncoded;
        
        private string _kimlikNo;
        
        private string _lastName;
        
        private string _loginName;
        
        private Nullable<DateTime> _loginValidFrom;
        
        private Nullable<DateTime> _loginValidTo;
        
        private byte[] _mainToolBarInfo;
        
        private Nullable<int> _oneDayRackCellHeight;
        
        private Nullable<int> _oneDayRackCellWidth;
        
        private string _password;
        
        private string _pCode;
        
        private EntityRef<Personel> _personel;
        
        private EntityCollection<PersonelIzinDatalari> _personelIzinDatalari;
        
        private EntityCollection<PersonelIzinDatalari> _personelIzinDatalari1;
        
        private string _rackViewSelection;
        
        private Nullable<int> _sessionRenewalPeriod;
        
        private Nullable<int> _sessionTimeOutPeriod;
        
        private string _sex;
        
        private string _skinName;
        
        private string _title;
        
        private EntityCollection<UserAppRoles> _userAppRoles;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAccountDisabledFromChanging(Nullable<DateTime> value);
        partial void OnAccountDisabledFromChanged();
        partial void OnAccountDisabledToChanging(Nullable<DateTime> value);
        partial void OnAccountDisabledToChanged();
        partial void OnAccountDisableReasonChanging(string value);
        partial void OnAccountDisableReasonChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnCashierNumberChanging(Nullable<int> value);
        partial void OnCashierNumberChanged();
        partial void OnCultureChanging(string value);
        partial void OnCultureChanged();
        partial void OnDateCultureChanging(string value);
        partial void OnDateCultureChanged();
        partial void OnDefectDepartmentIDChanging(Nullable<Guid> value);
        partial void OnDefectDepartmentIDChanged();
        partial void OnEmployeeIdChanging(Nullable<Guid> value);
        partial void OnEmployeeIdChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIDCardNumberChanging(string value);
        partial void OnIDCardNumberChanged();
        partial void OnInitialsChanging(string value);
        partial void OnInitialsChanged();
        partial void OnIsActiveChanging(Nullable<bool> value);
        partial void OnIsActiveChanged();
        partial void OnIsFullTimeChanging(Nullable<bool> value);
        partial void OnIsFullTimeChanged();
        partial void OnIsHasBonusRightChanging(Nullable<bool> value);
        partial void OnIsHasBonusRightChanged();
        partial void OnIsPasswordEncodedChanging(Nullable<bool> value);
        partial void OnIsPasswordEncodedChanged();
        partial void OnKimlikNoChanging(string value);
        partial void OnKimlikNoChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnLoginNameChanging(string value);
        partial void OnLoginNameChanged();
        partial void OnLoginValidFromChanging(Nullable<DateTime> value);
        partial void OnLoginValidFromChanged();
        partial void OnLoginValidToChanging(Nullable<DateTime> value);
        partial void OnLoginValidToChanged();
        partial void OnMainToolBarInfoChanging(byte[] value);
        partial void OnMainToolBarInfoChanged();
        partial void OnOneDayRackCellHeightChanging(Nullable<int> value);
        partial void OnOneDayRackCellHeightChanged();
        partial void OnOneDayRackCellWidthChanging(Nullable<int> value);
        partial void OnOneDayRackCellWidthChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnPCodeChanging(string value);
        partial void OnPCodeChanged();
        partial void OnRackViewSelectionChanging(string value);
        partial void OnRackViewSelectionChanged();
        partial void OnSessionRenewalPeriodChanging(Nullable<int> value);
        partial void OnSessionRenewalPeriodChanged();
        partial void OnSessionTimeOutPeriodChanging(Nullable<int> value);
        partial void OnSessionTimeOutPeriodChanged();
        partial void OnSexChanging(string value);
        partial void OnSexChanged();
        partial void OnSkinNameChanging(string value);
        partial void OnSkinNameChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        public User()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'AccountDisabledFrom' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> AccountDisabledFrom
        {
            get
            {
                return this._accountDisabledFrom;
            }
            set
            {
                if ((this._accountDisabledFrom != value))
                {
                    this.OnAccountDisabledFromChanging(value);
                    this.RaiseDataMemberChanging("AccountDisabledFrom");
                    this.ValidateProperty("AccountDisabledFrom", value);
                    this._accountDisabledFrom = value;
                    this.RaiseDataMemberChanged("AccountDisabledFrom");
                    this.OnAccountDisabledFromChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'AccountDisabledTo' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> AccountDisabledTo
        {
            get
            {
                return this._accountDisabledTo;
            }
            set
            {
                if ((this._accountDisabledTo != value))
                {
                    this.OnAccountDisabledToChanging(value);
                    this.RaiseDataMemberChanging("AccountDisabledTo");
                    this.ValidateProperty("AccountDisabledTo", value);
                    this._accountDisabledTo = value;
                    this.RaiseDataMemberChanged("AccountDisabledTo");
                    this.OnAccountDisabledToChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'AccountDisableReason' value.
        /// </summary>
        [DataMember()]
        [StringLength(4000)]
        public string AccountDisableReason
        {
            get
            {
                return this._accountDisableReason;
            }
            set
            {
                if ((this._accountDisableReason != value))
                {
                    this.OnAccountDisableReasonChanging(value);
                    this.RaiseDataMemberChanging("AccountDisableReason");
                    this.ValidateProperty("AccountDisableReason", value);
                    this._accountDisableReason = value;
                    this.RaiseDataMemberChanged("AccountDisableReason");
                    this.OnAccountDisableReasonChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Address' value.
        /// </summary>
        [DataMember()]
        [StringLength(4000)]
        public string Address
        {
            get
            {
                return this._address;
            }
            set
            {
                if ((this._address != value))
                {
                    this.OnAddressChanging(value);
                    this.RaiseDataMemberChanging("Address");
                    this.ValidateProperty("Address", value);
                    this._address = value;
                    this.RaiseDataMemberChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CashierNumber' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> CashierNumber
        {
            get
            {
                return this._cashierNumber;
            }
            set
            {
                if ((this._cashierNumber != value))
                {
                    this.OnCashierNumberChanging(value);
                    this.RaiseDataMemberChanging("CashierNumber");
                    this.ValidateProperty("CashierNumber", value);
                    this._cashierNumber = value;
                    this.RaiseDataMemberChanged("CashierNumber");
                    this.OnCashierNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Culture' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Culture
        {
            get
            {
                return this._culture;
            }
            set
            {
                if ((this._culture != value))
                {
                    this.OnCultureChanging(value);
                    this.RaiseDataMemberChanging("Culture");
                    this.ValidateProperty("Culture", value);
                    this._culture = value;
                    this.RaiseDataMemberChanged("Culture");
                    this.OnCultureChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DateCulture' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string DateCulture
        {
            get
            {
                return this._dateCulture;
            }
            set
            {
                if ((this._dateCulture != value))
                {
                    this.OnDateCultureChanging(value);
                    this.RaiseDataMemberChanging("DateCulture");
                    this.ValidateProperty("DateCulture", value);
                    this._dateCulture = value;
                    this.RaiseDataMemberChanged("DateCulture");
                    this.OnDateCultureChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DefectDepartmentID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> DefectDepartmentID
        {
            get
            {
                return this._defectDepartmentID;
            }
            set
            {
                if ((this._defectDepartmentID != value))
                {
                    this.OnDefectDepartmentIDChanging(value);
                    this.RaiseDataMemberChanging("DefectDepartmentID");
                    this.ValidateProperty("DefectDepartmentID", value);
                    this._defectDepartmentID = value;
                    this.RaiseDataMemberChanged("DefectDepartmentID");
                    this.OnDefectDepartmentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EmployeeId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> EmployeeId
        {
            get
            {
                return this._employeeId;
            }
            set
            {
                if ((this._employeeId != value))
                {
                    this.OnEmployeeIdChanging(value);
                    this.RaiseDataMemberChanging("EmployeeId");
                    this.ValidateProperty("EmployeeId", value);
                    this._employeeId = value;
                    this.RaiseDataMemberChanged("EmployeeId");
                    this.OnEmployeeIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IDCardNumber' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string IDCardNumber
        {
            get
            {
                return this._idCardNumber;
            }
            set
            {
                if ((this._idCardNumber != value))
                {
                    this.OnIDCardNumberChanging(value);
                    this.RaiseDataMemberChanging("IDCardNumber");
                    this.ValidateProperty("IDCardNumber", value);
                    this._idCardNumber = value;
                    this.RaiseDataMemberChanged("IDCardNumber");
                    this.OnIDCardNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Initials' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Initials
        {
            get
            {
                return this._initials;
            }
            set
            {
                if ((this._initials != value))
                {
                    this.OnInitialsChanging(value);
                    this.RaiseDataMemberChanging("Initials");
                    this.ValidateProperty("Initials", value);
                    this._initials = value;
                    this.RaiseDataMemberChanged("Initials");
                    this.OnInitialsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsActive' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                if ((this._isActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._isActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsFullTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsFullTime
        {
            get
            {
                return this._isFullTime;
            }
            set
            {
                if ((this._isFullTime != value))
                {
                    this.OnIsFullTimeChanging(value);
                    this.RaiseDataMemberChanging("IsFullTime");
                    this.ValidateProperty("IsFullTime", value);
                    this._isFullTime = value;
                    this.RaiseDataMemberChanged("IsFullTime");
                    this.OnIsFullTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsHasBonusRight' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsHasBonusRight
        {
            get
            {
                return this._isHasBonusRight;
            }
            set
            {
                if ((this._isHasBonusRight != value))
                {
                    this.OnIsHasBonusRightChanging(value);
                    this.RaiseDataMemberChanging("IsHasBonusRight");
                    this.ValidateProperty("IsHasBonusRight", value);
                    this._isHasBonusRight = value;
                    this.RaiseDataMemberChanged("IsHasBonusRight");
                    this.OnIsHasBonusRightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsPasswordEncoded' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsPasswordEncoded
        {
            get
            {
                return this._isPasswordEncoded;
            }
            set
            {
                if ((this._isPasswordEncoded != value))
                {
                    this.OnIsPasswordEncodedChanging(value);
                    this.RaiseDataMemberChanging("IsPasswordEncoded");
                    this.ValidateProperty("IsPasswordEncoded", value);
                    this._isPasswordEncoded = value;
                    this.RaiseDataMemberChanged("IsPasswordEncoded");
                    this.OnIsPasswordEncodedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'KimlikNo' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string KimlikNo
        {
            get
            {
                return this._kimlikNo;
            }
            set
            {
                if ((this._kimlikNo != value))
                {
                    this.OnKimlikNoChanging(value);
                    this.RaiseDataMemberChanging("KimlikNo");
                    this.ValidateProperty("KimlikNo", value);
                    this._kimlikNo = value;
                    this.RaiseDataMemberChanged("KimlikNo");
                    this.OnKimlikNoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaiseDataMemberChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LoginName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string LoginName
        {
            get
            {
                return this._loginName;
            }
            set
            {
                if ((this._loginName != value))
                {
                    this.OnLoginNameChanging(value);
                    this.RaiseDataMemberChanging("LoginName");
                    this.ValidateProperty("LoginName", value);
                    this._loginName = value;
                    this.RaiseDataMemberChanged("LoginName");
                    this.OnLoginNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LoginValidFrom' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> LoginValidFrom
        {
            get
            {
                return this._loginValidFrom;
            }
            set
            {
                if ((this._loginValidFrom != value))
                {
                    this.OnLoginValidFromChanging(value);
                    this.RaiseDataMemberChanging("LoginValidFrom");
                    this.ValidateProperty("LoginValidFrom", value);
                    this._loginValidFrom = value;
                    this.RaiseDataMemberChanged("LoginValidFrom");
                    this.OnLoginValidFromChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LoginValidTo' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> LoginValidTo
        {
            get
            {
                return this._loginValidTo;
            }
            set
            {
                if ((this._loginValidTo != value))
                {
                    this.OnLoginValidToChanging(value);
                    this.RaiseDataMemberChanging("LoginValidTo");
                    this.ValidateProperty("LoginValidTo", value);
                    this._loginValidTo = value;
                    this.RaiseDataMemberChanged("LoginValidTo");
                    this.OnLoginValidToChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MainToolBarInfo' value.
        /// </summary>
        [DataMember()]
        public byte[] MainToolBarInfo
        {
            get
            {
                return this._mainToolBarInfo;
            }
            set
            {
                if ((this._mainToolBarInfo != value))
                {
                    this.OnMainToolBarInfoChanging(value);
                    this.RaiseDataMemberChanging("MainToolBarInfo");
                    this.ValidateProperty("MainToolBarInfo", value);
                    this._mainToolBarInfo = value;
                    this.RaiseDataMemberChanged("MainToolBarInfo");
                    this.OnMainToolBarInfoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OneDayRackCellHeight' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> OneDayRackCellHeight
        {
            get
            {
                return this._oneDayRackCellHeight;
            }
            set
            {
                if ((this._oneDayRackCellHeight != value))
                {
                    this.OnOneDayRackCellHeightChanging(value);
                    this.RaiseDataMemberChanging("OneDayRackCellHeight");
                    this.ValidateProperty("OneDayRackCellHeight", value);
                    this._oneDayRackCellHeight = value;
                    this.RaiseDataMemberChanged("OneDayRackCellHeight");
                    this.OnOneDayRackCellHeightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OneDayRackCellWidth' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> OneDayRackCellWidth
        {
            get
            {
                return this._oneDayRackCellWidth;
            }
            set
            {
                if ((this._oneDayRackCellWidth != value))
                {
                    this.OnOneDayRackCellWidthChanging(value);
                    this.RaiseDataMemberChanging("OneDayRackCellWidth");
                    this.ValidateProperty("OneDayRackCellWidth", value);
                    this._oneDayRackCellWidth = value;
                    this.RaiseDataMemberChanged("OneDayRackCellWidth");
                    this.OnOneDayRackCellWidthChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Password' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Password
        {
            get
            {
                return this._password;
            }
            set
            {
                if ((this._password != value))
                {
                    this.OnPasswordChanging(value);
                    this.RaiseDataMemberChanging("Password");
                    this.ValidateProperty("Password", value);
                    this._password = value;
                    this.RaiseDataMemberChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PCode' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string PCode
        {
            get
            {
                return this._pCode;
            }
            set
            {
                if ((this._pCode != value))
                {
                    this.OnPCodeChanging(value);
                    this.RaiseDataMemberChanging("PCode");
                    this.ValidateProperty("PCode", value);
                    this._pCode = value;
                    this.RaiseDataMemberChanged("PCode");
                    this.OnPCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Personel"/> entity.
        /// </summary>
        [Association("Personel_User", "EmployeeId", "OID", IsForeignKey=true)]
        [XmlIgnore()]
        public Personel Personel
        {
            get
            {
                if ((this._personel == null))
                {
                    this._personel = new EntityRef<Personel>(this, "Personel", this.FilterPersonel);
                }
                return this._personel.Entity;
            }
            set
            {
                Personel previous = this.Personel;
                if ((previous != value))
                {
                    this.ValidateProperty("Personel", value);
                    if ((previous != null))
                    {
                        this._personel.Entity = null;
                        previous.User.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.EmployeeId = value.OID;
                    }
                    else
                    {
                        this.EmployeeId = default(Nullable<Guid>);
                    }
                    this._personel.Entity = value;
                    if ((value != null))
                    {
                        value.User.Add(this);
                    }
                    this.RaisePropertyChanged("Personel");
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="PersonelIzinDatalari"/> entity instances.
        /// </summary>
        [Association("User_PersonelIzinDatalari", "ID", "IzinVerenKullaniciID")]
        [XmlIgnore()]
        public EntityCollection<PersonelIzinDatalari> PersonelIzinDatalari
        {
            get
            {
                if ((this._personelIzinDatalari == null))
                {
                    this._personelIzinDatalari = new EntityCollection<PersonelIzinDatalari>(this, "PersonelIzinDatalari", this.FilterPersonelIzinDatalari, this.AttachPersonelIzinDatalari, this.DetachPersonelIzinDatalari);
                }
                return this._personelIzinDatalari;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="PersonelIzinDatalari"/> entity instances.
        /// </summary>
        [Association("User_PersonelIzinDatalari1", "ID", "IKOnayKullaniciID")]
        [XmlIgnore()]
        public EntityCollection<PersonelIzinDatalari> PersonelIzinDatalari1
        {
            get
            {
                if ((this._personelIzinDatalari1 == null))
                {
                    this._personelIzinDatalari1 = new EntityCollection<PersonelIzinDatalari>(this, "PersonelIzinDatalari1", this.FilterPersonelIzinDatalari1, this.AttachPersonelIzinDatalari1, this.DetachPersonelIzinDatalari1);
                }
                return this._personelIzinDatalari1;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RackViewSelection' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string RackViewSelection
        {
            get
            {
                return this._rackViewSelection;
            }
            set
            {
                if ((this._rackViewSelection != value))
                {
                    this.OnRackViewSelectionChanging(value);
                    this.RaiseDataMemberChanging("RackViewSelection");
                    this.ValidateProperty("RackViewSelection", value);
                    this._rackViewSelection = value;
                    this.RaiseDataMemberChanged("RackViewSelection");
                    this.OnRackViewSelectionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SessionRenewalPeriod' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SessionRenewalPeriod
        {
            get
            {
                return this._sessionRenewalPeriod;
            }
            set
            {
                if ((this._sessionRenewalPeriod != value))
                {
                    this.OnSessionRenewalPeriodChanging(value);
                    this.RaiseDataMemberChanging("SessionRenewalPeriod");
                    this.ValidateProperty("SessionRenewalPeriod", value);
                    this._sessionRenewalPeriod = value;
                    this.RaiseDataMemberChanged("SessionRenewalPeriod");
                    this.OnSessionRenewalPeriodChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SessionTimeOutPeriod' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> SessionTimeOutPeriod
        {
            get
            {
                return this._sessionTimeOutPeriod;
            }
            set
            {
                if ((this._sessionTimeOutPeriod != value))
                {
                    this.OnSessionTimeOutPeriodChanging(value);
                    this.RaiseDataMemberChanging("SessionTimeOutPeriod");
                    this.ValidateProperty("SessionTimeOutPeriod", value);
                    this._sessionTimeOutPeriod = value;
                    this.RaiseDataMemberChanged("SessionTimeOutPeriod");
                    this.OnSessionTimeOutPeriodChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Sex' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string Sex
        {
            get
            {
                return this._sex;
            }
            set
            {
                if ((this._sex != value))
                {
                    this.OnSexChanging(value);
                    this.RaiseDataMemberChanging("Sex");
                    this.ValidateProperty("Sex", value);
                    this._sex = value;
                    this.RaiseDataMemberChanged("Sex");
                    this.OnSexChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SkinName' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string SkinName
        {
            get
            {
                return this._skinName;
            }
            set
            {
                if ((this._skinName != value))
                {
                    this.OnSkinNameChanging(value);
                    this.RaiseDataMemberChanging("SkinName");
                    this.ValidateProperty("SkinName", value);
                    this._skinName = value;
                    this.RaiseDataMemberChanged("SkinName");
                    this.OnSkinNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Title' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                if ((this._title != value))
                {
                    this.OnTitleChanging(value);
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._title = value;
                    this.RaiseDataMemberChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserAppRoles"/> entity instances.
        /// </summary>
        [Association("User_UserAppRoles", "ID", "UserId")]
        [XmlIgnore()]
        public EntityCollection<UserAppRoles> UserAppRoles
        {
            get
            {
                if ((this._userAppRoles == null))
                {
                    this._userAppRoles = new EntityCollection<UserAppRoles>(this, "UserAppRoles", this.FilterUserAppRoles, this.AttachUserAppRoles, this.DetachUserAppRoles);
                }
                return this._userAppRoles;
            }
        }
        
        private bool FilterPersonel(Personel entity)
        {
            return (entity.OID == this.EmployeeId);
        }
        
        private void AttachPersonelIzinDatalari(PersonelIzinDatalari entity)
        {
            entity.User = this;
        }
        
        private void DetachPersonelIzinDatalari(PersonelIzinDatalari entity)
        {
            entity.User = null;
        }
        
        private bool FilterPersonelIzinDatalari(PersonelIzinDatalari entity)
        {
            return (entity.IzinVerenKullaniciID == this.ID);
        }
        
        private void AttachPersonelIzinDatalari1(PersonelIzinDatalari entity)
        {
            entity.User1 = this;
        }
        
        private void DetachPersonelIzinDatalari1(PersonelIzinDatalari entity)
        {
            entity.User1 = null;
        }
        
        private bool FilterPersonelIzinDatalari1(PersonelIzinDatalari entity)
        {
            return (entity.IKOnayKullaniciID == this.ID);
        }
        
        private void AttachUserAppRoles(UserAppRoles entity)
        {
            entity.User = this;
        }
        
        private void DetachUserAppRoles(UserAppRoles entity)
        {
            entity.User = null;
        }
        
        private bool FilterUserAppRoles(UserAppRoles entity)
        {
            return (entity.UserId == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'UserApplications' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class UserApplications : Entity
    {
        
        private string _applicationName;
        
        private string _description;
        
        private Guid _id;
        
        private EntityCollection<UserAppRoles> _userAppRoles;
        
        private EntityCollection<UserRightDefinitions> _userRightDefinitions;
        
        private EntityCollection<UserRoles> _userRoles;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApplicationNameChanging(string value);
        partial void OnApplicationNameChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserApplications"/> class.
        /// </summary>
        public UserApplications()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string ApplicationName
        {
            get
            {
                return this._applicationName;
            }
            set
            {
                if ((this._applicationName != value))
                {
                    this.OnApplicationNameChanging(value);
                    this.RaiseDataMemberChanging("ApplicationName");
                    this.ValidateProperty("ApplicationName", value);
                    this._applicationName = value;
                    this.RaiseDataMemberChanged("ApplicationName");
                    this.OnApplicationNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Description' value.
        /// </summary>
        [DataMember()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((this._description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._description = value;
                    this.RaiseDataMemberChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserAppRoles"/> entity instances.
        /// </summary>
        [Association("UserApplications_UserAppRoles", "ID", "UserAppId")]
        [XmlIgnore()]
        public EntityCollection<UserAppRoles> UserAppRoles
        {
            get
            {
                if ((this._userAppRoles == null))
                {
                    this._userAppRoles = new EntityCollection<UserAppRoles>(this, "UserAppRoles", this.FilterUserAppRoles, this.AttachUserAppRoles, this.DetachUserAppRoles);
                }
                return this._userAppRoles;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserRightDefinitions"/> entity instances.
        /// </summary>
        [Association("UserApplications_UserRightDefinitions", "ID", "ApplicationId")]
        [XmlIgnore()]
        public EntityCollection<UserRightDefinitions> UserRightDefinitions
        {
            get
            {
                if ((this._userRightDefinitions == null))
                {
                    this._userRightDefinitions = new EntityCollection<UserRightDefinitions>(this, "UserRightDefinitions", this.FilterUserRightDefinitions, this.AttachUserRightDefinitions, this.DetachUserRightDefinitions);
                }
                return this._userRightDefinitions;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserRoles"/> entity instances.
        /// </summary>
        [Association("UserApplications_UserRoles", "ID", "ApplicationId")]
        [XmlIgnore()]
        public EntityCollection<UserRoles> UserRoles
        {
            get
            {
                if ((this._userRoles == null))
                {
                    this._userRoles = new EntityCollection<UserRoles>(this, "UserRoles", this.FilterUserRoles, this.AttachUserRoles, this.DetachUserRoles);
                }
                return this._userRoles;
            }
        }
        
        private void AttachUserAppRoles(UserAppRoles entity)
        {
            entity.UserApplications = this;
        }
        
        private void DetachUserAppRoles(UserAppRoles entity)
        {
            entity.UserApplications = null;
        }
        
        private bool FilterUserAppRoles(UserAppRoles entity)
        {
            return (entity.UserAppId == this.ID);
        }
        
        private void AttachUserRightDefinitions(UserRightDefinitions entity)
        {
            entity.UserApplications = this;
        }
        
        private void DetachUserRightDefinitions(UserRightDefinitions entity)
        {
            entity.UserApplications = null;
        }
        
        private bool FilterUserRightDefinitions(UserRightDefinitions entity)
        {
            return (entity.ApplicationId == this.ID);
        }
        
        private void AttachUserRoles(UserRoles entity)
        {
            entity.UserApplications = this;
        }
        
        private void DetachUserRoles(UserRoles entity)
        {
            entity.UserApplications = null;
        }
        
        private bool FilterUserRoles(UserRoles entity)
        {
            return (entity.ApplicationId == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'UserAppRoles' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class UserAppRoles : Entity
    {
        
        private Guid _id;
        
        private EntityRef<User> _user;
        
        private Nullable<Guid> _userAppId;
        
        private EntityRef<UserApplications> _userApplications;
        
        private Nullable<Guid> _userId;
        
        private EntityRef<UserRoles> _userRoles;
        
        private Nullable<Guid> _userRolesId;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnUserAppIdChanging(Nullable<Guid> value);
        partial void OnUserAppIdChanged();
        partial void OnUserIdChanging(Nullable<Guid> value);
        partial void OnUserIdChanged();
        partial void OnUserRolesIdChanging(Nullable<Guid> value);
        partial void OnUserRolesIdChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserAppRoles"/> class.
        /// </summary>
        public UserAppRoles()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="User"/> entity.
        /// </summary>
        [Association("User_UserAppRoles", "UserId", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public User User
        {
            get
            {
                if ((this._user == null))
                {
                    this._user = new EntityRef<User>(this, "User", this.FilterUser);
                }
                return this._user.Entity;
            }
            set
            {
                User previous = this.User;
                if ((previous != value))
                {
                    this.ValidateProperty("User", value);
                    if ((previous != null))
                    {
                        this._user.Entity = null;
                        previous.UserAppRoles.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.UserId = value.ID;
                    }
                    else
                    {
                        this.UserId = default(Nullable<Guid>);
                    }
                    this._user.Entity = value;
                    if ((value != null))
                    {
                        value.UserAppRoles.Add(this);
                    }
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserAppId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> UserAppId
        {
            get
            {
                return this._userAppId;
            }
            set
            {
                if ((this._userAppId != value))
                {
                    this.OnUserAppIdChanging(value);
                    this.RaiseDataMemberChanging("UserAppId");
                    this.ValidateProperty("UserAppId", value);
                    this._userAppId = value;
                    this.RaiseDataMemberChanged("UserAppId");
                    this.OnUserAppIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserApplications"/> entity.
        /// </summary>
        [Association("UserApplications_UserAppRoles", "UserAppId", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserApplications UserApplications
        {
            get
            {
                if ((this._userApplications == null))
                {
                    this._userApplications = new EntityRef<UserApplications>(this, "UserApplications", this.FilterUserApplications);
                }
                return this._userApplications.Entity;
            }
            set
            {
                UserApplications previous = this.UserApplications;
                if ((previous != value))
                {
                    this.ValidateProperty("UserApplications", value);
                    if ((previous != null))
                    {
                        this._userApplications.Entity = null;
                        previous.UserAppRoles.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.UserAppId = value.ID;
                    }
                    else
                    {
                        this.UserAppId = default(Nullable<Guid>);
                    }
                    this._userApplications.Entity = value;
                    if ((value != null))
                    {
                        value.UserAppRoles.Add(this);
                    }
                    this.RaisePropertyChanged("UserApplications");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                if ((this._userId != value))
                {
                    this.OnUserIdChanging(value);
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._userId = value;
                    this.RaiseDataMemberChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserRoles"/> entity.
        /// </summary>
        [Association("UserRoles_UserAppRoles", "UserRolesId", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserRoles UserRoles
        {
            get
            {
                if ((this._userRoles == null))
                {
                    this._userRoles = new EntityRef<UserRoles>(this, "UserRoles", this.FilterUserRoles);
                }
                return this._userRoles.Entity;
            }
            set
            {
                UserRoles previous = this.UserRoles;
                if ((previous != value))
                {
                    this.ValidateProperty("UserRoles", value);
                    if ((previous != null))
                    {
                        this._userRoles.Entity = null;
                        previous.UserAppRoles.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.UserRolesId = value.ID;
                    }
                    else
                    {
                        this.UserRolesId = default(Nullable<Guid>);
                    }
                    this._userRoles.Entity = value;
                    if ((value != null))
                    {
                        value.UserAppRoles.Add(this);
                    }
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserRolesId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> UserRolesId
        {
            get
            {
                return this._userRolesId;
            }
            set
            {
                if ((this._userRolesId != value))
                {
                    this.OnUserRolesIdChanging(value);
                    this.RaiseDataMemberChanging("UserRolesId");
                    this.ValidateProperty("UserRolesId", value);
                    this._userRolesId = value;
                    this.RaiseDataMemberChanged("UserRolesId");
                    this.OnUserRolesIdChanged();
                }
            }
        }
        
        private bool FilterUser(User entity)
        {
            return (entity.ID == this.UserId);
        }
        
        private bool FilterUserApplications(UserApplications entity)
        {
            return (entity.ID == this.UserAppId);
        }
        
        private bool FilterUserRoles(UserRoles entity)
        {
            return (entity.ID == this.UserRolesId);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'UserRightDefinitions' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class UserRightDefinitions : Entity
    {
        
        private Nullable<Guid> _applicationId;
        
        private string _description;
        
        private string _element;
        
        private string _fixedDescription;
        
        private int _id;
        
        private Nullable<int> _parentID;
        
        private string _type;
        
        private EntityRef<UserApplications> _userApplications;
        
        private EntityCollection<UserRightDefinitions> _userRightDefinitions1;
        
        private EntityRef<UserRightDefinitions> _userRightDefinitions2;
        
        private EntityCollection<UserRoleDetails> _userRoleDetails;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApplicationIdChanging(Nullable<Guid> value);
        partial void OnApplicationIdChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnElementChanging(string value);
        partial void OnElementChanged();
        partial void OnFixedDescriptionChanging(string value);
        partial void OnFixedDescriptionChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnParentIDChanging(Nullable<int> value);
        partial void OnParentIDChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRightDefinitions"/> class.
        /// </summary>
        public UserRightDefinitions()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> ApplicationId
        {
            get
            {
                return this._applicationId;
            }
            set
            {
                if ((this._applicationId != value))
                {
                    this.OnApplicationIdChanging(value);
                    this.RaiseDataMemberChanging("ApplicationId");
                    this.ValidateProperty("ApplicationId", value);
                    this._applicationId = value;
                    this.RaiseDataMemberChanged("ApplicationId");
                    this.OnApplicationIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Description' value.
        /// </summary>
        [DataMember()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((this._description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._description = value;
                    this.RaiseDataMemberChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Element' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Element
        {
            get
            {
                return this._element;
            }
            set
            {
                if ((this._element != value))
                {
                    this.OnElementChanging(value);
                    this.RaiseDataMemberChanging("Element");
                    this.ValidateProperty("Element", value);
                    this._element = value;
                    this.RaiseDataMemberChanged("Element");
                    this.OnElementChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FixedDescription' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FixedDescription
        {
            get
            {
                return this._fixedDescription;
            }
            set
            {
                if ((this._fixedDescription != value))
                {
                    this.OnFixedDescriptionChanging(value);
                    this.RaiseDataMemberChanging("FixedDescription");
                    this.ValidateProperty("FixedDescription", value);
                    this._fixedDescription = value;
                    this.RaiseDataMemberChanged("FixedDescription");
                    this.OnFixedDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParentID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> ParentID
        {
            get
            {
                return this._parentID;
            }
            set
            {
                if ((this._parentID != value))
                {
                    this.OnParentIDChanging(value);
                    this.RaiseDataMemberChanging("ParentID");
                    this.ValidateProperty("ParentID", value);
                    this._parentID = value;
                    this.RaiseDataMemberChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Type' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                if ((this._type != value))
                {
                    this.OnTypeChanging(value);
                    this.RaiseDataMemberChanging("Type");
                    this.ValidateProperty("Type", value);
                    this._type = value;
                    this.RaiseDataMemberChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserApplications"/> entity.
        /// </summary>
        [Association("UserApplications_UserRightDefinitions", "ApplicationId", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserApplications UserApplications
        {
            get
            {
                if ((this._userApplications == null))
                {
                    this._userApplications = new EntityRef<UserApplications>(this, "UserApplications", this.FilterUserApplications);
                }
                return this._userApplications.Entity;
            }
            set
            {
                UserApplications previous = this.UserApplications;
                if ((previous != value))
                {
                    this.ValidateProperty("UserApplications", value);
                    if ((previous != null))
                    {
                        this._userApplications.Entity = null;
                        previous.UserRightDefinitions.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ApplicationId = value.ID;
                    }
                    else
                    {
                        this.ApplicationId = default(Nullable<Guid>);
                    }
                    this._userApplications.Entity = value;
                    if ((value != null))
                    {
                        value.UserRightDefinitions.Add(this);
                    }
                    this.RaisePropertyChanged("UserApplications");
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserRightDefinitions"/> entity instances.
        /// </summary>
        [Association("UserRightDefinitions_UserRightDefinitions", "ID", "ParentID")]
        [XmlIgnore()]
        public EntityCollection<UserRightDefinitions> UserRightDefinitions1
        {
            get
            {
                if ((this._userRightDefinitions1 == null))
                {
                    this._userRightDefinitions1 = new EntityCollection<UserRightDefinitions>(this, "UserRightDefinitions1", this.FilterUserRightDefinitions1, this.AttachUserRightDefinitions1, this.DetachUserRightDefinitions1);
                }
                return this._userRightDefinitions1;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserRightDefinitions"/> entity.
        /// </summary>
        [Association("UserRightDefinitions_UserRightDefinitions", "ParentID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserRightDefinitions UserRightDefinitions2
        {
            get
            {
                if ((this._userRightDefinitions2 == null))
                {
                    this._userRightDefinitions2 = new EntityRef<UserRightDefinitions>(this, "UserRightDefinitions2", this.FilterUserRightDefinitions2);
                }
                return this._userRightDefinitions2.Entity;
            }
            set
            {
                UserRightDefinitions previous = this.UserRightDefinitions2;
                if ((previous != value))
                {
                    this.ValidateProperty("UserRightDefinitions2", value);
                    if ((previous != null))
                    {
                        this._userRightDefinitions2.Entity = null;
                        previous.UserRightDefinitions1.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ParentID = value.ID;
                    }
                    else
                    {
                        this.ParentID = default(Nullable<int>);
                    }
                    this._userRightDefinitions2.Entity = value;
                    if ((value != null))
                    {
                        value.UserRightDefinitions1.Add(this);
                    }
                    this.RaisePropertyChanged("UserRightDefinitions2");
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserRoleDetails"/> entity instances.
        /// </summary>
        [Association("UserRightDefinitions_UserRoleDetails", "ID", "UserRightDefinitionsID")]
        [XmlIgnore()]
        public EntityCollection<UserRoleDetails> UserRoleDetails
        {
            get
            {
                if ((this._userRoleDetails == null))
                {
                    this._userRoleDetails = new EntityCollection<UserRoleDetails>(this, "UserRoleDetails", this.FilterUserRoleDetails, this.AttachUserRoleDetails, this.DetachUserRoleDetails);
                }
                return this._userRoleDetails;
            }
        }
        
        private bool FilterUserApplications(UserApplications entity)
        {
            return (entity.ID == this.ApplicationId);
        }
        
        private void AttachUserRightDefinitions1(UserRightDefinitions entity)
        {
            entity.UserRightDefinitions2 = this;
        }
        
        private void DetachUserRightDefinitions1(UserRightDefinitions entity)
        {
            entity.UserRightDefinitions2 = null;
        }
        
        private bool FilterUserRightDefinitions1(UserRightDefinitions entity)
        {
            return (entity.ParentID == this.ID);
        }
        
        private bool FilterUserRightDefinitions2(UserRightDefinitions entity)
        {
            return (entity.ID == this.ParentID);
        }
        
        private void AttachUserRoleDetails(UserRoleDetails entity)
        {
            entity.UserRightDefinitions = this;
        }
        
        private void DetachUserRoleDetails(UserRoleDetails entity)
        {
            entity.UserRightDefinitions = null;
        }
        
        private bool FilterUserRoleDetails(UserRoleDetails entity)
        {
            return (entity.UserRightDefinitionsID == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'UserRoleDetails' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class UserRoleDetails : Entity
    {
        
        private Guid _id;
        
        private bool _isAllowed;
        
        private EntityRef<UserRightDefinitions> _userRightDefinitions;
        
        private int _userRightDefinitionsID;
        
        private EntityRef<UserRoles> _userRoles;
        
        private Guid _userRolesID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsAllowedChanging(bool value);
        partial void OnIsAllowedChanged();
        partial void OnUserRightDefinitionsIDChanging(int value);
        partial void OnUserRightDefinitionsIDChanged();
        partial void OnUserRolesIDChanging(Guid value);
        partial void OnUserRolesIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRoleDetails"/> class.
        /// </summary>
        public UserRoleDetails()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsAllowed' value.
        /// </summary>
        [DataMember()]
        public bool IsAllowed
        {
            get
            {
                return this._isAllowed;
            }
            set
            {
                if ((this._isAllowed != value))
                {
                    this.OnIsAllowedChanging(value);
                    this.RaiseDataMemberChanging("IsAllowed");
                    this.ValidateProperty("IsAllowed", value);
                    this._isAllowed = value;
                    this.RaiseDataMemberChanged("IsAllowed");
                    this.OnIsAllowedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserRightDefinitions"/> entity.
        /// </summary>
        [Association("UserRightDefinitions_UserRoleDetails", "UserRightDefinitionsID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserRightDefinitions UserRightDefinitions
        {
            get
            {
                if ((this._userRightDefinitions == null))
                {
                    this._userRightDefinitions = new EntityRef<UserRightDefinitions>(this, "UserRightDefinitions", this.FilterUserRightDefinitions);
                }
                return this._userRightDefinitions.Entity;
            }
            set
            {
                UserRightDefinitions previous = this.UserRightDefinitions;
                if ((previous != value))
                {
                    this.ValidateProperty("UserRightDefinitions", value);
                    if ((previous != null))
                    {
                        this._userRightDefinitions.Entity = null;
                        previous.UserRoleDetails.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.UserRightDefinitionsID = value.ID;
                    }
                    else
                    {
                        this.UserRightDefinitionsID = default(int);
                    }
                    this._userRightDefinitions.Entity = value;
                    if ((value != null))
                    {
                        value.UserRoleDetails.Add(this);
                    }
                    this.RaisePropertyChanged("UserRightDefinitions");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserRightDefinitionsID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public int UserRightDefinitionsID
        {
            get
            {
                return this._userRightDefinitionsID;
            }
            set
            {
                if ((this._userRightDefinitionsID != value))
                {
                    this.OnUserRightDefinitionsIDChanging(value);
                    this.RaiseDataMemberChanging("UserRightDefinitionsID");
                    this.ValidateProperty("UserRightDefinitionsID", value);
                    this._userRightDefinitionsID = value;
                    this.RaiseDataMemberChanged("UserRightDefinitionsID");
                    this.OnUserRightDefinitionsIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserRoles"/> entity.
        /// </summary>
        [Association("UserRoles_UserRoleDetails", "UserRolesID", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserRoles UserRoles
        {
            get
            {
                if ((this._userRoles == null))
                {
                    this._userRoles = new EntityRef<UserRoles>(this, "UserRoles", this.FilterUserRoles);
                }
                return this._userRoles.Entity;
            }
            set
            {
                UserRoles previous = this.UserRoles;
                if ((previous != value))
                {
                    this.ValidateProperty("UserRoles", value);
                    if ((previous != null))
                    {
                        this._userRoles.Entity = null;
                        previous.UserRoleDetails.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.UserRolesID = value.ID;
                    }
                    else
                    {
                        this.UserRolesID = default(Guid);
                    }
                    this._userRoles.Entity = value;
                    if ((value != null))
                    {
                        value.UserRoleDetails.Add(this);
                    }
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UserRolesID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Guid UserRolesID
        {
            get
            {
                return this._userRolesID;
            }
            set
            {
                if ((this._userRolesID != value))
                {
                    this.OnUserRolesIDChanging(value);
                    this.RaiseDataMemberChanging("UserRolesID");
                    this.ValidateProperty("UserRolesID", value);
                    this._userRolesID = value;
                    this.RaiseDataMemberChanged("UserRolesID");
                    this.OnUserRolesIDChanged();
                }
            }
        }
        
        private bool FilterUserRightDefinitions(UserRightDefinitions entity)
        {
            return (entity.ID == this.UserRightDefinitionsID);
        }
        
        private bool FilterUserRoles(UserRoles entity)
        {
            return (entity.ID == this.UserRolesID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'UserRoles' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class UserRoles : Entity
    {
        
        private Nullable<Guid> _applicationId;
        
        private string _code;
        
        private string _description;
        
        private Guid _id;
        
        private Nullable<bool> _isActive;
        
        private EntityRef<UserApplications> _userApplications;
        
        private EntityCollection<UserAppRoles> _userAppRoles;
        
        private EntityCollection<UserRoleDetails> _userRoleDetails;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnApplicationIdChanging(Nullable<Guid> value);
        partial void OnApplicationIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnIsActiveChanging(Nullable<bool> value);
        partial void OnIsActiveChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="UserRoles"/> class.
        /// </summary>
        public UserRoles()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ApplicationId' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<Guid> ApplicationId
        {
            get
            {
                return this._applicationId;
            }
            set
            {
                if ((this._applicationId != value))
                {
                    this.OnApplicationIdChanging(value);
                    this.RaiseDataMemberChanging("ApplicationId");
                    this.ValidateProperty("ApplicationId", value);
                    this._applicationId = value;
                    this.RaiseDataMemberChanged("ApplicationId");
                    this.OnApplicationIdChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Code' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Code
        {
            get
            {
                return this._code;
            }
            set
            {
                if ((this._code != value))
                {
                    this.OnCodeChanging(value);
                    this.RaiseDataMemberChanging("Code");
                    this.ValidateProperty("Code", value);
                    this._code = value;
                    this.RaiseDataMemberChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Description' value.
        /// </summary>
        [DataMember()]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((this._description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._description = value;
                    this.RaiseDataMemberChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsActive' value.
        /// </summary>
        [DataMember()]
        public Nullable<bool> IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                if ((this._isActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.RaiseDataMemberChanging("IsActive");
                    this.ValidateProperty("IsActive", value);
                    this._isActive = value;
                    this.RaiseDataMemberChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="UserApplications"/> entity.
        /// </summary>
        [Association("UserApplications_UserRoles", "ApplicationId", "ID", IsForeignKey=true)]
        [XmlIgnore()]
        public UserApplications UserApplications
        {
            get
            {
                if ((this._userApplications == null))
                {
                    this._userApplications = new EntityRef<UserApplications>(this, "UserApplications", this.FilterUserApplications);
                }
                return this._userApplications.Entity;
            }
            set
            {
                UserApplications previous = this.UserApplications;
                if ((previous != value))
                {
                    this.ValidateProperty("UserApplications", value);
                    if ((previous != null))
                    {
                        this._userApplications.Entity = null;
                        previous.UserRoles.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ApplicationId = value.ID;
                    }
                    else
                    {
                        this.ApplicationId = default(Nullable<Guid>);
                    }
                    this._userApplications.Entity = value;
                    if ((value != null))
                    {
                        value.UserRoles.Add(this);
                    }
                    this.RaisePropertyChanged("UserApplications");
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserAppRoles"/> entity instances.
        /// </summary>
        [Association("UserRoles_UserAppRoles", "ID", "UserRolesId")]
        [XmlIgnore()]
        public EntityCollection<UserAppRoles> UserAppRoles
        {
            get
            {
                if ((this._userAppRoles == null))
                {
                    this._userAppRoles = new EntityCollection<UserAppRoles>(this, "UserAppRoles", this.FilterUserAppRoles, this.AttachUserAppRoles, this.DetachUserAppRoles);
                }
                return this._userAppRoles;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="UserRoleDetails"/> entity instances.
        /// </summary>
        [Association("UserRoles_UserRoleDetails", "ID", "UserRolesID")]
        [XmlIgnore()]
        public EntityCollection<UserRoleDetails> UserRoleDetails
        {
            get
            {
                if ((this._userRoleDetails == null))
                {
                    this._userRoleDetails = new EntityCollection<UserRoleDetails>(this, "UserRoleDetails", this.FilterUserRoleDetails, this.AttachUserRoleDetails, this.DetachUserRoleDetails);
                }
                return this._userRoleDetails;
            }
        }
        
        private bool FilterUserApplications(UserApplications entity)
        {
            return (entity.ID == this.ApplicationId);
        }
        
        private void AttachUserAppRoles(UserAppRoles entity)
        {
            entity.UserRoles = this;
        }
        
        private void DetachUserAppRoles(UserAppRoles entity)
        {
            entity.UserRoles = null;
        }
        
        private bool FilterUserAppRoles(UserAppRoles entity)
        {
            return (entity.UserRolesId == this.ID);
        }
        
        private void AttachUserRoleDetails(UserRoleDetails entity)
        {
            entity.UserRoles = this;
        }
        
        private void DetachUserRoleDetails(UserRoleDetails entity)
        {
            entity.UserRoles = null;
        }
        
        private bool FilterUserRoleDetails(UserRoleDetails entity)
        {
            return (entity.UserRolesID == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'View_SPA_GuestDiagnosticDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class View_SPA_GuestDiagnosticDetail : Entity
    {
        
        private DateTime _arriveDate;
        
        private bool _completed;
        
        private DateTime _departureDate;
        
        private string _descDiagnosis;
        
        private Nullable<Guid> _diagnosisID;
        
        private string _firstName;
        
        private Guid _guestID;
        
        private Guid _id;
        
        private string _lastName;
        
        private Guid _personelID;
        
        private string _roomNumber;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnArriveDateChanging(DateTime value);
        partial void OnArriveDateChanged();
        partial void OnCompletedChanging(bool value);
        partial void OnCompletedChanged();
        partial void OnDepartureDateChanging(DateTime value);
        partial void OnDepartureDateChanged();
        partial void OnDescDiagnosisChanging(string value);
        partial void OnDescDiagnosisChanged();
        partial void OnDiagnosisIDChanging(Nullable<Guid> value);
        partial void OnDiagnosisIDChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnGuestIDChanging(Guid value);
        partial void OnGuestIDChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnRoomNumberChanging(string value);
        partial void OnRoomNumberChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="View_SPA_GuestDiagnosticDetail"/> class.
        /// </summary>
        public View_SPA_GuestDiagnosticDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ArriveDate' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public DateTime ArriveDate
        {
            get
            {
                return this._arriveDate;
            }
            set
            {
                if ((this._arriveDate != value))
                {
                    this.OnArriveDateChanging(value);
                    this.ValidateProperty("ArriveDate", value);
                    this._arriveDate = value;
                    this.RaisePropertyChanged("ArriveDate");
                    this.OnArriveDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Completed' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public bool Completed
        {
            get
            {
                return this._completed;
            }
            set
            {
                if ((this._completed != value))
                {
                    this.OnCompletedChanging(value);
                    this.ValidateProperty("Completed", value);
                    this._completed = value;
                    this.RaisePropertyChanged("Completed");
                    this.OnCompletedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepartureDate' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public DateTime DepartureDate
        {
            get
            {
                return this._departureDate;
            }
            set
            {
                if ((this._departureDate != value))
                {
                    this.OnDepartureDateChanging(value);
                    this.ValidateProperty("DepartureDate", value);
                    this._departureDate = value;
                    this.RaisePropertyChanged("DepartureDate");
                    this.OnDepartureDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DescDiagnosis' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(250)]
        public string DescDiagnosis
        {
            get
            {
                return this._descDiagnosis;
            }
            set
            {
                if ((this._descDiagnosis != value))
                {
                    this.OnDescDiagnosisChanging(value);
                    this.ValidateProperty("DescDiagnosis", value);
                    this._descDiagnosis = value;
                    this.RaisePropertyChanged("DescDiagnosis");
                    this.OnDescDiagnosisChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DiagnosisID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> DiagnosisID
        {
            get
            {
                return this._diagnosisID;
            }
            set
            {
                if ((this._diagnosisID != value))
                {
                    this.OnDiagnosisIDChanging(value);
                    this.RaiseDataMemberChanging("DiagnosisID");
                    this.ValidateProperty("DiagnosisID", value);
                    this._diagnosisID = value;
                    this.RaiseDataMemberChanged("DiagnosisID");
                    this.OnDiagnosisIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaisePropertyChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaisePropertyChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaisePropertyChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RoomNumber' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(10)]
        public string RoomNumber
        {
            get
            {
                return this._roomNumber;
            }
            set
            {
                if ((this._roomNumber != value))
                {
                    this.OnRoomNumberChanging(value);
                    this.ValidateProperty("RoomNumber", value);
                    this._roomNumber = value;
                    this.RaisePropertyChanged("RoomNumber");
                    this.OnRoomNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if ((((this._descDiagnosis == null) 
                        || (this._lastName == null)) 
                        || (this._roomNumber == null)))
            {
                return null;
            }
            return EntityKey.Create(this._arriveDate, this._completed, this._departureDate, this._descDiagnosis, this._guestID, this._id, this._lastName, this._personelID, this._roomNumber);
        }
    }
    
    /// <summary>
    /// The 'View_SPA_GuestReservation' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class View_SPA_GuestReservation : Entity
    {
        
        private DateTime _arriveDate;
        
        private string _cInStatus;
        
        private DateTime _departureDate;
        
        private string _firstName;
        
        private Guid _id;
        
        private string _name;
        
        private string _number;
        
        private string _searchName;
        
        private string _telephone;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnArriveDateChanging(DateTime value);
        partial void OnArriveDateChanged();
        partial void OnCInStatusChanging(string value);
        partial void OnCInStatusChanged();
        partial void OnDepartureDateChanging(DateTime value);
        partial void OnDepartureDateChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnNumberChanging(string value);
        partial void OnNumberChanged();
        partial void OnSearchNameChanging(string value);
        partial void OnSearchNameChanged();
        partial void OnTelephoneChanging(string value);
        partial void OnTelephoneChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="View_SPA_GuestReservation"/> class.
        /// </summary>
        public View_SPA_GuestReservation()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ArriveDate' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public DateTime ArriveDate
        {
            get
            {
                return this._arriveDate;
            }
            set
            {
                if ((this._arriveDate != value))
                {
                    this.OnArriveDateChanging(value);
                    this.ValidateProperty("ArriveDate", value);
                    this._arriveDate = value;
                    this.RaisePropertyChanged("ArriveDate");
                    this.OnArriveDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'CInStatus' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(1)]
        public string CInStatus
        {
            get
            {
                return this._cInStatus;
            }
            set
            {
                if ((this._cInStatus != value))
                {
                    this.OnCInStatusChanging(value);
                    this.ValidateProperty("CInStatus", value);
                    this._cInStatus = value;
                    this.RaisePropertyChanged("CInStatus");
                    this.OnCInStatusChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepartureDate' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public DateTime DepartureDate
        {
            get
            {
                return this._departureDate;
            }
            set
            {
                if ((this._departureDate != value))
                {
                    this.OnDepartureDateChanging(value);
                    this.ValidateProperty("DepartureDate", value);
                    this._departureDate = value;
                    this.RaisePropertyChanged("DepartureDate");
                    this.OnDepartureDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaisePropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Number' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(10)]
        public string Number
        {
            get
            {
                return this._number;
            }
            set
            {
                if ((this._number != value))
                {
                    this.OnNumberChanging(value);
                    this.ValidateProperty("Number", value);
                    this._number = value;
                    this.RaisePropertyChanged("Number");
                    this.OnNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SearchName' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string SearchName
        {
            get
            {
                return this._searchName;
            }
            set
            {
                if ((this._searchName != value))
                {
                    this.OnSearchNameChanging(value);
                    this.ValidateProperty("SearchName", value);
                    this._searchName = value;
                    this.RaisePropertyChanged("SearchName");
                    this.OnSearchNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Telephone' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Telephone
        {
            get
            {
                return this._telephone;
            }
            set
            {
                if ((this._telephone != value))
                {
                    this.OnTelephoneChanging(value);
                    this.RaiseDataMemberChanging("Telephone");
                    this.ValidateProperty("Telephone", value);
                    this._telephone = value;
                    this.RaiseDataMemberChanged("Telephone");
                    this.OnTelephoneChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((((this._cInStatus == null) 
                        || (this._name == null)) 
                        || (this._number == null)) 
                        || (this._searchName == null)))
            {
                return null;
            }
            return EntityKey.Create(this._arriveDate, this._cInStatus, this._departureDate, this._id, this._name, this._number, this._searchName);
        }
    }
    
    /// <summary>
    /// The 'View_SPA_PersonelIzin' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class View_SPA_PersonelIzin : Entity
    {
        
        private Nullable<DateTime> _baslangicTarihi;
        
        private Nullable<DateTime> _bitisTarihi;
        
        private Guid _izinID;
        
        private Guid _oid;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBaslangicTarihiChanging(Nullable<DateTime> value);
        partial void OnBaslangicTarihiChanged();
        partial void OnBitisTarihiChanging(Nullable<DateTime> value);
        partial void OnBitisTarihiChanged();
        partial void OnIzinIDChanging(Guid value);
        partial void OnIzinIDChanged();
        partial void OnOIDChanging(Guid value);
        partial void OnOIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="View_SPA_PersonelIzin"/> class.
        /// </summary>
        public View_SPA_PersonelIzin()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BaslangicTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> BaslangicTarihi
        {
            get
            {
                return this._baslangicTarihi;
            }
            set
            {
                if ((this._baslangicTarihi != value))
                {
                    this.OnBaslangicTarihiChanging(value);
                    this.RaiseDataMemberChanging("BaslangicTarihi");
                    this.ValidateProperty("BaslangicTarihi", value);
                    this._baslangicTarihi = value;
                    this.RaiseDataMemberChanged("BaslangicTarihi");
                    this.OnBaslangicTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BitisTarihi' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> BitisTarihi
        {
            get
            {
                return this._bitisTarihi;
            }
            set
            {
                if ((this._bitisTarihi != value))
                {
                    this.OnBitisTarihiChanging(value);
                    this.RaiseDataMemberChanging("BitisTarihi");
                    this.ValidateProperty("BitisTarihi", value);
                    this._bitisTarihi = value;
                    this.RaiseDataMemberChanged("BitisTarihi");
                    this.OnBitisTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid IzinID
        {
            get
            {
                return this._izinID;
            }
            set
            {
                if ((this._izinID != value))
                {
                    this.OnIzinIDChanging(value);
                    this.ValidateProperty("IzinID", value);
                    this._izinID = value;
                    this.RaisePropertyChanged("IzinID");
                    this.OnIzinIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid OID
        {
            get
            {
                return this._oid;
            }
            set
            {
                if ((this._oid != value))
                {
                    this.OnOIDChanging(value);
                    this.ValidateProperty("OID", value);
                    this._oid = value;
                    this.RaisePropertyChanged("OID");
                    this.OnOIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return EntityKey.Create(this._izinID, this._oid);
        }
    }
    
    /// <summary>
    /// The 'View_SPA_PersonelProfil' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class View_SPA_PersonelProfil : Entity
    {
        
        private string _adi;
        
        private Nullable<Guid> _departmanID;
        
        private byte[] _personelFoto;
        
        private Guid _personelID;
        
        private Nullable<Guid> _personelProfilID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnDepartmanIDChanging(Nullable<Guid> value);
        partial void OnDepartmanIDChanged();
        partial void OnPersonelFotoChanging(byte[] value);
        partial void OnPersonelFotoChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnPersonelProfilIDChanging(Nullable<Guid> value);
        partial void OnPersonelProfilIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="View_SPA_PersonelProfil"/> class.
        /// </summary>
        public View_SPA_PersonelProfil()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Adi' value.
        /// </summary>
        [DataMember()]
        [StringLength(100)]
        public string Adi
        {
            get
            {
                return this._adi;
            }
            set
            {
                if ((this._adi != value))
                {
                    this.OnAdiChanging(value);
                    this.RaiseDataMemberChanging("Adi");
                    this.ValidateProperty("Adi", value);
                    this._adi = value;
                    this.RaiseDataMemberChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DepartmanID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> DepartmanID
        {
            get
            {
                return this._departmanID;
            }
            set
            {
                if ((this._departmanID != value))
                {
                    this.OnDepartmanIDChanging(value);
                    this.RaiseDataMemberChanging("DepartmanID");
                    this.ValidateProperty("DepartmanID", value);
                    this._departmanID = value;
                    this.RaiseDataMemberChanged("DepartmanID");
                    this.OnDepartmanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelFoto' value.
        /// </summary>
        [DataMember()]
        public byte[] PersonelFoto
        {
            get
            {
                return this._personelFoto;
            }
            set
            {
                if ((this._personelFoto != value))
                {
                    this.OnPersonelFotoChanging(value);
                    this.RaiseDataMemberChanging("PersonelFoto");
                    this.ValidateProperty("PersonelFoto", value);
                    this._personelFoto = value;
                    this.RaiseDataMemberChanged("PersonelFoto");
                    this.OnPersonelFotoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaisePropertyChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelProfilID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> PersonelProfilID
        {
            get
            {
                return this._personelProfilID;
            }
            set
            {
                if ((this._personelProfilID != value))
                {
                    this.OnPersonelProfilIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelProfilID");
                    this.ValidateProperty("PersonelProfilID", value);
                    this._personelProfilID = value;
                    this.RaiseDataMemberChanged("PersonelProfilID");
                    this.OnPersonelProfilIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._personelID;
        }
    }
    
    /// <summary>
    /// The 'View_SPA_ReservationList' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class View_SPA_ReservationList : Entity
    {
        
        private DateTime _endDateTime;
        
        private string _fullName;
        
        private Nullable<Guid> _guestID;
        
        private string _guestNote;
        
        private Guid _personelID;
        
        private Guid _reservationID;
        
        private string _roomNumber;
        
        private Nullable<int> _servisTime;
        
        private DateTime _startDateTime;
        
        private Nullable<int> _statusID;
        
        private string _telephone;
        
        private Nullable<Guid> _therapyID;
        
        private string _therapyName;
        
        private string _xSchDesc;
        
        private string _xSchLocation;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnEndDateTimeChanging(DateTime value);
        partial void OnEndDateTimeChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnGuestIDChanging(Nullable<Guid> value);
        partial void OnGuestIDChanged();
        partial void OnGuestNoteChanging(string value);
        partial void OnGuestNoteChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnReservationIDChanging(Guid value);
        partial void OnReservationIDChanged();
        partial void OnRoomNumberChanging(string value);
        partial void OnRoomNumberChanged();
        partial void OnServisTimeChanging(Nullable<int> value);
        partial void OnServisTimeChanged();
        partial void OnStartDateTimeChanging(DateTime value);
        partial void OnStartDateTimeChanged();
        partial void OnStatusIDChanging(Nullable<int> value);
        partial void OnStatusIDChanged();
        partial void OnTelephoneChanging(string value);
        partial void OnTelephoneChanged();
        partial void OnTherapyIDChanging(Nullable<Guid> value);
        partial void OnTherapyIDChanged();
        partial void OnTherapyNameChanging(string value);
        partial void OnTherapyNameChanged();
        partial void OnXSchDescChanging(string value);
        partial void OnXSchDescChanged();
        partial void OnXSchLocationChanging(string value);
        partial void OnXSchLocationChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="View_SPA_ReservationList"/> class.
        /// </summary>
        public View_SPA_ReservationList()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'EndDateTime' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public DateTime EndDateTime
        {
            get
            {
                return this._endDateTime;
            }
            set
            {
                if ((this._endDateTime != value))
                {
                    this.OnEndDateTimeChanging(value);
                    this.ValidateProperty("EndDateTime", value);
                    this._endDateTime = value;
                    this.RaisePropertyChanged("EndDateTime");
                    this.OnEndDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FullName' value.
        /// </summary>
        [DataMember()]
        [StringLength(113)]
        public string FullName
        {
            get
            {
                return this._fullName;
            }
            set
            {
                if ((this._fullName != value))
                {
                    this.OnFullNameChanging(value);
                    this.RaiseDataMemberChanging("FullName");
                    this.ValidateProperty("FullName", value);
                    this._fullName = value;
                    this.RaiseDataMemberChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.RaiseDataMemberChanging("GuestID");
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaiseDataMemberChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestNote' value.
        /// </summary>
        [DataMember()]
        [StringLength(500)]
        public string GuestNote
        {
            get
            {
                return this._guestNote;
            }
            set
            {
                if ((this._guestNote != value))
                {
                    this.OnGuestNoteChanging(value);
                    this.RaiseDataMemberChanging("GuestNote");
                    this.ValidateProperty("GuestNote", value);
                    this._guestNote = value;
                    this.RaiseDataMemberChanged("GuestNote");
                    this.OnGuestNoteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaisePropertyChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReservationID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ReservationID
        {
            get
            {
                return this._reservationID;
            }
            set
            {
                if ((this._reservationID != value))
                {
                    this.OnReservationIDChanging(value);
                    this.ValidateProperty("ReservationID", value);
                    this._reservationID = value;
                    this.RaisePropertyChanged("ReservationID");
                    this.OnReservationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RoomNumber' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(10)]
        public string RoomNumber
        {
            get
            {
                return this._roomNumber;
            }
            set
            {
                if ((this._roomNumber != value))
                {
                    this.OnRoomNumberChanging(value);
                    this.ValidateProperty("RoomNumber", value);
                    this._roomNumber = value;
                    this.RaisePropertyChanged("RoomNumber");
                    this.OnRoomNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ServisTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> ServisTime
        {
            get
            {
                return this._servisTime;
            }
            set
            {
                if ((this._servisTime != value))
                {
                    this.OnServisTimeChanging(value);
                    this.RaiseDataMemberChanging("ServisTime");
                    this.ValidateProperty("ServisTime", value);
                    this._servisTime = value;
                    this.RaiseDataMemberChanged("ServisTime");
                    this.OnServisTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StartDateTime' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public DateTime StartDateTime
        {
            get
            {
                return this._startDateTime;
            }
            set
            {
                if ((this._startDateTime != value))
                {
                    this.OnStartDateTimeChanging(value);
                    this.ValidateProperty("StartDateTime", value);
                    this._startDateTime = value;
                    this.RaisePropertyChanged("StartDateTime");
                    this.OnStartDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'StatusID' value.
        /// </summary>
        [DataMember()]
        public Nullable<int> StatusID
        {
            get
            {
                return this._statusID;
            }
            set
            {
                if ((this._statusID != value))
                {
                    this.OnStatusIDChanging(value);
                    this.RaiseDataMemberChanging("StatusID");
                    this.ValidateProperty("StatusID", value);
                    this._statusID = value;
                    this.RaiseDataMemberChanged("StatusID");
                    this.OnStatusIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Telephone' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string Telephone
        {
            get
            {
                return this._telephone;
            }
            set
            {
                if ((this._telephone != value))
                {
                    this.OnTelephoneChanging(value);
                    this.RaiseDataMemberChanging("Telephone");
                    this.ValidateProperty("Telephone", value);
                    this._telephone = value;
                    this.RaiseDataMemberChanged("Telephone");
                    this.OnTelephoneChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> TherapyID
        {
            get
            {
                return this._therapyID;
            }
            set
            {
                if ((this._therapyID != value))
                {
                    this.OnTherapyIDChanging(value);
                    this.RaiseDataMemberChanging("TherapyID");
                    this.ValidateProperty("TherapyID", value);
                    this._therapyID = value;
                    this.RaiseDataMemberChanged("TherapyID");
                    this.OnTherapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyName' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(250)]
        public string TherapyName
        {
            get
            {
                return this._therapyName;
            }
            set
            {
                if ((this._therapyName != value))
                {
                    this.OnTherapyNameChanging(value);
                    this.ValidateProperty("TherapyName", value);
                    this._therapyName = value;
                    this.RaisePropertyChanged("TherapyName");
                    this.OnTherapyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'XSchDesc' value.
        /// </summary>
        [DataMember()]
        [StringLength(553)]
        public string XSchDesc
        {
            get
            {
                return this._xSchDesc;
            }
            set
            {
                if ((this._xSchDesc != value))
                {
                    this.OnXSchDescChanging(value);
                    this.RaiseDataMemberChanging("XSchDesc");
                    this.ValidateProperty("XSchDesc", value);
                    this._xSchDesc = value;
                    this.RaiseDataMemberChanged("XSchDesc");
                    this.OnXSchDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'XSchLocation' value.
        /// </summary>
        [DataMember()]
        [StringLength(257)]
        public string XSchLocation
        {
            get
            {
                return this._xSchLocation;
            }
            set
            {
                if ((this._xSchLocation != value))
                {
                    this.OnXSchLocationChanging(value);
                    this.RaiseDataMemberChanging("XSchLocation");
                    this.ValidateProperty("XSchLocation", value);
                    this._xSchLocation = value;
                    this.RaiseDataMemberChanged("XSchLocation");
                    this.OnXSchLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._roomNumber == null) 
                        || (this._therapyName == null)))
            {
                return null;
            }
            return EntityKey.Create(this._endDateTime, this._personelID, this._reservationID, this._roomNumber, this._startDateTime, this._therapyName);
        }
    }
    
    /// <summary>
    /// The 'View_SPA_ScheduleReservation' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web")]
    public sealed partial class View_SPA_ScheduleReservation : Entity
    {
        
        private string _firstName;
        
        private Guid _guestID;
        
        private string _name;
        
        private string _number;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnGuestIDChanging(Guid value);
        partial void OnGuestIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnNumberChanging(string value);
        partial void OnNumberChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="View_SPA_ScheduleReservation"/> class.
        /// </summary>
        public View_SPA_ScheduleReservation()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [StringLength(50)]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaisePropertyChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Name' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnNameChanging(value);
                    this.ValidateProperty("Name", value);
                    this._name = value;
                    this.RaisePropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Number' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(10)]
        public string Number
        {
            get
            {
                return this._number;
            }
            set
            {
                if ((this._number != value))
                {
                    this.OnNumberChanging(value);
                    this.ValidateProperty("Number", value);
                    this._number = value;
                    this.RaisePropertyChanged("Number");
                    this.OnNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            if (((this._name == null) 
                        || (this._number == null)))
            {
                return null;
            }
            return EntityKey.Create(this._guestID, this._name, this._number);
        }
    }
}
namespace OSYS.Web.DTO
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    
    
    /// <summary>
    /// The 'DbGuest' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DbGuest : Entity
    {
        
        private DateTime _arrival;
        
        private string _desc;
        
        private Nullable<Guid> _diagnosisID;
        
        private int _essiantelDate;
        
        private string _firstName;
        
        private Guid _guestID;
        
        private string _guestName;
        
        private Guid _id;
        
        private string _lastName;
        
        private DateTime _release;
        
        private string _roomNumber;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnArrivalChanging(DateTime value);
        partial void OnArrivalChanged();
        partial void OnDescChanging(string value);
        partial void OnDescChanged();
        partial void OnDiagnosisIDChanging(Nullable<Guid> value);
        partial void OnDiagnosisIDChanged();
        partial void OnEssiantelDateChanging(int value);
        partial void OnEssiantelDateChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnGuestIDChanging(Guid value);
        partial void OnGuestIDChanged();
        partial void OnGuestNameChanging(string value);
        partial void OnGuestNameChanged();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnReleaseChanging(DateTime value);
        partial void OnReleaseChanged();
        partial void OnRoomNumberChanging(string value);
        partial void OnRoomNumberChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DbGuest"/> class.
        /// </summary>
        public DbGuest()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Arrival' value.
        /// </summary>
        [DataMember()]
        public DateTime Arrival
        {
            get
            {
                return this._arrival;
            }
            set
            {
                if ((this._arrival != value))
                {
                    this.OnArrivalChanging(value);
                    this.RaiseDataMemberChanging("Arrival");
                    this.ValidateProperty("Arrival", value);
                    this._arrival = value;
                    this.RaiseDataMemberChanged("Arrival");
                    this.OnArrivalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Desc' value.
        /// </summary>
        [DataMember()]
        public string Desc
        {
            get
            {
                return this._desc;
            }
            set
            {
                if ((this._desc != value))
                {
                    this.OnDescChanging(value);
                    this.RaiseDataMemberChanging("Desc");
                    this.ValidateProperty("Desc", value);
                    this._desc = value;
                    this.RaiseDataMemberChanged("Desc");
                    this.OnDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'DiagnosisID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> DiagnosisID
        {
            get
            {
                return this._diagnosisID;
            }
            set
            {
                if ((this._diagnosisID != value))
                {
                    this.OnDiagnosisIDChanging(value);
                    this.RaiseDataMemberChanging("DiagnosisID");
                    this.ValidateProperty("DiagnosisID", value);
                    this._diagnosisID = value;
                    this.RaiseDataMemberChanged("DiagnosisID");
                    this.OnDiagnosisIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EssiantelDate' value.
        /// </summary>
        [DataMember()]
        public int EssiantelDate
        {
            get
            {
                return this._essiantelDate;
            }
            set
            {
                if ((this._essiantelDate != value))
                {
                    this.OnEssiantelDateChanging(value);
                    this.RaiseDataMemberChanging("EssiantelDate");
                    this.ValidateProperty("EssiantelDate", value);
                    this._essiantelDate = value;
                    this.RaiseDataMemberChanged("EssiantelDate");
                    this.OnEssiantelDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid GuestID
        {
            get
            {
                return this._guestID;
            }
            set
            {
                if ((this._guestID != value))
                {
                    this.OnGuestIDChanging(value);
                    this.ValidateProperty("GuestID", value);
                    this._guestID = value;
                    this.RaisePropertyChanged("GuestID");
                    this.OnGuestIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'GuestName' value.
        /// </summary>
        [DataMember()]
        public string GuestName
        {
            get
            {
                return this._guestName;
            }
            set
            {
                if ((this._guestName != value))
                {
                    this.OnGuestNameChanging(value);
                    this.RaiseDataMemberChanging("GuestName");
                    this.ValidateProperty("GuestName", value);
                    this._guestName = value;
                    this.RaiseDataMemberChanged("GuestName");
                    this.OnGuestNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.RaiseDataMemberChanging("ID");
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaiseDataMemberChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaiseDataMemberChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Release' value.
        /// </summary>
        [DataMember()]
        public DateTime Release
        {
            get
            {
                return this._release;
            }
            set
            {
                if ((this._release != value))
                {
                    this.OnReleaseChanging(value);
                    this.RaiseDataMemberChanging("Release");
                    this.ValidateProperty("Release", value);
                    this._release = value;
                    this.RaiseDataMemberChanged("Release");
                    this.OnReleaseChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RoomNumber' value.
        /// </summary>
        [DataMember()]
        public string RoomNumber
        {
            get
            {
                return this._roomNumber;
            }
            set
            {
                if ((this._roomNumber != value))
                {
                    this.OnRoomNumberChanging(value);
                    this.RaiseDataMemberChanging("RoomNumber");
                    this.ValidateProperty("RoomNumber", value);
                    this._roomNumber = value;
                    this.RaiseDataMemberChanged("RoomNumber");
                    this.OnRoomNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._guestID;
        }
    }
    
    /// <summary>
    /// The 'DBGuestServicePlan' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DBGuestServicePlan : Entity
    {
        
        private Guid _guestTherapyID;
        
        private bool _isCompleted;
        
        private string _servisDesc;
        
        private Nullable<Guid> _therapID;
        
        private Nullable<DateTime> _therapyDateTime;
        
        private string _therapyName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnGuestTherapyIDChanging(Guid value);
        partial void OnGuestTherapyIDChanged();
        partial void OnIsCompletedChanging(bool value);
        partial void OnIsCompletedChanged();
        partial void OnServisDescChanging(string value);
        partial void OnServisDescChanged();
        partial void OnTherapIDChanging(Nullable<Guid> value);
        partial void OnTherapIDChanged();
        partial void OnTherapyDateTimeChanging(Nullable<DateTime> value);
        partial void OnTherapyDateTimeChanged();
        partial void OnTherapyNameChanging(string value);
        partial void OnTherapyNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DBGuestServicePlan"/> class.
        /// </summary>
        public DBGuestServicePlan()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'GuestTherapyID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid GuestTherapyID
        {
            get
            {
                return this._guestTherapyID;
            }
            set
            {
                if ((this._guestTherapyID != value))
                {
                    this.OnGuestTherapyIDChanging(value);
                    this.ValidateProperty("GuestTherapyID", value);
                    this._guestTherapyID = value;
                    this.RaisePropertyChanged("GuestTherapyID");
                    this.OnGuestTherapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IsCompleted' value.
        /// </summary>
        [DataMember()]
        public bool IsCompleted
        {
            get
            {
                return this._isCompleted;
            }
            set
            {
                if ((this._isCompleted != value))
                {
                    this.OnIsCompletedChanging(value);
                    this.RaiseDataMemberChanging("IsCompleted");
                    this.ValidateProperty("IsCompleted", value);
                    this._isCompleted = value;
                    this.RaiseDataMemberChanged("IsCompleted");
                    this.OnIsCompletedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ServisDesc' value.
        /// </summary>
        [DataMember()]
        public string ServisDesc
        {
            get
            {
                return this._servisDesc;
            }
            set
            {
                if ((this._servisDesc != value))
                {
                    this.OnServisDescChanging(value);
                    this.RaiseDataMemberChanging("ServisDesc");
                    this.ValidateProperty("ServisDesc", value);
                    this._servisDesc = value;
                    this.RaiseDataMemberChanged("ServisDesc");
                    this.OnServisDescChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> TherapID
        {
            get
            {
                return this._therapID;
            }
            set
            {
                if ((this._therapID != value))
                {
                    this.OnTherapIDChanging(value);
                    this.RaiseDataMemberChanging("TherapID");
                    this.ValidateProperty("TherapID", value);
                    this._therapID = value;
                    this.RaiseDataMemberChanged("TherapID");
                    this.OnTherapIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyDateTime' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> TherapyDateTime
        {
            get
            {
                return this._therapyDateTime;
            }
            set
            {
                if ((this._therapyDateTime != value))
                {
                    this.OnTherapyDateTimeChanging(value);
                    this.RaiseDataMemberChanging("TherapyDateTime");
                    this.ValidateProperty("TherapyDateTime", value);
                    this._therapyDateTime = value;
                    this.RaiseDataMemberChanged("TherapyDateTime");
                    this.OnTherapyDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyName' value.
        /// </summary>
        [DataMember()]
        public string TherapyName
        {
            get
            {
                return this._therapyName;
            }
            set
            {
                if ((this._therapyName != value))
                {
                    this.OnTherapyNameChanging(value);
                    this.RaiseDataMemberChanging("TherapyName");
                    this.ValidateProperty("TherapyName", value);
                    this._therapyName = value;
                    this.RaiseDataMemberChanged("TherapyName");
                    this.OnTherapyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._guestTherapyID;
        }
    }
    
    /// <summary>
    /// The 'DBIzinPersonel' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DBIzinPersonel : Entity
    {
        
        private DateTime _baslangicTarihi;
        
        private DateTime _bitisTarihi;
        
        private Guid _izinID;
        
        private Guid _personelID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBaslangicTarihiChanging(DateTime value);
        partial void OnBaslangicTarihiChanged();
        partial void OnBitisTarihiChanging(DateTime value);
        partial void OnBitisTarihiChanged();
        partial void OnIzinIDChanging(Guid value);
        partial void OnIzinIDChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DBIzinPersonel"/> class.
        /// </summary>
        public DBIzinPersonel()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'BaslangicTarihi' value.
        /// </summary>
        [DataMember()]
        public DateTime BaslangicTarihi
        {
            get
            {
                return this._baslangicTarihi;
            }
            set
            {
                if ((this._baslangicTarihi != value))
                {
                    this.OnBaslangicTarihiChanging(value);
                    this.RaiseDataMemberChanging("BaslangicTarihi");
                    this.ValidateProperty("BaslangicTarihi", value);
                    this._baslangicTarihi = value;
                    this.RaiseDataMemberChanged("BaslangicTarihi");
                    this.OnBaslangicTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BitisTarihi' value.
        /// </summary>
        [DataMember()]
        public DateTime BitisTarihi
        {
            get
            {
                return this._bitisTarihi;
            }
            set
            {
                if ((this._bitisTarihi != value))
                {
                    this.OnBitisTarihiChanging(value);
                    this.RaiseDataMemberChanging("BitisTarihi");
                    this.ValidateProperty("BitisTarihi", value);
                    this._bitisTarihi = value;
                    this.RaiseDataMemberChanged("BitisTarihi");
                    this.OnBitisTarihiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'IzinID' value.
        /// </summary>
        [DataMember()]
        public Guid IzinID
        {
            get
            {
                return this._izinID;
            }
            set
            {
                if ((this._izinID != value))
                {
                    this.OnIzinIDChanging(value);
                    this.RaiseDataMemberChanging("IzinID");
                    this.ValidateProperty("IzinID", value);
                    this._izinID = value;
                    this.RaiseDataMemberChanged("IzinID");
                    this.OnIzinIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaisePropertyChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._personelID;
        }
    }
    
    /// <summary>
    /// The 'DbLogin' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DbLogin : Entity
    {
        
        private Guid _departmanID;
        
        private string _password;
        
        private Nullable<Guid> _personelGorevID;
        
        private Guid _personelID;
        
        private string _personelName;
        
        private string _username;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnDepartmanIDChanging(Guid value);
        partial void OnDepartmanIDChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnPersonelGorevIDChanging(Nullable<Guid> value);
        partial void OnPersonelGorevIDChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnPersonelNameChanging(string value);
        partial void OnPersonelNameChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DbLogin"/> class.
        /// </summary>
        public DbLogin()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'DepartmanID' value.
        /// </summary>
        [DataMember()]
        public Guid DepartmanID
        {
            get
            {
                return this._departmanID;
            }
            set
            {
                if ((this._departmanID != value))
                {
                    this.OnDepartmanIDChanging(value);
                    this.RaiseDataMemberChanging("DepartmanID");
                    this.ValidateProperty("DepartmanID", value);
                    this._departmanID = value;
                    this.RaiseDataMemberChanged("DepartmanID");
                    this.OnDepartmanIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Password' value.
        /// </summary>
        [DataMember()]
        public string Password
        {
            get
            {
                return this._password;
            }
            set
            {
                if ((this._password != value))
                {
                    this.OnPasswordChanging(value);
                    this.RaiseDataMemberChanging("Password");
                    this.ValidateProperty("Password", value);
                    this._password = value;
                    this.RaiseDataMemberChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelGorevID' value.
        /// </summary>
        [DataMember()]
        public Nullable<Guid> PersonelGorevID
        {
            get
            {
                return this._personelGorevID;
            }
            set
            {
                if ((this._personelGorevID != value))
                {
                    this.OnPersonelGorevIDChanging(value);
                    this.RaiseDataMemberChanging("PersonelGorevID");
                    this.ValidateProperty("PersonelGorevID", value);
                    this._personelGorevID = value;
                    this.RaiseDataMemberChanged("PersonelGorevID");
                    this.OnPersonelGorevIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaisePropertyChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelName' value.
        /// </summary>
        [DataMember()]
        public string PersonelName
        {
            get
            {
                return this._personelName;
            }
            set
            {
                if ((this._personelName != value))
                {
                    this.OnPersonelNameChanging(value);
                    this.RaiseDataMemberChanging("PersonelName");
                    this.ValidateProperty("PersonelName", value);
                    this._personelName = value;
                    this.RaiseDataMemberChanged("PersonelName");
                    this.OnPersonelNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Username' value.
        /// </summary>
        [DataMember()]
        public string Username
        {
            get
            {
                return this._username;
            }
            set
            {
                if ((this._username != value))
                {
                    this.OnUsernameChanging(value);
                    this.RaiseDataMemberChanging("Username");
                    this.ValidateProperty("Username", value);
                    this._username = value;
                    this.RaiseDataMemberChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._personelID;
        }
    }
    
    /// <summary>
    /// The 'DbPersonel' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DbPersonel : Entity
    {
        
        private Guid _id;
        
        private string _personelAdi;
        
        private string _uzmanlikAlani;
        
        private bool _yedek;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(Guid value);
        partial void OnIDChanged();
        partial void OnPersonelAdiChanging(string value);
        partial void OnPersonelAdiChanged();
        partial void OnUzmanlikAlaniChanging(string value);
        partial void OnUzmanlikAlaniChanged();
        partial void OnYedekChanging(bool value);
        partial void OnYedekChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DbPersonel"/> class.
        /// </summary>
        public DbPersonel()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelAdi' value.
        /// </summary>
        [DataMember()]
        public string PersonelAdi
        {
            get
            {
                return this._personelAdi;
            }
            set
            {
                if ((this._personelAdi != value))
                {
                    this.OnPersonelAdiChanging(value);
                    this.RaiseDataMemberChanging("PersonelAdi");
                    this.ValidateProperty("PersonelAdi", value);
                    this._personelAdi = value;
                    this.RaiseDataMemberChanged("PersonelAdi");
                    this.OnPersonelAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'UzmanlikAlani' value.
        /// </summary>
        [DataMember()]
        public string UzmanlikAlani
        {
            get
            {
                return this._uzmanlikAlani;
            }
            set
            {
                if ((this._uzmanlikAlani != value))
                {
                    this.OnUzmanlikAlaniChanging(value);
                    this.RaiseDataMemberChanging("UzmanlikAlani");
                    this.ValidateProperty("UzmanlikAlani", value);
                    this._uzmanlikAlani = value;
                    this.RaiseDataMemberChanged("UzmanlikAlani");
                    this.OnUzmanlikAlaniChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Yedek' value.
        /// </summary>
        [DataMember()]
        public bool Yedek
        {
            get
            {
                return this._yedek;
            }
            set
            {
                if ((this._yedek != value))
                {
                    this.OnYedekChanging(value);
                    this.RaiseDataMemberChanging("Yedek");
                    this.ValidateProperty("Yedek", value);
                    this._yedek = value;
                    this.RaiseDataMemberChanged("Yedek");
                    this.OnYedekChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'DbPersonelJobDetail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DbPersonelJobDetail : Entity
    {
        
        private string _adi;
        
        private Guid _jobID;
        
        private string _jobName;
        
        private Guid _personelID;
        
        private byte[] _personelPhoto;
        
        private long _thrapyID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAdiChanging(string value);
        partial void OnAdiChanged();
        partial void OnJobIDChanging(Guid value);
        partial void OnJobIDChanged();
        partial void OnJobNameChanging(string value);
        partial void OnJobNameChanged();
        partial void OnPersonelIDChanging(Guid value);
        partial void OnPersonelIDChanged();
        partial void OnPersonelPhotoChanging(byte[] value);
        partial void OnPersonelPhotoChanged();
        partial void OnThrapyIDChanging(long value);
        partial void OnThrapyIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DbPersonelJobDetail"/> class.
        /// </summary>
        public DbPersonelJobDetail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Adi' value.
        /// </summary>
        [DataMember()]
        public string Adi
        {
            get
            {
                return this._adi;
            }
            set
            {
                if ((this._adi != value))
                {
                    this.OnAdiChanging(value);
                    this.RaiseDataMemberChanging("Adi");
                    this.ValidateProperty("Adi", value);
                    this._adi = value;
                    this.RaiseDataMemberChanged("Adi");
                    this.OnAdiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'JobID' value.
        /// </summary>
        [DataMember()]
        public Guid JobID
        {
            get
            {
                return this._jobID;
            }
            set
            {
                if ((this._jobID != value))
                {
                    this.OnJobIDChanging(value);
                    this.RaiseDataMemberChanging("JobID");
                    this.ValidateProperty("JobID", value);
                    this._jobID = value;
                    this.RaiseDataMemberChanged("JobID");
                    this.OnJobIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'JobName' value.
        /// </summary>
        [DataMember()]
        public string JobName
        {
            get
            {
                return this._jobName;
            }
            set
            {
                if ((this._jobName != value))
                {
                    this.OnJobNameChanging(value);
                    this.RaiseDataMemberChanging("JobName");
                    this.ValidateProperty("JobName", value);
                    this._jobName = value;
                    this.RaiseDataMemberChanged("JobName");
                    this.OnJobNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid PersonelID
        {
            get
            {
                return this._personelID;
            }
            set
            {
                if ((this._personelID != value))
                {
                    this.OnPersonelIDChanging(value);
                    this.ValidateProperty("PersonelID", value);
                    this._personelID = value;
                    this.RaisePropertyChanged("PersonelID");
                    this.OnPersonelIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PersonelPhoto' value.
        /// </summary>
        [DataMember()]
        public byte[] PersonelPhoto
        {
            get
            {
                return this._personelPhoto;
            }
            set
            {
                if ((this._personelPhoto != value))
                {
                    this.OnPersonelPhotoChanging(value);
                    this.RaiseDataMemberChanging("PersonelPhoto");
                    this.ValidateProperty("PersonelPhoto", value);
                    this._personelPhoto = value;
                    this.RaiseDataMemberChanged("PersonelPhoto");
                    this.OnPersonelPhotoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ThrapyID' value.
        /// </summary>
        [DataMember()]
        public long ThrapyID
        {
            get
            {
                return this._thrapyID;
            }
            set
            {
                if ((this._thrapyID != value))
                {
                    this.OnThrapyIDChanging(value);
                    this.RaiseDataMemberChanging("ThrapyID");
                    this.ValidateProperty("ThrapyID", value);
                    this._thrapyID = value;
                    this.RaiseDataMemberChanged("ThrapyID");
                    this.OnThrapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._personelID;
        }
    }
    
    /// <summary>
    /// The 'DbPersonelTherapy' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/OSYS.Web.DTO")]
    public sealed partial class DbPersonelTherapy : Entity
    {
        
        private int _servisTime;
        
        private Guid _therapyID;
        
        private string _therapyName;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnServisTimeChanging(int value);
        partial void OnServisTimeChanged();
        partial void OnTherapyIDChanging(Guid value);
        partial void OnTherapyIDChanged();
        partial void OnTherapyNameChanging(string value);
        partial void OnTherapyNameChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DbPersonelTherapy"/> class.
        /// </summary>
        public DbPersonelTherapy()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ServisTime' value.
        /// </summary>
        [DataMember()]
        public int ServisTime
        {
            get
            {
                return this._servisTime;
            }
            set
            {
                if ((this._servisTime != value))
                {
                    this.OnServisTimeChanging(value);
                    this.RaiseDataMemberChanging("ServisTime");
                    this.ValidateProperty("ServisTime", value);
                    this._servisTime = value;
                    this.RaiseDataMemberChanged("ServisTime");
                    this.OnServisTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public Guid TherapyID
        {
            get
            {
                return this._therapyID;
            }
            set
            {
                if ((this._therapyID != value))
                {
                    this.OnTherapyIDChanging(value);
                    this.ValidateProperty("TherapyID", value);
                    this._therapyID = value;
                    this.RaisePropertyChanged("TherapyID");
                    this.OnTherapyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TherapyName' value.
        /// </summary>
        [DataMember()]
        public string TherapyName
        {
            get
            {
                return this._therapyName;
            }
            set
            {
                if ((this._therapyName != value))
                {
                    this.OnTherapyNameChanging(value);
                    this.RaiseDataMemberChanging("TherapyName");
                    this.ValidateProperty("TherapyName", value);
                    this._therapyName = value;
                    this.RaiseDataMemberChanged("TherapyName");
                    this.OnTherapyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._therapyID;
        }
    }
}
